{
    "version": "https://jsonfeed.org/version/1",
    "title": "My Blog • All posts by \"小工具\" category",
    "description": "對資訊領域充滿熱忱的學生",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/calculator/",
            "url": "http://example.com/calculator/",
            "title": "學期成績計算",
            "date_published": "2024-09-17T07:52:47.265Z",
            "content_html": "<div class=\"note warning\">\n<p>此頁面目前僅支援深色背景模式；淺色模式可能導致渲染錯誤，但不影響計算結果。</p>\n</div>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n/* 全局樣式，針對深色和淺色模式進行調整 */\ninput, button {\n    font-family: Arial, sans-serif; /* 調整字體 */\n    padding: 12px;\n    margin-bottom: 20px;\n    border-radius: 6px; /* 圓弧效果 */\n    width: 100%;\n    font-size: 16px;\n    box-sizing: border-box;\n    transition: background-color 0.3s, color 0.3s, box-shadow 0.3s; /* 增加過渡效果 */\n}\n\ninput::placeholder {\n    color: #888; /* 調整佔位符字體顏色 */\n}\n\n/* 系統淺色模式 */\n@media (prefers-color-scheme: light) {\n    body {\n        background-color: #f7f7f7; /* 淺灰背景 */\n        color: #333;\n    }\n    input {\n        background-color: #ffffff; /* 白色輸入框 */\n        color: #333;\n        border: 1px solid #ddd; /* 淺灰邊框 */\n    }\n    button {\n        background-color: #007bff; /* 藍色按鈕 */\n        color: white;\n        border: none;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加陰影 */\n        cursor: pointer; /* 鼠標懸停時顯示手形光標 */\n    }\n    button:hover {\n        background-color: #0056b3; /* 深藍色按鈕懸停效果 */\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* 增強陰影效果 */\n        cursor: pointer; /* 鼠標懸停時顯示手形光標 */\n    }\n}\n\n/* 系統深色模式 */\n@media (prefers-color-scheme: dark) {\n    body {\n        background-color: #1e1e1e; /* 深灰背景 */\n        color: #e0e0e0;\n    }\n    input {\n        background-color: #333333; /* 深灰色輸入框 */\n        color: #e0e0e0;\n        border: 1px solid #444;\n    }\n    button {\n        background-color: #555; /* 灰色按鈕 */\n        color: white;\n        border: none;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加陰影 */\n        cursor: pointer; /* 鼠標懸停時顯示手形光標 */\n    }\n    button:hover {\n        background-color: #777; /* 按鈕懸停時變亮 */\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* 增強陰影效果 */\n        cursor: pointer; /* 鼠標懸停時顯示手形光標 */\n    }\n}\n\n    </style>\n</head>\n<body>\n    <form id=\"score-form\">\n        <label for=\"score1\">第一次段考成績:</label>\n        <input type=\"number\" id=\"score1\" name=\"score1\" placeholder=\"必填\" min=\"0\" max=\"100\" required>\n\n        <label for=\"score2\">第二次段考成績:</label>\n        <input type=\"number\" id=\"score2\" name=\"score2\" placeholder=\"必填\" min=\"0\" max=\"100\" required>\n\n        <label for=\"score3\">第三次段考成績:</label>\n        <input type=\"number\" id=\"score3\" name=\"score3\" placeholder=\"選填\" min=\"0\" max=\"100\">\n\n        <label for=\"score4\">平時成績:</label>\n        <input type=\"number\" id=\"score4\" name=\"score4\" placeholder=\"選填\" min=\"0\" max=\"100\">\n\n        <label for=\"previous_score\">上學期成績:</label>\n        <input type=\"number\" id=\"previous_score\" name=\"previous_score\" placeholder=\"選填\" min=\"0\" max=\"100\">\n\n        <button type=\"submit\">計算</button>\n    </form>\n\n    <h2>計算結果</h2>\n    <p id=\"result\">計算結果僅供參考，祝段考順利！</p>\n\n    <script>\n        document.getElementById('score-form').addEventListener('submit', function(event) {\n            event.preventDefault();\n\n            const getInputValue = (id) => parseFloat(document.getElementById(id).value);\n            const roundToOneDecimal = (num) => parseFloat(num.toFixed(1));\n\n            const score1 = getInputValue('score1');\n            const score2 = getInputValue('score2');\n            const score3 = getInputValue('score3');\n            const score4 = getInputValue('score4');\n            const previousScore = getInputValue('previous_score');\n\n            const weightedScore1 = roundToOneDecimal(score1 * 0.2);\n            const weightedScore2 = roundToOneDecimal(score2 * 0.2);\n            const weightedScore3 = isNaN(score3) ? 0 : roundToOneDecimal(score3 * 0.3);\n            const weightedScore4 = isNaN(score4) ? 0 : roundToOneDecimal(score4 * 0.3);\n            const totalScore = roundToOneDecimal(weightedScore1 + weightedScore2 + weightedScore3 + weightedScore4);\n\n            let responseMessage = \"\";\n\n            const calculateRequiredScore = (currentTotal, weight) => roundToOneDecimal((59.5 - currentTotal) / weight);\n            const calculateRequiredBothSemesters = (currentTotal, weight) => roundToOneDecimal((120 - previousScore - currentTotal) / weight);\n\n            if (isNaN(score3) && isNaN(score4) && isNaN(previousScore)) {\n                responseMessage = `總分(三段+平時)至少為 ${calculateRequiredScore(weightedScore1 + weightedScore2, 0.6)*2} 分。`;\n            } else if (!isNaN(score3) && isNaN(score4) && isNaN(previousScore)) {\n                const requiredScore4 = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore3, 0.3);\n                responseMessage = `平時成績至少為 ${requiredScore4} 分。`;\n            } else if (isNaN(score3) && !isNaN(score4) && isNaN(previousScore)) {\n                const requiredScore3 = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore4, 0.3);\n                responseMessage = `第三次段考至少為 ${requiredScore3} 分。`;\n            } else if (isNaN(score3) && isNaN(score4) && !isNaN(previousScore)) {\n                const requiredScoreThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2, 0.6);\n                const requiredScoreBothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2, 0.6);\n                responseMessage = `本學期要通過總分至少為 ${requiredScoreThisSemester} 分。\\n兩學期皆通過總分至少為 ${requiredScoreBothSemesters} 分。`;\n            } else if (!isNaN(score3) && !isNaN(score4) && isNaN(previousScore)) {\n                responseMessage = totalScore >= 59.5 ? `恭喜本學期通過\\n(本學期成績 ${totalScore} 分)` : `本學期未通過\\n(本學期成績 ${totalScore} 分)`;\n            } else if (!isNaN(score3) && isNaN(score4) && !isNaN(previousScore)) {\n                const requiredScore4ThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore3, 0.3);\n                const requiredScore4BothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2 + weightedScore3, 0.3);\n                responseMessage = `本學期要通過，平時成績至少為 ${requiredScore4ThisSemester} 分。\\n兩學期皆通過，平時成績至少為 ${requiredScore4BothSemesters} 分。`;\n            } else if (isNaN(score3) && !isNaN(score4) && !isNaN(previousScore)) {\n                const requiredScore3ThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore4, 0.3);\n                const requiredScore3BothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2 + weightedScore4, 0.3);\n                responseMessage = `本學期要通過，第三次段考至少為 ${requiredScore3ThisSemester} 分。\\n兩學期皆通過，第三次段考至少為 ${requiredScore3BothSemesters} 分。`;\n            } else if (!isNaN(score3) && !isNaN(score4) && !isNaN(previousScore)) {\n                if ((totalScore + previousScore) >= 119.5) {\n                    responseMessage = `恭喜兩學期皆通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                } else if (totalScore >= 59.5) {\n                    responseMessage = `僅有本學期通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                } else if (previousScore >= 60) {\n                    responseMessage = `僅有上學期通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                } else {\n                    responseMessage = `本學期及上學期皆未通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                }\n            }\n            document.getElementById('result').innerText = responseMessage;\n        });\n    </script>\n</body>\n</html>\n\n<details><summary>成績計算方式及說明</summary><div>\n<h1 id=\"成績計算方式\"><a class=\"markdownIt-Anchor\" href=\"#成績計算方式\">#</a> 成績計算方式</h1>\n<h3 id=\"學期成績計算\"><a class=\"markdownIt-Anchor\" href=\"#學期成績計算\">#</a> 學期成績計算</h3>\n<ol>\n<li>第一、二次段考：各佔 20%</li>\n<li>三段、平時成績：各佔 30%</li>\n<li><ins>學期成績採四捨五入至整數位</ins></li>\n</ol>\n<h3 id=\"學年成績計算需輸入上學期成績\"><a class=\"markdownIt-Anchor\" href=\"#學年成績計算需輸入上學期成績\">#</a> 學年成績計算（需輸入上學期成績）</h3>\n<ol>\n<li>上、下學期成績：各佔 50%</li>\n<li><ins>學年成績採四捨五入至小數點後第一位</ins><br>\n</br></li>\n</ol>\n<h1 id=\"輸出內容說明\"><a class=\"markdownIt-Anchor\" href=\"#輸出內容說明\">#</a> 輸出內容說明</h1>\n<h3 id=\"若僅輸入第一-二次段考成績\"><a class=\"markdownIt-Anchor\" href=\"#若僅輸入第一-二次段考成績\">#</a> 若僅輸入第一、二次段考成績</h3>\n<ol>\n<li>若無上學期成績：輸出本學期通過 第三次段考和平時成績 最低所需的分數。</li>\n<li>若有上學期成績：額外輸出兩學期皆通過 第三次段考和平時成績 最低所需的分數。</li>\n</ol>\n<h3 id=\"若輸入兩次段考成績及三段或平時成績其中一項\"><a class=\"markdownIt-Anchor\" href=\"#若輸入兩次段考成績及三段或平時成績其中一項\">#</a> 若輸入兩次段考成績及三段或平時成績其中一項</h3>\n<ol>\n<li>若無上學期成績：輸出本學期通過 另一項 最低所需的分數。</li>\n<li>若有上學期成績：額外輸出兩學期皆通過 另一項 最低所需的分數。</li>\n</ol>\n<h3 id=\"若輸入所有成績\"><a class=\"markdownIt-Anchor\" href=\"#若輸入所有成績\">#</a> 若輸入所有成績</h3>\n<ol>\n<li>若無上學期成績：輸出本學期是否通過。</li>\n<li>若有上學期成績：輸出兩學期通過情況。</li>\n</ol>\n</div></details>\n",
            "tags": []
        }
    ]
}