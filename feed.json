{
    "version": "https://jsonfeed.org/version/1",
    "title": "My Blog",
    "description": "一位熱衷於資訊領域的學生",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/programming/cpp/cpp1/",
            "url": "http://example.com/programming/cpp/cpp1/",
            "title": "222",
            "date_published": "2024-09-18T16:24:52.000Z",
            "content_html": "<p>22222</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/programming/cpp/cpp0/",
            "url": "http://example.com/programming/cpp/cpp0/",
            "title": "111",
            "date_published": "2024-09-18T16:00:00.000Z",
            "content_html": "<h3 id=\"編譯器\"><a class=\"markdownIt-Anchor\" href=\"#編譯器\">#</a> 編譯器</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub25saW5lZ2RiLmNvbS9vbmxpbmVfYysrX2NvbXBpbGVyIw==\">線上編譯器</span><br>\n編譯器是用於將高階語言（如 C++、Java、Python 等）的代碼轉換成低階語言（通常是機器碼），以便電腦執行。這個過程被稱為編譯，而執行編譯的工具就是編譯器。</p>\n<h2 id=\"基本架構及知識\"><a class=\"markdownIt-Anchor\" href=\"#基本架構及知識\">#</a> 基本架構及知識</h2>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span>   <span class=\"token comment\">// 引入 iostream 標頭檔</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span> <span class=\"token comment\">//std 命名空間</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 程式碼主體</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 跟編譯器說程式結束 (雖然不影響結果，但通常會加)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"1-標頭檔\"><a class=\"markdownIt-Anchor\" href=\"#1-標頭檔\">#</a> 1. 標頭檔</h3>\n<p>簡單來說，是存放你要使用的功能的地方。</p>\n<p>例如，假如你想要使用 cout 這個功能，便需要在程式的開頭加上這行，因為 cout 是 iostream 裡的功能，所以必須 include 後才能使用。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbWFubGFpY2Vwc2EuZ2l0aHViLmlvLzIwMjAvMTAvMjEvMC0wLw==\">(by. 從零開始的演算法競賽)</span></p>\n<h3 id=\"2-命名空間\"><a class=\"markdownIt-Anchor\" href=\"#2-命名空間\">#</a> 2. 命名空間</h3>\n<p>若有兩個人同名，我們不知道要如何分辨時，我們可能會說：X 年 X 班的 XXX…</p>\n<p>在這裡概念是類似的！using namespace std 就是跟程式說，我接下來叫的人，是在 std 這個班級裡，這樣就不用每次叫人都加上班級了！<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbWFubGFpY2Vwc2EuZ2l0aHViLmlvLzIwMjAvMTAvMjEvMC0wLw==\">(by. 從零開始的演算法競賽)</span></p>\n<p>若沒加此行，在使用 <code>cin、cout</code>  時，需寫成 <code>std::cin、std::cout</code> ，非常麻煩。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/calculator/",
            "url": "http://example.com/calculator/",
            "title": "學期成績計算",
            "date_published": "2024-09-17T07:52:47.265Z",
            "content_html": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n        input, button {\n            font-family: Arial, sans-serif; /* 調整字體 */\n            padding: 12px;\n            margin-bottom: 20px;\n            border-radius: 6px; /* 圓弧效果 */\n            width: 100%;\n            font-size: 16px;\n            box-sizing: border-box;\n            transition: background-color 0.3s, color 0.3s, box-shadow 0.3s; /* 增加過渡效果 */\n        }\n\n        input::placeholder {\n            color: #888; /* 調整佔位符字體顏色 */\n        }\n\n        /* 系統深色模式 */\n        @media (prefers-color-scheme: dark) {\n            body {\n                background-color: #1e1e1e; /* 深灰背景 */\n                color: #e0e0e0;\n            }\n            input {\n                background-color: #333333; /* 深灰色輸入框 */\n                color: #e0e0e0;\n                border: 1px solid #444;\n            }\n            button {\n                background-color: #555; /* 灰色按鈕 */\n                color: white;\n                border: none;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加陰影 */\n                cursor: pointer; /* 鼠標懸停時顯示手形光標 */\n            }\n            button:hover {\n                background-color: #777; /* 按鈕懸停時變亮 */\n                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* 增強陰影效果 */\n                cursor: pointer; /* 鼠標懸停時顯示手形光標 */\n            }\n        }\n    </style>\n</head>\n<body>\n    <form id=\"score-form\">\n        <label for=\"score1\">第一次段考成績:</label>\n        <input type=\"number\" id=\"score1\" name=\"score1\" placeholder=\"必填\" min=\"0\" max=\"100\" required>\n\n        <label for=\"score2\">第二次段考成績:</label>\n        <input type=\"number\" id=\"score2\" name=\"score2\" placeholder=\"必填\" min=\"0\" max=\"100\" required>\n\n        <label for=\"score3\">第三次段考成績:</label>\n        <input type=\"number\" id=\"score3\" name=\"score3\" placeholder=\"選填\" min=\"0\" max=\"100\">\n\n        <label for=\"score4\">平時成績:</label>\n        <input type=\"number\" id=\"score4\" name=\"score4\" placeholder=\"選填\" min=\"0\" max=\"100\">\n\n        <label for=\"previous_score\">上學期成績:</label>\n        <input type=\"number\" id=\"previous_score\" name=\"previous_score\" placeholder=\"選填\" min=\"0\" max=\"100\">\n\n        <button type=\"submit\">計算</button>\n    </form>\n\n    <h2>計算結果</h2>\n    <p id=\"result\">計算結果僅供參考，祝段考順利！</p>\n\n    <script>\n        document.getElementById('score-form').addEventListener('submit', function(event) {\n            event.preventDefault();\n\n            const getInputValue = (id) => parseFloat(document.getElementById(id).value);\n            const roundToOneDecimal = (num) => parseFloat(num.toFixed(1));\n\n            const score1 = getInputValue('score1');\n            const score2 = getInputValue('score2');\n            const score3 = getInputValue('score3');\n            const score4 = getInputValue('score4');\n            const previousScore = getInputValue('previous_score');\n\n            const weightedScore1 = roundToOneDecimal(score1 * 0.2);\n            const weightedScore2 = roundToOneDecimal(score2 * 0.2);\n            const weightedScore3 = isNaN(score3) ? 0 : roundToOneDecimal(score3 * 0.3);\n            const weightedScore4 = isNaN(score4) ? 0 : roundToOneDecimal(score4 * 0.3);\n            const totalScore = roundToOneDecimal(weightedScore1 + weightedScore2 + weightedScore3 + weightedScore4);\n\n            let responseMessage = \"\";\n\n            const calculateRequiredScore = (currentTotal, weight) => roundToOneDecimal((59.5 - currentTotal) / weight);\n            const calculateRequiredBothSemesters = (currentTotal, weight) => roundToOneDecimal((120 - previousScore - currentTotal) / weight);\n\n            if (isNaN(score3) && isNaN(score4) && isNaN(previousScore)) {\n                responseMessage = `總分(三段+平時)至少為 ${calculateRequiredScore(weightedScore1 + weightedScore2, 0.6)*2} 分。`;\n            } else if (!isNaN(score3) && isNaN(score4) && isNaN(previousScore)) {\n                const requiredScore4 = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore3, 0.3);\n                responseMessage = `平時成績至少為 ${requiredScore4} 分。`;\n            } else if (isNaN(score3) && !isNaN(score4) && isNaN(previousScore)) {\n                const requiredScore3 = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore4, 0.3);\n                responseMessage = `第三次段考至少為 ${requiredScore3} 分。`;\n            } else if (isNaN(score3) && isNaN(score4) && !isNaN(previousScore)) {\n                const requiredScoreThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2, 0.6);\n                const requiredScoreBothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2, 0.6);\n                responseMessage = `本學期要通過總分至少為 ${requiredScoreThisSemester} 分。\\n兩學期皆通過總分至少為 ${requiredScoreBothSemesters} 分。`;\n            } else if (!isNaN(score3) && !isNaN(score4) && isNaN(previousScore)) {\n                responseMessage = totalScore >= 59.5 ? `恭喜本學期通過\\n(本學期成績 ${totalScore} 分)` : `本學期未通過\\n(本學期成績 ${totalScore} 分)`;\n            } else if (!isNaN(score3) && isNaN(score4) && !isNaN(previousScore)) {\n                const requiredScore4ThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore3, 0.3);\n                const requiredScore4BothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2 + weightedScore3, 0.3);\n                responseMessage = `本學期要通過，平時成績至少為 ${requiredScore4ThisSemester} 分。\\n兩學期皆通過，平時成績至少為 ${requiredScore4BothSemesters} 分。`;\n            } else if (isNaN(score3) && !isNaN(score4) && !isNaN(previousScore)) {\n                const requiredScore3ThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore4, 0.3);\n                const requiredScore3BothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2 + weightedScore4, 0.3);\n                responseMessage = `本學期要通過，第三次段考至少為 ${requiredScore3ThisSemester} 分。\\n兩學期皆通過，第三次段考至少為 ${requiredScore3BothSemesters} 分。`;\n            } else if (!isNaN(score3) && !isNaN(score4) && !isNaN(previousScore)) {\n                if ((totalScore + previousScore) >= 119.5) {\n                    responseMessage = `恭喜兩學期皆通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                } else if (totalScore >= 59.5) {\n                    responseMessage = `僅有本學期通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                } else if (previousScore >= 60) {\n                    responseMessage = `僅有上學期通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                } else {\n                    responseMessage = `本學期及上學期皆未通過\\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;\n                }\n            }\n            document.getElementById('result').innerText = responseMessage;\n        });\n    </script>\n</body>\n</html>\n\n<details><summary>成績計算方式及說明</summary><div>\n<h1 id=\"成績計算方式\"><a class=\"markdownIt-Anchor\" href=\"#成績計算方式\">#</a> 成績計算方式</h1>\n<h3 id=\"學期成績計算\"><a class=\"markdownIt-Anchor\" href=\"#學期成績計算\">#</a> 學期成績計算</h3>\n<ol>\n<li>第一、二次段考：各佔 20%</li>\n<li>三段、平時成績：各佔 30%</li>\n<li><ins>學期成績採四捨五入至整數位</ins></li>\n</ol>\n<h3 id=\"學年成績計算需輸入上學期成績\"><a class=\"markdownIt-Anchor\" href=\"#學年成績計算需輸入上學期成績\">#</a> 學年成績計算（需輸入上學期成績）</h3>\n<ol>\n<li>上、下學期成績：各佔 50%</li>\n<li><ins>學年成績採四捨五入至小數點後第一位</ins><br>\n</br></li>\n</ol>\n<h1 id=\"輸出內容說明\"><a class=\"markdownIt-Anchor\" href=\"#輸出內容說明\">#</a> 輸出內容說明</h1>\n<h3 id=\"若僅輸入第一-二次段考成績\"><a class=\"markdownIt-Anchor\" href=\"#若僅輸入第一-二次段考成績\">#</a> 若僅輸入第一、二次段考成績</h3>\n<ol>\n<li>若無上學期成績：輸出本學期通過 第三次段考和平時成績 最低所需的分數。</li>\n<li>若有上學期成績：額外輸出兩學期皆通過 第三次段考和平時成績 最低所需的分數。</li>\n</ol>\n<h3 id=\"若輸入兩次段考成績及三段或平時成績其中一項\"><a class=\"markdownIt-Anchor\" href=\"#若輸入兩次段考成績及三段或平時成績其中一項\">#</a> 若輸入兩次段考成績及三段或平時成績其中一項</h3>\n<ol>\n<li>若無上學期成績：輸出本學期通過 另一項 最低所需的分數。</li>\n<li>若有上學期成績：額外輸出兩學期皆通過 另一項 最低所需的分數。</li>\n</ol>\n<h3 id=\"若輸入所有成績\"><a class=\"markdownIt-Anchor\" href=\"#若輸入所有成績\">#</a> 若輸入所有成績</h3>\n<ol>\n<li>若無上學期成績：輸出本學期是否通過。</li>\n<li>若有上學期成績：輸出兩學期通過情況。</li>\n</ol>\n</div></details>\n",
            "tags": []
        },
        {
            "id": "http://example.com/code-highlight/",
            "url": "http://example.com/code-highlight/",
            "title": "Code Highlight Style test",
            "date_published": "2019-07-25T08:43:00.000Z",
            "content_html": "<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdobGlnaHRqcy5vcmc=\">https://highlightjs.org</span></p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-plain\" data-language=\"plain\"><code class=\"language-plain\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-rust\" data-language=\"rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[derive(Debug)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">enum</span> <span class=\"token type-definition class-name\">State</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Start</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">Transient</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">Closed</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">From</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&amp;</span><span class=\"token lifetime-annotation symbol\">'a</span> <span class=\"token keyword\">str</span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">from</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token lifetime-annotation symbol\">'a</span> <span class=\"token keyword\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">match</span> s <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string\">\"start\"</span> <span class=\"token operator\">=></span> <span class=\"token class-name\">State</span><span class=\"token punctuation\">::</span><span class=\"token class-name\">Start</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"closed\"</span> <span class=\"token operator\">=></span> <span class=\"token class-name\">State</span><span class=\"token punctuation\">::</span><span class=\"token class-name\">Closed</span><span class=\"token punctuation\">,</span>\n            _ <span class=\"token operator\">=></span> <span class=\"token macro property\">unreachable!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"apples\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"count\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"sensitive\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"oranges\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"count\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">17500</span><span class=\"token punctuation\">,</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"sensitive\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@requires_authorization</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">somefunc</span><span class=\"token punctuation\">(</span>param1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> param2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">r'''A docstring'''</span>\n    <span class=\"token keyword\">if</span> param1 <span class=\"token operator\">></span> param2<span class=\"token punctuation\">:</span> <span class=\"token comment\"># interesting</span>\n        <span class=\"token keyword\">print</span> <span class=\"token string\">'Gre\\'ater'</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>param2 <span class=\"token operator\">-</span> param1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> 0b10l<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">None</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''interpreter\n... prompt'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>application/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">function</span> <span class=\"token function\">$init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">checked</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>title<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- here goes the rest of the page --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">$initHighlight</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">block<span class=\"token punctuation\">,</span> cls</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\bno\\-highlight\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n             <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> class=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cls<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/* handle exception */</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> classes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">checkCondition</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>web<span class=\"token operator\">-</span>component<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span>block<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>web<span class=\"token operator\">-</span>component<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> $initHighlight<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">/* An annoying \"Hello World\" example */</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello, World!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n  unordered_map <span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">></span> m<span class=\"token punctuation\">;</span>\n  m<span class=\"token punctuation\">[</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\\\\\\\\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this is an error</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">2e3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12l</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"topic\"</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"id\"</span> <span class=\"token keyword\">serial</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"forum_id\"</span> <span class=\"token keyword\">integer</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"subject\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"topic\"</span>\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> forum_id <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"forum_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">REFERENCES</span> <span class=\"token string\">\"forum\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Initials</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token string\">\"topic\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"forum_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"subject\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D''artagnian'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-objectivec\" data-language=\"objectivec\"><code class=\"language-objectivec\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">import</span> <span class=\"token expression\"><span class=\"token operator\">&lt;</span>UIKit<span class=\"token operator\">/</span>UIKit<span class=\"token punctuation\">.</span>h<span class=\"token operator\">></span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">import</span> <span class=\"token string\">\"Dependency.h\"</span></span>\n\n<span class=\"token keyword\">@protocol</span> WorldDataSource\n<span class=\"token operator\">@</span>optional\n<span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>NSString<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>worldName<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">@</span>required\n<span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">)</span>allowsToLive<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@end</span>\n\n<span class=\"token keyword\">@property</span> <span class=\"token punctuation\">(</span>nonatomic<span class=\"token punctuation\">,</span> readonly<span class=\"token punctuation\">)</span> NSString <span class=\"token operator\">*</span>title<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>IBAction<span class=\"token punctuation\">)</span> show<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * @author John Smith &lt;john.smith@example.com>\n*/</span>\n<span class=\"token keyword\">package</span> <span class=\"token namespace\">l2f<span class=\"token punctuation\">.</span>gameserver<span class=\"token punctuation\">.</span>model</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">L2Char</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">L2Object</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Short</span> <span class=\"token constant\">ERROR</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x0001</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    _ai <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Should not be called\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// wtf!?</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">Foundation</span>\n\n<span class=\"token attribute atrule\">@objc</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Entity</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token keyword\">var</span> age<span class=\"token punctuation\">:</span>  <span class=\"token class-name\">Int</span><span class=\"token operator\">!</span>\n\n  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/* /* ... */ */</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// Return a descriptive string for this person</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">description</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">String</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">name</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> is </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">age <span class=\"token operator\">+</span> offset</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> years old\"</span></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Chunkfive<span class=\"token punctuation\">;</span> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'Chunkfive.otf'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">body, .usertext</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #F0F0F0<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #600<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Chunkfive<span class=\"token punctuation\">,</span> sans<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>print.css<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> print</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token selector\">a[href^=http]::after</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>href<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># The Greeter class</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeter</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">@name</span> <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span>capitalize\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">salute</span></span>\n    puts <span class=\"token string-literal\"><span class=\"token string\">\"Hello </span><span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#&#123;</span><span class=\"token content\"><span class=\"token variable\">@name</span></span><span class=\"token delimiter punctuation\">&#125;</span></span><span class=\"token string\">!\"</span></span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\ng <span class=\"token operator\">=</span> <span class=\"token class-name\">Greeter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"world\"</span></span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>salute<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\"><span class=\"token comment\"># Makefile</span>\n\nBUILDDIR      <span class=\"token operator\">=</span> _build\nEXTRAS       <span class=\"token operator\">?=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILDDIR<span class=\"token punctuation\">)</span>/extras\n\n<span class=\"token builtin-target builtin\">.PHONY</span><span class=\"token punctuation\">:</span> main clean\n\n<span class=\"token target symbol\">main</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token operator\">@</span>echo <span class=\"token string\">\"Building main facility...\"</span>\n\tbuild_main <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILDDIR<span class=\"token punctuation\">)</span>\n\n<span class=\"token target symbol\">clean</span><span class=\"token punctuation\">:</span>\n\trm -rf <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILDDIR<span class=\"token punctuation\">)</span>/*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    ch <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token builtin\">float64</span><span class=\"token punctuation\">)</span>\n    ch <span class=\"token operator\">&lt;-</span> <span class=\"token number\">1.0e10</span>    <span class=\"token comment\">// magic number</span>\n    x<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span> ch\n    <span class=\"token keyword\">defer</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">`exitting now\\`</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">go</span> <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\">###### CONFIG</span>\n<span class=\"token assign-left variable\">ACCEPTED_HOSTS</span><span class=\"token operator\">=</span><span class=\"token string\">\"/root/.hag_accepted.conf\"</span>\n<span class=\"token assign-left variable\">BE_VERBOSE</span><span class=\"token operator\">=</span>false\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token environment constant\">$UID</span>\"</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Superuser rights required\"</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token function-name function\">genApacheConf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"# Host <span class=\"token variable\">$&#123;HOME_DIR&#125;</span><span class=\"token variable\">$1</span>/<span class=\"token variable\">$2</span> :\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\">; boilerplate</span>\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">package</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"<span class=\"token inner-value\">some_name</span>\"</span>\n<span class=\"token key attr-name\">authors</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">[\"Author\"]</span>\n<span class=\"token key attr-name\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"This is \\</span>\na description\"\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">[lib</span><span class=\"token punctuation\">]</span></span>]\n<span class=\"token key attr-name\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">$&#123;NAME&#125;</span>\n<span class=\"token key attr-name\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">True</span>\n<span class=\"token key attr-name\">auto</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">no</span>\n<span class=\"token key attr-name\">counter</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">1_000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/hello-world/",
            "url": "http://example.com/hello-world/",
            "title": "Hello World",
            "date_published": "2013-12-24T09:49:32.000Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cDovL3plc3BpYS50dy9oZXhv\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cDovL3plc3BpYS50dy9oZXhvL2RvY3M=\">documentation</span> to learn how to use.</p>\n",
            "tags": []
        }
    ]
}