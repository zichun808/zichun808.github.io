{
    "version": "https://jsonfeed.org/version/1",
    "title": "一位就讀資訊工程學系的學生 • All posts by \"面試\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/09/15/interview-prepare/",
            "url": "http://example.com/2024/09/15/interview-prepare/",
            "title": "資工系面試準備",
            "date_published": "2024-09-14T16:00:00.000Z",
            "content_html": "<h2>自我介紹</h2>\n<details><summary>自我介紹</summary>\n<p>教授好，我是XXX，目前就讀於桃園市立XX高中。\n學習程式設計的時間約1年半，在高中時期也有接觸過資訊安全、人工智慧及機器學習。\n除了參與許多課程外，我也經常參加實體活動與同樣對資訊領域有熱忱的同儕交流。</p>\n</details>\n<details><summary>個人能力特質</summary>\n<p>我覺得最能代表我的三個人格特質分別是</p>\n<ul>\n<li>團隊合作 (做小論文)</li>\n<li>多元探索 (學不同領域的知識)</li>\n<li>堅持不懈 (有耐心的Debug)</li>\n</ul>\n</details>\n<details><summary>參加過的課程/活動</summary>\n<p>我印象深刻的有</p>\n<ul>\n<li>SITCON 學生計算機年會</li>\n<li>資安暑訓營</li>\n<li>AIS3 Junior</li>\n<li>AIGO</li>\n<li>中興大學 機器學習先修課程</li>\n</ul>\n</details>\n<details><summary>程式學習經歷</summary>\n<p>在升上高一前，我僅有學過Scratch。而我是在高一下資訊課接觸到C++並漸漸產生興趣的。</p>\n<p>在上學校資訊課程時，我發現我們班或者說我們學校，對於程式有興趣的人非常少。\n在四月初，學校資訊老師注意到我的能力並建議我去參加六月的APCS。經過一番思索，我認為確實是個不錯的挑戰，於是便開始準備檢定並積極練習考古題(這次成績是觀念與實作題皆為三級分，而此時我學習C++約4個月)，這樣的成績讓我對自己的能力更有了信心也萌發了就讀資工系的念頭。</p>\n</details>\n<details><summary>資安學習經歷</summary>\n<p>我第一次接觸資安是因為點到了釣魚連結。在這之後，就查詢了許多相關資料。升上高中後參加了許多課程來精進自己的資安知識及能力。\n主要的課程有:</p>\n<ul>\n<li>教育部的資安暑訓營</li>\n<li>AIS3 Junior</li>\n</ul>\n<p>我覺得比較新奇的經驗是在AIS3 Junior中，學習到的攻擊人工智慧的方法。</p>\n</details>\n<details><summary>機器學習經歷</summary>\n<p>我在去年年底參加了中興大學的機器學習先修課程。\n這門課程是開給高中生的，所以是從最基本的演算法和常見的學習方式開始，慢慢講到支持向量機、決策樹和隨機森林。</p>\n</details>\n<h2>大學問題</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQHN1aWZlbmcvc3BlY2lhbDExMA==\">嘉義臺南高雄心得</span></p>\n<details><summary>為何選擇嘉義大學資工系?</summary>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ob21lLmdhbWVyLmNvbS50dy9hcnR3b3JrLnBocD9zbj00NzU1NjUy\">面試心得</span></p>\n</details>\n<details><summary>為何選擇高雄大學資工系?</summary>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQGFzZTEyMzQ1NjM2LzExME5VS3NwZWNpYWw=\">面試心得1</span>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQHJlYWw3NjYwL1NrU0p2WHkzSw==\">面試心得2</span>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQ19WZ0ZMLVRRb0stNUR6X09uRFd4UQ==\">面試心得3</span></p>\n<ul>\n<li>自我介紹(家庭概況)</li>\n<li>APCS學習的心路歷程\n<ul>\n<li>用什麼語言寫?</li>\n<li>觀念題與實作題是幾級分?</li>\n<li>對自己的成績滿不滿意，為什麼?</li>\n</ul>\n</li>\n<li>未來目標與讀書計畫</li>\n<li>邏輯答題</li>\n</ul>\n<blockquote>\n<p>在這個環節結束之後就會開始談談自己了，這時候就是你準備的書面資料最重要的部分了，教授會開始從你的書面資料，或是他既有的問題開始發問。</p>\n</blockquote>\n</details>\n<details><summary>為何選擇臺南大學資工系?</summary>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQEF0ZXRvL1MxSXNlMzF3aQ==\">面試心得</span></p>\n<ul>\n<li>印象深刻的題目</li>\n</ul>\n<p>貴系在許多人工智慧、資訊安全領域競賽皆有獲得十分亮眼的成績。\n此外，在大二開設數位電路系統及相關實習課程。因為我在高二時有上交大ewant的生活中的機器人課程</p>\n</details>\n<details><summary>為什麼我們要錄取你?</summary>\n</details>\n<h2>面試問題</h2>\n<details><summary>人工智慧跟資工系有什麼關係？</summary>\n<p>我認為AI十分仰賴資訊科學的基礎理論，像是演算法、資料結構和數學，這些都是資工系會學到的知識。</p>\n</details>\n<details><summary>APCS準備及競賽心得</summary>\n</details>\n<details><summary>未來目標&amp;讀書計畫</summary>\n</details>\n<h2>程式經歷</h2>\n<details><summary>如何Debug</summary>\n<ul>\n<li>將自己的想法與程式碼邏輯默念確認</li>\n<li>將重要變數輸出確認是否錯誤</li>\n<li>中斷點 assert ==( 條件式為False時停下 )==</li>\n<li>利用const避免常數值被修改</li>\n<li>排版及有意義的變數名稱</li>\n</ul>\n</details>\n<details><summary>如何解決問題</summary>\n<p>我覺得寫程式與解數學題目很類似，先分析目前狀況和需求，再用當下想到的最佳解法去解決問題，並且行動前能明確地知道「為何現在需要這麼做？」、「這麼做的利弊分別是什麼？需要注意哪些地方？」</p>\n</details>\n<h2>程式問題</h2>\n<details><summary>印象最深刻的題目</summary>\n<blockquote>\n<p>題目要去維護一個 Stack，然後會有 push、pop 跟求極值的操作。一開始我是用 vector 模擬並使用遍歷的方式去求極值，後來我新建兩個stack去記錄當前極值。</p>\n</blockquote>\n<p>教授：這樣的時間複雜度是多少？\n我：原先遍例的作法是O(n)但是因為會有𝑛個操作所以總複雜度是O(n^2^)，而新建 stack 的作法可以用O(1)的複雜度求極值，這樣的總複雜度就可以壓到O(n)。\n&lt;hexoPostRenderCodeBlock&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&lt;bits/stdc++.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stack&lt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;&gt; stk, mns, mxs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; tp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(cin&gt;&gt;tp){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tp == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;&amp; !stk.&lt;span class=&quot;built_in&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stk.&lt;span class=&quot;built_in&quot;&gt;pop&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mns.&lt;span class=&quot;built_in&quot;&gt;pop&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mxs.&lt;span class=&quot;built_in&quot;&gt;pop&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tp == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; k; cin &gt;&gt; k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stk.&lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt;(k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(stk.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;() == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;){ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mns.&lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt;(k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mxs.&lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt;(k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mns.&lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(k, mns.&lt;span class=&quot;built_in&quot;&gt;top&lt;/span&gt;()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mxs.&lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(k, mxs.&lt;span class=&quot;built_in&quot;&gt;top&lt;/span&gt;()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tp == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) { &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cout &lt;&lt; mns.&lt;span class=&quot;built_in&quot;&gt;top&lt;/span&gt;() &lt;&lt; &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;&lt; mxs.&lt;span class=&quot;built_in&quot;&gt;top&lt;/span&gt;() &lt;&lt; &lt;span class=&quot;string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/hexoPostRenderCodeBlock&gt;</p>\n</details>\n<details><summary>遇到的困難與解決</summary>\n</details>\n<details><summary>物件導向程式設計</summary>\n</details>\n<details><summary>排序演算法</summary>\n<h3>Quick sort (快速排序)</h3>\n<blockquote>\n<p>快速排序以二元樹的前序走訪為基礎</p>\n</blockquote>\n<p>(1) 以陣列取出一個數字做為基準值。\n(2) 將大於基準值的元素放到基準值後面，小於或等於的元素放到前面。\n(3) 再對左右區間重複上述步驟，直到所有區間都只有一個數存在。</p>\n<p>==時間複雜度==\nQuick sort的基準值若選擇陣列中央，就能分割成一個較平衡二元樹，高度接近log n。其中每層需進行n次比較與交換，所以複雜度接近 O(nlogn)。</p>\n<p>==注意==\n若陣列中資料以排序或接近排序完成，則在分割時會產生歪斜的二元樹，使高度接近n，因而使複雜度變為 O(n^2^)。\n可以利用隨機選擇基準值位置避免。</p>\n<hr>\n<h3>Merge sort (合併排序)</h3>\n<blockquote>\n<p>合併排序是以分治法為基礎的演算法</p>\n</blockquote>\n<p>(1) 將一個大數列分割成兩個小數列。\n(2) 將這些小數列再各切一半，直到每個數列只剩一個元素。\n(3) 合併兩個大小相等的數列並排序，直到只剩一個大數列。</p>\n<p>==時間複雜度==\nMerge sort的每一層需要進行n次的比較與移動，且二元樹的高度為log n。所以複雜度為 O(nlogn)</p>\n<p>==缺點==\n除了要排序的資料外，還得另外準備一個陣列進行合併，需要花費較大的記憶體空間。</p>\n</details>\n<details><summary>搜尋演算法</summary>\n<h3>Binary search (二分搜)</h3>\n</details>\n<details><summary>埃氏篩法</summary>\n</details>\n<details><summary>約瑟夫問題</summary>\n</details>\n<details><summary>四則運算</summary>\n<blockquote>\n<p>給一個運算式的字串</p>\n</blockquote>\n<p>怎麼分辨數字和符號？\n：利用它們的 ascii 值來分辨</p>\n<p>怎麼處理先乘除後加減？\n：用一個 linked list 把東西存起來，然後由前往後遍歷，遇到乘或除就把左右數字相乘除，然後放回去。做完之後會只剩數字和加減法，就一樣的動作重複就好。</p>\n<p>怎麼處理括號？\n：用遞迴處理</p>\n<p>如果三個數字相乘的情況會怎樣？\n：<em>在白板上模擬一次給教授看</em></p>\n<p>你的解法複雜度多少？</p>\n<p>如果有一個運算符號是由右到左結合怎麼辦？\n：往後找直到他不再出現，然後用一樣的方法從後做回來</p>\n<p>教授：你的解法是對的，是跟我們的解法一樣好的，但這題其實用 stack 就好。\n教授：<em>開始解釋用 stack 的作法</em></p>\n<p>教授：還有一分鐘，有什麼想問的嗎？</p>\n<p>：特殊選才會重視學生的在校成績嗎？\n教授：不會，像我們也沒看到你的成績單，我們是要招有特殊才能的人進來，人不可能樣樣都好對吧，你是希望我們看還是不希望？\n：不希望（尷尬笑）</p>\n</details>\n<details><summary>資料結構</summary>\n</details>\n<details><summary>動態規劃</summary>\n</details>\n<details><summary>遞迴</summary>\n</details>\n<h2>觀念問題</h2>\n<details><summary>甚麼是樹?</summary>\n</details>\n<details><summary>如何建構唯一樹?</summary>\n<p>教授 : 你會怎麼用前序遍歷和中序遍歷序列構造出一棵樹?\n我 : 前序序列的第一個就是根，在中序序列中找到他就可以分出左右子樹，然後把前序的開頭變成下一個，中序的左邊傳下去遞迴，回傳目前子樹的根再接上去就可以蓋出唯一一棵樹了。\n教授 : 用前序遍歷和中序遍歷序列下建構出唯一樹的方法會有限制嗎?\n我 : 只要他的序列給的是節點的編號不是什麼其他的東西就一定可以做到吧。(我這裡默認每個節點的編號都是不一樣的，花了一點時間解釋給教授)</p>\n</details>\n<details><summary>標頭檔、命名空間、作用域</summary>\n<h4>1. 標頭檔（Header File）：</h4>\n<p>標頭檔通常包含程式碼的宣告和定義，並提供給其他程式檔案引用。在C和C++等語言中，標頭檔的副檔名通常是.h。\n標頭檔的目的是將程式碼模組化，使得程式能夠分割成更小的、可管理的部分。它通常包含函式原型、類別宣告、宏定義等。\n使用標頭檔可以讓程式檔案更清晰，也可以避免重複定義的問題。</p>\n<h4>2. 命名空間（Namespace）：</h4>\n<p>命名空間是一種將程式碼模組化的機制，用來防止命名衝突。它允許你將相關的函式、類別、變數等放在一個命名空間中，以區分不同的程式碼模組。\n在C++中，你可以使用namespace關鍵字來定義命名空間。例如：\n&lt;hexoPostRenderCodeBlock&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; MyNamespace {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/hexoPostRenderCodeBlock&gt;\n這樣，myFunction 就被包裝在 MyNamespace 命名空間中，防止與其他相似名稱的函式發生衝突。</p>\n<h4>3. 作用域（Scope）：</h4>\n<p>作用域指的是變數或函式的可見範圍。在不同的地方定義的變數和函式可能有不同的作用域。\n在C++中，作用域的範圍可以是區塊（由花括號 {} 定義）、函式、類別等。變數和函式通常只在其定義的作用域中可見。\n作用域規則也涵蓋了變數的生命週期，即變數在其作用域內有效，一旦離開作用域就會被銷毀。\n總體來說，標頭檔用於將程式碼分離和組織，命名空間用於防止命名衝突，作用域則確定變數和函式的可見性和生命週期。這些概念都是編程中組織和管理程式碼的重要手段。</p>\n</details>\n<details><summary>深度學習與機器學習的差異</summary>\n</details>\n<details><summary>參考 Reference 是什麼?</summary>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQGFzZTEyMzQ1NjM2L3JlZmVyZW5jZSNQYXNzLWJ5LXZhbHVl\">參考，英文Reference</span></p>\n<p>簡單來說，大家都有被取綽號的經驗吧，像是：\n當別人叫我的時候，就可能會叫綽號，我都會知道別人在叫我\n不管你用哪個名詞叫我，我還是我</p>\n<p>Reference有點像這種感覺\n就是一個變數，但是它有很多很多個名字\n換句話說\n一個變數，它除了自己的名字外，還有別名</p>\n<p>所謂參考，就是一個變數，我們給他另外一個別名\n無論叫它自己本來的名字，還是參考的名字，都是在講同一個記憶體位置</p>\n<p>Pass by value/address</p>\n<p>Pass by value\n在傳值的時候，把一個數字傳過去，之後那邊再開一個記憶體空間來存它\n所以當收到value的function結束後，函式內的數值就會不見了</p>\n<p>Pass by address\n我們傳的東西，並不是一個數值，而是一個指標\n我們利用指標去找同一塊記憶體位置，去進行運算，所以會改變原本的數值，函式結束時，數值亦仍存在</p>\n<p>Pass by value 只有傳值過去，那邊的空間與這邊的空間都沒有關係\nPass by address 透過指標，去找同一塊記憶體空間，改變裡面的數值</p>\n<p>Pass by reference\nPass by reference是一種傳遞參數的方式\n今天傳遞的東西是reference\n被傳遞的參數，在這個function會有一個新的別名\n這個別名只能在這個function中用</p>\n</details>\n<details><summary>Stack、Queue差別</summary>\n</details>\n<h2>資安問題</h2>\n<details><summary>你覺得甚麼是資安?</summary>\n<p>資訊安全是指保護資訊系統和數據不受未經授權的存取、破壞或洩露。\n主要目的是保護資訊的機密性、完整性和可用性也就是我們常說的資安鐵三角CIA。</p>\n<h4>機密性(Confidentiality):</h4>\n<ul>\n<li>保障企業所有資訊只有「取得授權者」可獲取，維護企業與用戶資訊的保密和機密性。</li>\n</ul>\n<h4>完整性(Integrity)</h4>\n<ul>\n<li>保障資訊不被未經授權的方式修改或竄寫，確保資訊準確度與完整性。</li>\n</ul>\n<h4>可用性(Availability)</h4>\n<ul>\n<li>保障資訊的流暢性，讓資訊可被授權者隨時取用，不因任何因素而中斷。</li>\n</ul>\n<p>在這樣充斥著釣魚連結及網路詐騙的現代，我認為學習基本的資訊安全是十分重要的。</p>\n</details>\n<details><summary>會哪些資安相關的東西?</summary>\n<p>我比較熟悉網頁安全，那也會使用IDA進行反編譯及逆向後分析組合語言。</p>\n</details>\n<p>講師上課並未提及，不過因為我很感興趣，所以在下課後查詢了相關資料。</p>\n<details><summary>如何防範 Prompt Injection</summary>\n</details>\n<details><summary>如何防範 Adversarial attack</summary>\n<p>目前公認的防禦方法為 Adversarial Training，也就是將針對模型攻擊產生的 Adversarial Example 放回訓練資料中，訓練讓模型下次看到時便不要在出錯。這樣的訓練便比原本的訓練多了很多倍運算需求，而結果也還有待加強。以 Cifar 10 為例，正常訓練的模型能得到約 90%的準確率，攻擊後會降到 0 %。而 Adversairal Training 的結果在正常範例能得到約 80%的準確率，而攻擊後則是守住約40–60% 的準確率。\n<img data-src=\"https://hackmd.io/_uploads/HkUmZxf30.png\" alt=\"image\"></p>\n</details>\n<h2>學習提問</h2>\n<details><summary>介紹學校資訊課的規劃與安排</summary>\n</details>\n<details><summary>學過那些程式語言、怎麼學的?</summary>\n</details>\n<details><summary>學校有資訊相關社團嗎?</summary>\n</details>\n<details><summary>程式合作經驗</summary>\n<ul>\n<li>因為未來寫程式是要和別人合作的，那你有可能會成為一個leader，你要怎麼解決成員的爭執</li>\n<li>那除了程式外 有沒有跟別人合作過的經驗?</li>\n<li>就以做報告來說好了，如果你跟組員遇到一些問題怎麼處理，像如果組員都不做事，你要怎麼辦?</li>\n</ul>\n</details>\n<details><summary>數學程度</summary>\n<p>我在高一時期，校排為1~2%。但到了高二，因為...數學校排變成9~10%</p>\n</details>\n<details><summary>英文程度</summary>\n</details>\n<details><summary>國文程度</summary>\n</details>\n<h2>未來展望</h2>\n<details><summary>高中到大學這段時間要做什麼</summary>\n</details>\n<details><summary>大學期間</summary>\n<ul>\n<li>與同學互相學習，交流並分享不同的想法、解法</li>\n<li>加入駭客社，與同樣對資安有興趣的同學們交流</li>\n<li>考取資安證照(如: IPAS)並與同學組隊參加競賽</li>\n<li>參加CPE檢定，測試自己</li>\n<li>學習閱讀論文，了解最新技術並為研究所做準備</li>\n</ul>\n</details>\n<details><summary>資安學習</summary>\n<p>臺灣好厲駭、AIS3</p>\n</details>\n<details><summary>未來升學規劃</summary>\n<p>攻讀國內研究所，繼續精進自己的知識及能力</p>\n</details>\n<h2>注意事項</h2>\n<ul>\n<li>自己的資料要讀熟</li>\n<li>重點是要理解 然後能完整的講出來\n不然教授一問你還是會破功</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQGphY2s0MTQwMi9pbnRlcnZpZXc=\">面試重點</span></p>\n",
            "tags": [
                "特殊選才",
                "面試"
            ]
        }
    ]
}