<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>一位就讀資訊工程學系的學生 • Posts by &#34;面試&#34; tag</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-TW</language>
        <pubDate>Sun, 15 Sep 2024 00:00:00 +0800</pubDate>
        <lastBuildDate>Sun, 15 Sep 2024 00:00:00 +0800</lastBuildDate>
        <category>標籤1</category>
        <category>標籤2</category>
        <category>特殊選才</category>
        <category>面試</category>
        <item>
            <guid isPermalink="true">http://example.com/2024/09/15/interview-prepare/</guid>
            <title>資工系面試準備</title>
            <link>http://example.com/2024/09/15/interview-prepare/</link>
            <category>特殊選才</category>
            <category>面試</category>
            <pubDate>Sun, 15 Sep 2024 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2&gt;自我介紹&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;自我介紹&lt;/summary&gt;
&lt;p&gt;教授好，我是XXX，目前就讀於桃園市立XX高中。
學習程式設計的時間約1年半，在高中時期也有接觸過資訊安全、人工智慧及機器學習。
除了參與許多課程外，我也經常參加實體活動與同樣對資訊領域有熱忱的同儕交流。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;個人能力特質&lt;/summary&gt;
&lt;p&gt;我覺得最能代表我的三個人格特質分別是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;團隊合作 (做小論文)&lt;/li&gt;
&lt;li&gt;多元探索 (學不同領域的知識)&lt;/li&gt;
&lt;li&gt;堅持不懈 (有耐心的Debug)&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;參加過的課程/活動&lt;/summary&gt;
&lt;p&gt;我印象深刻的有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SITCON 學生計算機年會&lt;/li&gt;
&lt;li&gt;資安暑訓營&lt;/li&gt;
&lt;li&gt;AIS3 Junior&lt;/li&gt;
&lt;li&gt;AIGO&lt;/li&gt;
&lt;li&gt;中興大學 機器學習先修課程&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;程式學習經歷&lt;/summary&gt;
&lt;p&gt;在升上高一前，我僅有學過Scratch。而我是在高一下資訊課接觸到C++並漸漸產生興趣的。&lt;/p&gt;
&lt;p&gt;在上學校資訊課程時，我發現我們班或者說我們學校，對於程式有興趣的人非常少。
在四月初，學校資訊老師注意到我的能力並建議我去參加六月的APCS。經過一番思索，我認為確實是個不錯的挑戰，於是便開始準備檢定並積極練習考古題(這次成績是觀念與實作題皆為三級分，而此時我學習C++約4個月)，這樣的成績讓我對自己的能力更有了信心也萌發了就讀資工系的念頭。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;資安學習經歷&lt;/summary&gt;
&lt;p&gt;我第一次接觸資安是因為點到了釣魚連結。在這之後，就查詢了許多相關資料。升上高中後參加了許多課程來精進自己的資安知識及能力。
主要的課程有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;教育部的資安暑訓營&lt;/li&gt;
&lt;li&gt;AIS3 Junior&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我覺得比較新奇的經驗是在AIS3 Junior中，學習到的攻擊人工智慧的方法。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;機器學習經歷&lt;/summary&gt;
&lt;p&gt;我在去年年底參加了中興大學的機器學習先修課程。
這門課程是開給高中生的，所以是從最基本的演算法和常見的學習方式開始，慢慢講到支持向量機、決策樹和隨機森林。&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;大學問題&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQHN1aWZlbmcvc3BlY2lhbDExMA==&#34;&gt;嘉義臺南高雄心得&lt;/span&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;為何選擇嘉義大學資工系?&lt;/summary&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ob21lLmdhbWVyLmNvbS50dy9hcnR3b3JrLnBocD9zbj00NzU1NjUy&#34;&gt;面試心得&lt;/span&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;為何選擇高雄大學資工系?&lt;/summary&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQGFzZTEyMzQ1NjM2LzExME5VS3NwZWNpYWw=&#34;&gt;面試心得1&lt;/span&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQHJlYWw3NjYwL1NrU0p2WHkzSw==&#34;&gt;面試心得2&lt;/span&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQ19WZ0ZMLVRRb0stNUR6X09uRFd4UQ==&#34;&gt;面試心得3&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自我介紹(家庭概況)&lt;/li&gt;
&lt;li&gt;APCS學習的心路歷程
&lt;ul&gt;
&lt;li&gt;用什麼語言寫?&lt;/li&gt;
&lt;li&gt;觀念題與實作題是幾級分?&lt;/li&gt;
&lt;li&gt;對自己的成績滿不滿意，為什麼?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;未來目標與讀書計畫&lt;/li&gt;
&lt;li&gt;邏輯答題&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在這個環節結束之後就會開始談談自己了，這時候就是你準備的書面資料最重要的部分了，教授會開始從你的書面資料，或是他既有的問題開始發問。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;為何選擇臺南大學資工系?&lt;/summary&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQEF0ZXRvL1MxSXNlMzF3aQ==&#34;&gt;面試心得&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;印象深刻的題目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;貴系在許多人工智慧、資訊安全領域競賽皆有獲得十分亮眼的成績。
此外，在大二開設數位電路系統及相關實習課程。因為我在高二時有上交大ewant的生活中的機器人課程&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;為什麼我們要錄取你?&lt;/summary&gt;
&lt;/details&gt;
&lt;h2&gt;面試問題&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;人工智慧跟資工系有什麼關係？&lt;/summary&gt;
&lt;p&gt;我認為AI十分仰賴資訊科學的基礎理論，像是演算法、資料結構和數學，這些都是資工系會學到的知識。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;APCS準備及競賽心得&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;未來目標&amp;amp;讀書計畫&lt;/summary&gt;
&lt;/details&gt;
&lt;h2&gt;程式經歷&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;如何Debug&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;將自己的想法與程式碼邏輯默念確認&lt;/li&gt;
&lt;li&gt;將重要變數輸出確認是否錯誤&lt;/li&gt;
&lt;li&gt;中斷點 assert ==( 條件式為False時停下 )==&lt;/li&gt;
&lt;li&gt;利用const避免常數值被修改&lt;/li&gt;
&lt;li&gt;排版及有意義的變數名稱&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;如何解決問題&lt;/summary&gt;
&lt;p&gt;我覺得寫程式與解數學題目很類似，先分析目前狀況和需求，再用當下想到的最佳解法去解決問題，並且行動前能明確地知道「為何現在需要這麼做？」、「這麼做的利弊分別是什麼？需要注意哪些地方？」&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;程式問題&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;印象最深刻的題目&lt;/summary&gt;
&lt;blockquote&gt;
&lt;p&gt;題目要去維護一個 Stack，然後會有 push、pop 跟求極值的操作。一開始我是用 vector 模擬並使用遍歷的方式去求極值，後來我新建兩個stack去記錄當前極值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;教授：這樣的時間複雜度是多少？
我：原先遍例的作法是O(n)但是因為會有𝑛個操作所以總複雜度是O(n^2^)，而新建 stack 的作法可以用O(1)的複雜度求極值，這樣的總複雜度就可以壓到O(n)。
&amp;lt;hexoPostRenderCodeBlock&amp;gt;&amp;lt;figure class=&amp;quot;highlight cpp&amp;quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td class=&amp;quot;gutter&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;2&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;3&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;4&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;5&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;6&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;7&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;8&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;9&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;10&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;11&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;12&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;13&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;14&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;15&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;16&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;17&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;18&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;19&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;20&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;21&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;22&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;23&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;24&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;25&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;26&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;27&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;28&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;29&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;30&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;31&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;meta&amp;quot;&amp;gt;#&amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;include&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;string&amp;quot;&amp;gt;&amp;lt;bits/stdc++.h&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;namespace&amp;lt;/span&amp;gt; std;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;function&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;type&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;title&amp;quot;&amp;gt;main&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;params&amp;quot;&amp;gt;()&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;{&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;    stack&amp;lt;&amp;lt;span class=&amp;quot;type&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;gt; stk, mns, mxs;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;    &amp;lt;span class=&amp;quot;type&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt; tp;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;    &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;while&amp;lt;/span&amp;gt;(cin&amp;gt;&amp;gt;tp){&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;        &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;if&amp;lt;/span&amp;gt;(tp == &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt; &amp;amp;&amp;amp; !stk.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;empty&amp;lt;/span&amp;gt;()) {&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            stk.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;pop&amp;lt;/span&amp;gt;();&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            mns.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;pop&amp;lt;/span&amp;gt;();&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            mxs.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;pop&amp;lt;/span&amp;gt;();&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;        }&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;        &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;else&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;if&amp;lt;/span&amp;gt;(tp == &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;){&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            &amp;lt;span class=&amp;quot;type&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt; k; cin &amp;gt;&amp;gt; k;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            stk.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;push&amp;lt;/span&amp;gt;(k);&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;if&amp;lt;/span&amp;gt;(stk.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;size&amp;lt;/span&amp;gt;() == &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;){ &amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;                mns.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;push&amp;lt;/span&amp;gt;(k);&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;                mxs.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;push&amp;lt;/span&amp;gt;(k);&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            }&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;else&amp;lt;/span&amp;gt;{&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;                mns.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;push&amp;lt;/span&amp;gt;(&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;min&amp;lt;/span&amp;gt;(k, mns.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;top&amp;lt;/span&amp;gt;()));&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;                mxs.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;push&amp;lt;/span&amp;gt;(&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;max&amp;lt;/span&amp;gt;(k, mxs.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;top&amp;lt;/span&amp;gt;()));&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            }&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;        }&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;        &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;else&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;if&amp;lt;/span&amp;gt;(tp == &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;2&amp;lt;/span&amp;gt;) { &amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;            cout &amp;lt;&amp;lt; mns.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;top&amp;lt;/span&amp;gt;() &amp;lt;&amp;lt; &amp;lt;span class=&amp;quot;string&amp;quot;&amp;gt;&amp;quot; &amp;quot;&amp;lt;/span&amp;gt; &amp;lt;&amp;lt; mxs.&amp;lt;span class=&amp;quot;built_in&amp;quot;&amp;gt;top&amp;lt;/span&amp;gt;() &amp;lt;&amp;lt; &amp;lt;span class=&amp;quot;string&amp;quot;&amp;gt;&amp;quot;\n&amp;quot;&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;        }&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;    }&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;    &amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;return&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;0&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/figure&amp;gt;&amp;lt;/hexoPostRenderCodeBlock&amp;gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;遇到的困難與解決&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;物件導向程式設計&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;排序演算法&lt;/summary&gt;
&lt;h3&gt;Quick sort (快速排序)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;快速排序以二元樹的前序走訪為基礎&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(1) 以陣列取出一個數字做為基準值。
(2) 將大於基準值的元素放到基準值後面，小於或等於的元素放到前面。
(3) 再對左右區間重複上述步驟，直到所有區間都只有一個數存在。&lt;/p&gt;
&lt;p&gt;==時間複雜度==
Quick sort的基準值若選擇陣列中央，就能分割成一個較平衡二元樹，高度接近log n。其中每層需進行n次比較與交換，所以複雜度接近 O(nlogn)。&lt;/p&gt;
&lt;p&gt;==注意==
若陣列中資料以排序或接近排序完成，則在分割時會產生歪斜的二元樹，使高度接近n，因而使複雜度變為 O(n^2^)。
可以利用隨機選擇基準值位置避免。&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Merge sort (合併排序)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;合併排序是以分治法為基礎的演算法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(1) 將一個大數列分割成兩個小數列。
(2) 將這些小數列再各切一半，直到每個數列只剩一個元素。
(3) 合併兩個大小相等的數列並排序，直到只剩一個大數列。&lt;/p&gt;
&lt;p&gt;==時間複雜度==
Merge sort的每一層需要進行n次的比較與移動，且二元樹的高度為log n。所以複雜度為 O(nlogn)&lt;/p&gt;
&lt;p&gt;==缺點==
除了要排序的資料外，還得另外準備一個陣列進行合併，需要花費較大的記憶體空間。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;搜尋演算法&lt;/summary&gt;
&lt;h3&gt;Binary search (二分搜)&lt;/h3&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;埃氏篩法&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;約瑟夫問題&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;四則運算&lt;/summary&gt;
&lt;blockquote&gt;
&lt;p&gt;給一個運算式的字串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;怎麼分辨數字和符號？
：利用它們的 ascii 值來分辨&lt;/p&gt;
&lt;p&gt;怎麼處理先乘除後加減？
：用一個 linked list 把東西存起來，然後由前往後遍歷，遇到乘或除就把左右數字相乘除，然後放回去。做完之後會只剩數字和加減法，就一樣的動作重複就好。&lt;/p&gt;
&lt;p&gt;怎麼處理括號？
：用遞迴處理&lt;/p&gt;
&lt;p&gt;如果三個數字相乘的情況會怎樣？
：&lt;em&gt;在白板上模擬一次給教授看&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;你的解法複雜度多少？&lt;/p&gt;
&lt;p&gt;如果有一個運算符號是由右到左結合怎麼辦？
：往後找直到他不再出現，然後用一樣的方法從後做回來&lt;/p&gt;
&lt;p&gt;教授：你的解法是對的，是跟我們的解法一樣好的，但這題其實用 stack 就好。
教授：&lt;em&gt;開始解釋用 stack 的作法&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;教授：還有一分鐘，有什麼想問的嗎？&lt;/p&gt;
&lt;p&gt;：特殊選才會重視學生的在校成績嗎？
教授：不會，像我們也沒看到你的成績單，我們是要招有特殊才能的人進來，人不可能樣樣都好對吧，你是希望我們看還是不希望？
：不希望（尷尬笑）&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;資料結構&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;動態規劃&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;遞迴&lt;/summary&gt;
&lt;/details&gt;
&lt;h2&gt;觀念問題&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;甚麼是樹?&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;如何建構唯一樹?&lt;/summary&gt;
&lt;p&gt;教授 : 你會怎麼用前序遍歷和中序遍歷序列構造出一棵樹?
我 : 前序序列的第一個就是根，在中序序列中找到他就可以分出左右子樹，然後把前序的開頭變成下一個，中序的左邊傳下去遞迴，回傳目前子樹的根再接上去就可以蓋出唯一一棵樹了。
教授 : 用前序遍歷和中序遍歷序列下建構出唯一樹的方法會有限制嗎?
我 : 只要他的序列給的是節點的編號不是什麼其他的東西就一定可以做到吧。(我這裡默認每個節點的編號都是不一樣的，花了一點時間解釋給教授)&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;標頭檔、命名空間、作用域&lt;/summary&gt;
&lt;h4&gt;1. 標頭檔（Header File）：&lt;/h4&gt;
&lt;p&gt;標頭檔通常包含程式碼的宣告和定義，並提供給其他程式檔案引用。在C和C++等語言中，標頭檔的副檔名通常是.h。
標頭檔的目的是將程式碼模組化，使得程式能夠分割成更小的、可管理的部分。它通常包含函式原型、類別宣告、宏定義等。
使用標頭檔可以讓程式檔案更清晰，也可以避免重複定義的問題。&lt;/p&gt;
&lt;h4&gt;2. 命名空間（Namespace）：&lt;/h4&gt;
&lt;p&gt;命名空間是一種將程式碼模組化的機制，用來防止命名衝突。它允許你將相關的函式、類別、變數等放在一個命名空間中，以區分不同的程式碼模組。
在C++中，你可以使用namespace關鍵字來定義命名空間。例如：
&amp;lt;hexoPostRenderCodeBlock&amp;gt;&amp;lt;figure class=&amp;quot;highlight cpp&amp;quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td class=&amp;quot;gutter&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;2&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;3&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;keyword&amp;quot;&amp;gt;namespace&amp;lt;/span&amp;gt; MyNamespace {&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;    &amp;lt;span class=&amp;quot;function&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;type&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;title&amp;quot;&amp;gt;myFunction&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;params&amp;quot;&amp;gt;()&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;line&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/figure&amp;gt;&amp;lt;/hexoPostRenderCodeBlock&amp;gt;
這樣，myFunction 就被包裝在 MyNamespace 命名空間中，防止與其他相似名稱的函式發生衝突。&lt;/p&gt;
&lt;h4&gt;3. 作用域（Scope）：&lt;/h4&gt;
&lt;p&gt;作用域指的是變數或函式的可見範圍。在不同的地方定義的變數和函式可能有不同的作用域。
在C++中，作用域的範圍可以是區塊（由花括號 {} 定義）、函式、類別等。變數和函式通常只在其定義的作用域中可見。
作用域規則也涵蓋了變數的生命週期，即變數在其作用域內有效，一旦離開作用域就會被銷毀。
總體來說，標頭檔用於將程式碼分離和組織，命名空間用於防止命名衝突，作用域則確定變數和函式的可見性和生命週期。這些概念都是編程中組織和管理程式碼的重要手段。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;深度學習與機器學習的差異&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;參考 Reference 是什麼?&lt;/summary&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQGFzZTEyMzQ1NjM2L3JlZmVyZW5jZSNQYXNzLWJ5LXZhbHVl&#34;&gt;參考，英文Reference&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;簡單來說，大家都有被取綽號的經驗吧，像是：
當別人叫我的時候，就可能會叫綽號，我都會知道別人在叫我
不管你用哪個名詞叫我，我還是我&lt;/p&gt;
&lt;p&gt;Reference有點像這種感覺
就是一個變數，但是它有很多很多個名字
換句話說
一個變數，它除了自己的名字外，還有別名&lt;/p&gt;
&lt;p&gt;所謂參考，就是一個變數，我們給他另外一個別名
無論叫它自己本來的名字，還是參考的名字，都是在講同一個記憶體位置&lt;/p&gt;
&lt;p&gt;Pass by value/address&lt;/p&gt;
&lt;p&gt;Pass by value
在傳值的時候，把一個數字傳過去，之後那邊再開一個記憶體空間來存它
所以當收到value的function結束後，函式內的數值就會不見了&lt;/p&gt;
&lt;p&gt;Pass by address
我們傳的東西，並不是一個數值，而是一個指標
我們利用指標去找同一塊記憶體位置，去進行運算，所以會改變原本的數值，函式結束時，數值亦仍存在&lt;/p&gt;
&lt;p&gt;Pass by value 只有傳值過去，那邊的空間與這邊的空間都沒有關係
Pass by address 透過指標，去找同一塊記憶體空間，改變裡面的數值&lt;/p&gt;
&lt;p&gt;Pass by reference
Pass by reference是一種傳遞參數的方式
今天傳遞的東西是reference
被傳遞的參數，在這個function會有一個新的別名
這個別名只能在這個function中用&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;Stack、Queue差別&lt;/summary&gt;
&lt;/details&gt;
&lt;h2&gt;資安問題&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;你覺得甚麼是資安?&lt;/summary&gt;
&lt;p&gt;資訊安全是指保護資訊系統和數據不受未經授權的存取、破壞或洩露。
主要目的是保護資訊的機密性、完整性和可用性也就是我們常說的資安鐵三角CIA。&lt;/p&gt;
&lt;h4&gt;機密性(Confidentiality):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;保障企業所有資訊只有「取得授權者」可獲取，維護企業與用戶資訊的保密和機密性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;完整性(Integrity)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;保障資訊不被未經授權的方式修改或竄寫，確保資訊準確度與完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;可用性(Availability)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;保障資訊的流暢性，讓資訊可被授權者隨時取用，不因任何因素而中斷。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在這樣充斥著釣魚連結及網路詐騙的現代，我認為學習基本的資訊安全是十分重要的。&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;會哪些資安相關的東西?&lt;/summary&gt;
&lt;p&gt;我比較熟悉網頁安全，那也會使用IDA進行反編譯及逆向後分析組合語言。&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;講師上課並未提及，不過因為我很感興趣，所以在下課後查詢了相關資料。&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;如何防範 Prompt Injection&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;如何防範 Adversarial attack&lt;/summary&gt;
&lt;p&gt;目前公認的防禦方法為 Adversarial Training，也就是將針對模型攻擊產生的 Adversarial Example 放回訓練資料中，訓練讓模型下次看到時便不要在出錯。這樣的訓練便比原本的訓練多了很多倍運算需求，而結果也還有待加強。以 Cifar 10 為例，正常訓練的模型能得到約 90%的準確率，攻擊後會降到 0 %。而 Adversairal Training 的結果在正常範例能得到約 80%的準確率，而攻擊後則是守住約40–60% 的準確率。
&lt;img data-src=&#34;https://hackmd.io/_uploads/HkUmZxf30.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;學習提問&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;介紹學校資訊課的規劃與安排&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;學過那些程式語言、怎麼學的?&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;學校有資訊相關社團嗎?&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;程式合作經驗&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;因為未來寫程式是要和別人合作的，那你有可能會成為一個leader，你要怎麼解決成員的爭執&lt;/li&gt;
&lt;li&gt;那除了程式外 有沒有跟別人合作過的經驗?&lt;/li&gt;
&lt;li&gt;就以做報告來說好了，如果你跟組員遇到一些問題怎麼處理，像如果組員都不做事，你要怎麼辦?&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;數學程度&lt;/summary&gt;
&lt;p&gt;我在高一時期，校排為1~2%。但到了高二，因為...數學校排變成9~10%&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;英文程度&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;國文程度&lt;/summary&gt;
&lt;/details&gt;
&lt;h2&gt;未來展望&lt;/h2&gt;
&lt;details&gt;&lt;summary&gt;高中到大學這段時間要做什麼&lt;/summary&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;大學期間&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;與同學互相學習，交流並分享不同的想法、解法&lt;/li&gt;
&lt;li&gt;加入駭客社，與同樣對資安有興趣的同學們交流&lt;/li&gt;
&lt;li&gt;考取資安證照(如: IPAS)並與同學組隊參加競賽&lt;/li&gt;
&lt;li&gt;參加CPE檢定，測試自己&lt;/li&gt;
&lt;li&gt;學習閱讀論文，了解最新技術並為研究所做準備&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;資安學習&lt;/summary&gt;
&lt;p&gt;臺灣好厲駭、AIS3&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;未來升學規劃&lt;/summary&gt;
&lt;p&gt;攻讀國內研究所，繼續精進自己的知識及能力&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;注意事項&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自己的資料要讀熟&lt;/li&gt;
&lt;li&gt;重點是要理解 然後能完整的講出來
不然教授一問你還是會破功&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQGphY2s0MTQwMi9pbnRlcnZpZXc=&#34;&gt;面試重點&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
